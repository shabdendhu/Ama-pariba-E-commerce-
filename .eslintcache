[{"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\index.js":"1","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\serviceWorker.js":"2","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\App.js":"3","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\reducer.js":"4","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\templet\\StateProvider.js":"5","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\store\\index.js":"6","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\templet\\appolo-provider.js":"7","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\templet\\MainComponent.jsx":"8","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\reducer\\index.js":"9","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\constants\\graphqlApi.js":"10","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\templet\\skeleton.js":"11","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\router.js":"12","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\reducer\\authorization.js":"13","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\templet\\notForBigschreen.js":"14","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\Product\\Productdetails.js":"15","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\login\\authorization.js":"16","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\shopby\\shop-by-items.js":"17","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\home\\index.js":"18","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\shopby\\show-items-by-id.js":"19","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\about\\about.js":"20","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\checkout\\Checkout.js":"21","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\profile\\my-account.js":"22","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\history\\my-history.js":"23","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\shop-by-category.js\\index.js":"24","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\shopby\\searchresult.js":"25","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\constants\\storage-keys.js":"26","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\constants\\authorization-constants.js":"27","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\templet\\header.js":"28","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\templet\\AddButton.js":"29","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\constants\\api.js":"30","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\login\\login.js":"31","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\login\\register.js":"32","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\templet\\banner.js":"33","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\Product\\Topdeals.js":"34","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\Product\\productsByCategorys.js":"35","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\Product\\Shopbyseasonsbest.js":"36","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\Product\\ProductCard.js":"37","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\category\\categoryCard.js":"38","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\checkout\\CheckoutProduct.js":"39","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\actions\\authorization.js":"40","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\Product\\Productfinder.js":"41","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\constants\\refreshToken.js":"42","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\templet\\header\\MobileHeader.js":"43","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\templet\\header\\DesktopHeader.js":"44","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\actions\\deviceRecognizer.js":"45","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\home\\index.js":"46","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\home\\leftNav.js":"47","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\home\\body.js":"48","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\Product\\LProduct.js":"49","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\profile\\my-address.js":"50","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\checkout\\dalivery-options.js":"51","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\checkout\\make-payment.js":"52","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\templet\\header\\TooltipOption.js":"53"},{"size":953,"mtime":1631544268495,"results":"54","hashOfConfig":"55"},{"size":5228,"mtime":1629744235008,"results":"56","hashOfConfig":"55"},{"size":919,"mtime":1629744234988,"results":"57","hashOfConfig":"55"},{"size":1072,"mtime":1629744235008,"results":"58","hashOfConfig":"55"},{"size":373,"mtime":1629744234998,"results":"59","hashOfConfig":"55"},{"size":151,"mtime":1629744235008,"results":"60","hashOfConfig":"55"},{"size":1018,"mtime":1630680144774,"results":"61","hashOfConfig":"55"},{"size":3285,"mtime":1629997844325,"results":"62","hashOfConfig":"55"},{"size":185,"mtime":1629744235008,"results":"63","hashOfConfig":"55"},{"size":491,"mtime":1636644630976,"results":"64","hashOfConfig":"55"},{"size":383,"mtime":1629744235003,"results":"65","hashOfConfig":"55"},{"size":2259,"mtime":1631544185223,"results":"66","hashOfConfig":"55"},{"size":980,"mtime":1629997514626,"results":"67","hashOfConfig":"55"},{"size":734,"mtime":1629744235003,"results":"68","hashOfConfig":"55"},{"size":5691,"mtime":1629994607796,"results":"69","hashOfConfig":"55"},{"size":2302,"mtime":1629994607796,"results":"70","hashOfConfig":"55"},{"size":677,"mtime":1629994607796,"results":"71","hashOfConfig":"55"},{"size":1687,"mtime":1630428635880,"results":"72","hashOfConfig":"55"},{"size":977,"mtime":1629994607796,"results":"73","hashOfConfig":"55"},{"size":281,"mtime":1629994607796,"results":"74","hashOfConfig":"55"},{"size":7102,"mtime":1630942771953,"results":"75","hashOfConfig":"55"},{"size":7687,"mtime":1630511245361,"results":"76","hashOfConfig":"55"},{"size":3684,"mtime":1630510288500,"results":"77","hashOfConfig":"55"},{"size":8379,"mtime":1629994607796,"results":"78","hashOfConfig":"55"},{"size":2175,"mtime":1629994607796,"results":"79","hashOfConfig":"55"},{"size":116,"mtime":1629995681070,"results":"80","hashOfConfig":"55"},{"size":123,"mtime":1629995703610,"results":"81","hashOfConfig":"55"},{"size":768,"mtime":1629904679203,"results":"82","hashOfConfig":"55"},{"size":7470,"mtime":1629744234998,"results":"83","hashOfConfig":"55"},{"size":2442,"mtime":1636644595131,"results":"84","hashOfConfig":"55"},{"size":7024,"mtime":1630511091566,"results":"85","hashOfConfig":"55"},{"size":9452,"mtime":1629744234998,"results":"86","hashOfConfig":"55"},{"size":2188,"mtime":1635439373082,"results":"87","hashOfConfig":"55"},{"size":13612,"mtime":1630428635871,"results":"88","hashOfConfig":"55"},{"size":2981,"mtime":1629744234998,"results":"89","hashOfConfig":"55"},{"size":4146,"mtime":1629744234998,"results":"90","hashOfConfig":"55"},{"size":12340,"mtime":1629744234988,"results":"91","hashOfConfig":"55"},{"size":4613,"mtime":1629744234998,"results":"92","hashOfConfig":"55"},{"size":4182,"mtime":1629744234998,"results":"93","hashOfConfig":"55"},{"size":342,"mtime":1629744235003,"results":"94","hashOfConfig":"55"},{"size":5079,"mtime":1629744234998,"results":"95","hashOfConfig":"55"},{"size":680,"mtime":1629744235003,"results":"96","hashOfConfig":"55"},{"size":12693,"mtime":1630949803911,"results":"97","hashOfConfig":"55"},{"size":10313,"mtime":1643473450833,"results":"98","hashOfConfig":"55"},{"size":253,"mtime":1629997734326,"results":"99","hashOfConfig":"55"},{"size":866,"mtime":1630428635873,"results":"100","hashOfConfig":"55"},{"size":2806,"mtime":1630428635874,"results":"101","hashOfConfig":"55"},{"size":22732,"mtime":1630428635872,"results":"102","hashOfConfig":"55"},{"size":11782,"mtime":1639233965448,"results":"103","hashOfConfig":"55"},{"size":2675,"mtime":1630949226805,"results":"104","hashOfConfig":"55"},{"size":305,"mtime":1630949699642,"results":"105","hashOfConfig":"55"},{"size":1078,"mtime":1631558565898,"results":"106","hashOfConfig":"55"},{"size":632,"mtime":1638280748241,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1d0nvdn",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"110"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"110"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"110"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"110"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"110"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"110"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"110"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"110"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"110"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"110"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"231"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"110"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"110"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\index.js",[],["242","243"],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\serviceWorker.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\App.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\reducer.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\templet\\StateProvider.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\store\\index.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\templet\\appolo-provider.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\templet\\MainComponent.jsx",["244","245","246","247","248"],"import React, { useState } from \"react\";\r\nimport routes from \"../../router\";\r\nimport PageSkeleton from \"./skeleton\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { deviceRecognizer } from \"../../actions/deviceRecognizer\";\r\n\r\nconst get_basket_by_idQuery = gql`\r\n  query ($id: Int!) {\r\n    get_basket_by_id(id: $id) {\r\n      id\r\n      product_id\r\n      user_id\r\n      product {\r\n        id\r\n        name\r\n        image\r\n      }\r\n      quantityOption {\r\n        id\r\n        quantity\r\n        product_id\r\n        base_price\r\n        discount\r\n        unit {\r\n          short_name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst MainComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const user_info = useSelector((state) => state.authorization.user_info);\r\n  const [{ basket }, dispacher] = useStateValue();\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const { networkStatus, called, loading, data } = useQuery(\r\n    get_basket_by_idQuery,\r\n    { variables: { id: user_info && user_info.id } }\r\n  );\r\n  useEffect(() => {\r\n    if (networkStatus === 7) {\r\n      const basketItems = data.get_basket_by_id;\r\n      console.log(\"basketItems\", basketItems);\r\n      basketItems.forEach((element) => {\r\n        console.log(\"element\", element);\r\n        dispacher({\r\n          type: \"ADD_TO_BASKET\",\r\n          item: {\r\n            id: element.product_id,\r\n            image: element.product.image,\r\n            name: element.product.name,\r\n            amount: `${element.quantityOption.quantity}/${element.quantityOption.unit.short_name}`,\r\n            price: Math.round(\r\n              element.quantityOption.base_price -\r\n                (element.quantityOption.base_price *\r\n                  element.quantityOption.discount) /\r\n                  100\r\n            ),\r\n            item_id: element.id,\r\n            quantityId: element.quantityOption.id,\r\n          },\r\n        });\r\n      });\r\n    }\r\n  }, [networkStatus]);\r\n  function handleWindowSizeChange() {\r\n    setWidth(window.innerWidth);\r\n  }\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleWindowSizeChange);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleWindowSizeChange);\r\n    };\r\n  }, []);\r\n\r\n  let isMobile = width <= 884 ? true : false;\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      deviceRecognizer({\r\n        is_mobile: isMobile,\r\n      })\r\n    );\r\n  }, [isMobile]);\r\n  return (\r\n    // <Provider store={store}>\r\n\r\n    <React.Suspense fallback={<PageSkeleton />}>\r\n      <Router>\r\n        <Switch>\r\n          {routes.map((route, idx) => {\r\n            return route.component ? (\r\n              <Route\r\n                key={idx}\r\n                path={route.path}\r\n                exact={route.exact}\r\n                render={(props) => <route.component {...props} />}\r\n              />\r\n            ) : null;\r\n          })}\r\n          <Redirect from=\"/\" to=\"/\" />\r\n        </Switch>\r\n      </Router>\r\n    </React.Suspense>\r\n    // </Provider>\r\n  );\r\n};\r\nexport default MainComponent;\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\reducer\\index.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\constants\\graphqlApi.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\templet\\skeleton.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\router.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\reducer\\authorization.js",["249"],"import {\r\n  USER_LOGGEDIN,\r\n  DEVICE_TYPE,\r\n} from \"../constants/authorization-constants\";\r\nimport { user_info, loggedin_as } from \"../constants/storage-keys\";\r\n\r\nconst Initialstate = {\r\n  is_loggedin: localStorage.getItem(user_info) !== null ? true : false,\r\n  loggedin_as: localStorage.getItem(loggedin_as),\r\n  user_info:\r\n    localStorage.getItem(user_info) !== null\r\n      ? JSON.parse(localStorage.getItem(user_info))\r\n      : null,\r\n \r\n};\r\nconst authorization = (state = Initialstate, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGGEDIN:\r\n      state = {\r\n        ...state,\r\n        is_loggedin: action.payload.is_loggedin,\r\n        loggedin_as: action.payload.loggedin_as,\r\n        user_info: action.payload.user_info,\r\n      };\r\n    case DEVICE_TYPE:\r\n      state = {\r\n        ...state,\r\n        device_type:action.payload.device_type,\r\n      };\r\n      break;\r\n    default:\r\n      state = { ...state };\r\n  }\r\n  return state;\r\n};\r\nexport default authorization;\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\templet\\notForBigschreen.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\Product\\Productdetails.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\login\\authorization.js",["250"],"import React, { useState } from \"react\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport Header from \"../templet/header\";\r\nimport Login from \"./login\";\r\nimport Register from \"./register\";\r\n\r\nconst Authentication = () => {\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const openPage = (page) => {\r\n    setActiveTab(page);\r\n  };\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div\r\n        style={{\r\n          backgroundColor: \"#efefef\",\r\n          // marginTop: \"48px\",\r\n          width: \"-webkit-fill-available\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n            fontSize: \"20px\",\r\n            height: \"50px\",\r\n            position: \"fixed\",\r\n            width: \"-webkit-fill-available\",\r\n            top: \"48px\",\r\n            zIndex: 99,\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              textAlign: \"center\",\r\n              borderRight: \"1px solid black\",\r\n              background: activeTab === 0 ? \"lightgreen\" : \"green\",\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              color: \"white\",\r\n            }}\r\n            \r\n            onClick={() => {\r\n              openPage(0);\r\n              console.log(activeTab);\r\n            }}\r\n          >\r\n            LogIn\r\n          </div>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              textAlign: \"center\",\r\n              background: activeTab === 0 ? \"green\" : \"lightgreen\",\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              color: \"white\",\r\n            }}\r\n            onClick={() => {\r\n              openPage(1);\r\n              console.log(activeTab);\r\n            }}\r\n          >\r\n            Register\r\n          </div>\r\n        </div>\r\n        {/* <SwipeableViews  index={activeTab}> */}\r\n          <div>{activeTab === 0 && <Login />}</div>\r\n          <div>{activeTab === 1 && <Register />}</div>\r\n        {/* </SwipeableViews> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Authentication;\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\shopby\\shop-by-items.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\home\\index.js",["251","252"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CategoryCard from \"../../Component/category/categoryCard\";\r\nimport Shopbyseasonsbest from \"../../Component/Product/Shopbyseasonsbest\";\r\nimport TopDeals from \"../../Component/Product/Topdeals\";\r\nimport HomeBanner from \"../../Component/templet/banner\";\r\nimport Header from \"../../Component/templet/header\";\r\nimport DesktopHome from '../../Component/home/index'\r\nconst style = {\r\n  header: {\r\n    // background: \"#efefef\",\r\n    background: \"white\",\r\n    margin: 0,\r\n    borderBottom: \"1px solid gray\",\r\n    borderTop: \"1px solid gray\",\r\n    // paddingBottom: \"5px\",\r\n    padding: \"5px\",\r\n    textAlign: \"center\",\r\n    // fontFamily: \"cursive\",\r\n  },\r\n  viewmore: {\r\n    textAlign: \"center\",\r\n    border: \"1px solid black\",\r\n    width: \"fit-content\",\r\n    padding: \"3px 100px\",\r\n    borderRadius: \"6px\",\r\n    background: \"#591a07\",\r\n    color: \"white\",\r\n    textDecoration: \"none\",\r\n  },\r\n};\r\n\r\nconst Home = () => {\r\n  const deviceType = useSelector((state) => state.authorization.device_type);\r\n  console.log(\"deviceType\", deviceType);\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {deviceType === \"mobile\" ? (\r\n        <div style={{ background: \"#efefef\" }}>\r\n          <HomeBanner />\r\n          <h3 style={style.header}>SHOP BY ITEM CATEGORY </h3>\r\n          <CategoryCard />\r\n          <h3 style={style.header}>TOP DEALS</h3>\r\n          <TopDeals />\r\n          <h3 style={style.header}>SHOP BY SEASON'S BEST</h3>\r\n          <Shopbyseasonsbest />\r\n          <HomeBanner />\r\n        </div>\r\n      ) : (\r\n       <DesktopHome/>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\shopby\\show-items-by-id.js",["253"],"import React from \"react\";\r\nimport Header from \"../../Component/templet/header\";\r\nimport HomeBanner from \"../../Component/templet/banner\";\r\nimport ProductsByCategory from \"../../Component/Product/productsByCategorys\";\r\nimport { useStateValue } from \"../../Component/templet/StateProvider\";\r\n\r\nconst ShopByCategory = () => {\r\n  const [{ basket }] = useStateValue();\r\n  var url = window.location.search;\r\n  var pagetitle = url.substring(url.lastIndexOf(\"=\") + 1);\r\n\r\n  //\r\n\r\n  // var count = {};\r\n  // basket.forEach(function (i) {\r\n  //   delete i.item_id;\r\n  //   // console.log(\"filterdObjfilterdObj\", i);\r\n  //   var key = JSON.stringify(i);\r\n  //   count[key] = (count[key] || 0) + 1;\r\n  //   // console.log(i.id);\r\n  // });\r\n  // console.log(\"countcountcount\", count);\r\n  //\r\n  return (\r\n    <>\r\n      <Header pagetitle={pagetitle} />\r\n      <div style={{ marginTop: \"50px\" }}>\r\n        <HomeBanner />\r\n        <ProductsByCategory />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShopByCategory;\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\about\\about.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\checkout\\Checkout.js",["254","255"],"import React from \"react\";\r\n// import \"./Checkout.css\";\r\nimport CheckoutProduct from \"../../Component/checkout/CheckoutProduct\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport Header from \"../../Component/templet/header\";\r\nimport { useStateValue } from \"../../Component/templet/StateProvider\";\r\nimport { getBasketTotal } from \"../../reducer\";\r\nimport { get_basket_items, make_new_order } from \"../../constants/api\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst EmptyBasketNotication = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <div\r\n      style={{\r\n        background: \"#efefef\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: \"170px\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <img\r\n        src=\"emptybasket.png\"\r\n        alt=\"emptybasket_icon\"\r\n        style={{ width: \"200px\", borderRadius: \"30px\" }}\r\n      />\r\n      <div> YOUR BASKET IS EMPTY</div>\r\n      {/* <div> */}\r\n      <button\r\n        onClick={() => {\r\n          history.push(\"/\");\r\n        }}\r\n        style={{\r\n          backgroundColor: \"#9e2121\",\r\n          margin: \"30px\",\r\n          height: \"35px\",\r\n          width: \"50%\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          outline: \"none\",\r\n          borderRadius: \"5px\",\r\n          fontSize: \"17px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-around\",\r\n        }}\r\n      >\r\n        START SHOPPING\r\n      </button>\r\n      {/* </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Checkout = () => {\r\n  const [{ basket }] = useStateValue();\r\n  // const [{ user }] = useStateValue();\r\n  // const isLoggedIn = useSelector((state) => state.authorization.is_loggedin);\r\n  const [apipauser, setApipauser] = useState(true);\r\n  // console.log(\"basket\", basket);\r\n  // var unique = [];\r\n  // var distinct = [];\r\n  // for (let i = 0; i < basket.length; i++) {\r\n  //   if (!unique[basket[i].id]) {\r\n  //     distinct.push(basket[i]);\r\n  //     unique[basket[i].id] = 1;\r\n  //   }\r\n  // }\r\n\r\n  console.log(basket);\r\n  const shorteddistinct = basket.sort((a, b) => {\r\n    return a.id - b.id;\r\n  });\r\n  console.log(\"distinct\", shorteddistinct);\r\n  const makeOrder = () => {\r\n    basket.forEach((item, index) => {\r\n      if (apipauser === true) {\r\n        setApipauser(false);\r\n        axios\r\n          .post(make_new_order, {\r\n            order_date: new Date(),\r\n            status: \"conformed\",\r\n            user_id: \"1\",\r\n            product_id: item.id,\r\n            product_amt: item.amount,\r\n          })\r\n          .then((response) => {\r\n            if (response.data.status === true) {\r\n              setApipauser(true);\r\n            }\r\n            console.log(response.data.message);\r\n          });\r\n      }\r\n    });\r\n  };\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .post(get_basket_items, {\r\n  //       user_id: 1,\r\n  //     })\r\n  //     .then((response) => {\r\n  //       console.log(\"response.data.data.insertId\", response.data.data);\r\n  //     });\r\n  // }, []);\r\n  return (\r\n    <>\r\n      <Header pagetitle=\"My Basket\" />\r\n      <div className=\"checkout\">\r\n        <div className=\"checkout__left\">\r\n          <div>\r\n            {basket.length === 0 ? (\r\n              <div>\r\n                <EmptyBasketNotication />\r\n              </div>\r\n            ) : (\r\n              <div style={{ background: \"#efefef\" }}>\r\n                {basket.length > 0 && (\r\n                  <div\r\n                  // style={{ position: \"fixed\" }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        height: \"40px\",\r\n                        padding: \"10px\",\r\n                        paddingBottom: \"10px\",\r\n                        backgroundColor: \"#2f8a74\",\r\n                        position: \"fixed\",\r\n                        bottom: 0,\r\n                        color: \"white\",\r\n                        width: \" -webkit-fill-available\",\r\n                      }}\r\n                    >\r\n                      <CurrencyFormat\r\n                        renderText={(value) => (\r\n                          <div>\r\n                            <span style={{ paddingBottom: \"10px\" }}>\r\n                              <b>Subtotal: </b>\r\n                              <span style={{ paddingLeft: \"5px\" }}>\r\n                                Rs: {value}\r\n                              </span>\r\n                              <br />\r\n                              <span>\r\n                                {basket.length}{\" \"}\r\n                                {basket.length === 1 ? \"Item\" : \"Items\"} in your\r\n                                basket\r\n                              </span>\r\n                            </span>\r\n                            <span\r\n                              style={{\r\n                                right: 0,\r\n                                position: \"absolute\",\r\n                                margin: \"-17px 6px 1px\",\r\n                              }}\r\n                            >\r\n                              <button\r\n                                onClick={() => {\r\n                                  makeOrder();\r\n                                }}\r\n                                className=\"customButton\"\r\n                              >\r\n                                CHECKOUT\r\n                              </button>\r\n                            </span>\r\n                          </div>\r\n                        )}\r\n                        desimalScale={2}\r\n                        value={getBasketTotal(basket)}\r\n                        displayType={\"text\"}\r\n                        thousendSeparetor={true}\r\n                        prifix={\"Rs\"}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                <div\r\n                  style={{\r\n                    background: \"white\",\r\n                    borderBottom: \"1px solid gray\",\r\n                    borderTop: \"1px solid gray\",\r\n                    // paddingBottom: \"5px\",\r\n                    padding: \"5px\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  YOUR BASKET\r\n                </div>\r\n                <div style={{ marginBottom: \"55px\" }}>\r\n                  {shorteddistinct.map((item, index) => (\r\n                    <CheckoutProduct\r\n                      key={item.item_id}\r\n                      // key={index}\r\n                      // count={count}\r\n                      item={item}\r\n                      id={item.id}\r\n                      image={item.image}\r\n                      price={item.price}\r\n                      amount={item.amount}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\profile\\my-account.js",["256","257","258"],"import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../Component/templet/header\";\r\n// import Edit from \"@material-ui/icons/EditIcon\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Drawer,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  user_info,\r\n} from \"../../constants/storage-keys\";\r\nimport { loggedinAction } from \"../../actions/authorization\";\r\nconst updateUserMutation = gql`\r\n  mutation ($id: Int, $name: String, $gender: String, $email_id: String) {\r\n    update_user(\r\n      input: { id: $id, name: $name, gender: $gender, email_id: $email_id }\r\n    ) {\r\n      status\r\n      message\r\n      data {\r\n        id\r\n        name\r\n        email_id\r\n        gender\r\n        dob\r\n        user_type\r\n        mobile_no\r\n        profile_logo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"96%\",\r\n  },\r\n}));\r\nconst MyAccount = () => {\r\n  const User_info = useSelector((state) => state.authorization.user_info);\r\n  console.log(\"user_info\", User_info);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(false);\r\n  const [UpdateMutation, updateRes] = useMutation(updateUserMutation);\r\n  const [userDetail, setUserDetail] = useState({\r\n    mobile_no: User_info.mobile_no,\r\n    email: User_info.email_id,\r\n    name: User_info.name,\r\n    gender: User_info.gender,\r\n    date_of_birth: User_info.dob,\r\n    profile_logo: User_info.profile_logo,\r\n  });\r\n  const rememberUserdata = (response) => {\r\n    localStorage.setItem(user_info, JSON.stringify(response));\r\n    dispatch(\r\n      loggedinAction({\r\n        is_loggedin: true,\r\n        loggedin_as: \"user\",\r\n        user_info: response,\r\n      })\r\n    );\r\n    // window.history.go(\"-1\");\r\n    console.log(\"data1\", response);\r\n  };\r\n  const UpdateUserDetail = () => {\r\n    UpdateMutation({\r\n      variables: {\r\n        id:User_info.id,\r\n        name: userDetail.name,\r\n        gender: userDetail.gender,\r\n        email_id: userDetail.email,\r\n        dob: userDetail.date_of_birth,\r\n        mobile_no:userDetail.mobile_no\r\n      },\r\n    }).then((res) => {\r\n      rememberUserdata(res.data.update_user.data);\r\n    });\r\n  };\r\n  const openDrawer = () => {\r\n    setOpen(true);\r\n  };\r\n  return (\r\n    <div>\r\n      <Header pagetitle={\"My Account\"} />\r\n      <div >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            padding: \"10px\",\r\n            background: \"#6d0f05\",\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          <span style={{ flex: 1 }}>\r\n            <img style={{ height: \"60px\" }} src={userDetail.profile_logo} />\r\n            <span\r\n              style={{\r\n                position: \"absolute\",\r\n                margin: \"-25px 0px 0px 37px\",\r\n                background: \"#00bd45\",\r\n                color: \"#ffffff\",\r\n                display: \"flex\",\r\n                borderRadius: \"38px\",\r\n                fontSize: \"14px\",\r\n                padding: \"2px\",\r\n              }}\r\n            >\r\n              <Edit style={{ fontSize: \"19px\" }} />\r\n            </span>\r\n          </span>\r\n          <span style={{ flex: 3, display: \"flex\", flexDirection: \"column\" }}>\r\n            <span\r\n              style={{\r\n                margin: \" 0px 0px 4px\",\r\n                fontSize: \"18px\",\r\n                fontWeight: 600,\r\n              }}\r\n            >\r\n              {userDetail.name}\r\n            </span>\r\n            <span>{userDetail.mobile_no}</span>\r\n            <span>{userDetail.email}</span>\r\n          </span>\r\n          <span\r\n            onClick={() => {\r\n              openDrawer();\r\n            }}\r\n          >\r\n            <Edit />\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <Drawer\r\n        // fullScreen\r\n        open={open}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        anchor=\"bottom\"\r\n        style={{ height: \"20px\" }}\r\n        // TransitionComponent={Transition}\r\n      >\r\n        <div\r\n          style={{\r\n            borderRadius: \"56px\",\r\n            position: \"fixed\",\r\n            margin: \"-17px 0px 0px\",\r\n            background: \"white\",\r\n            width: \"100%\",\r\n            height: \"37px\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            borderTop: \"2px solid #981515\",\r\n          }}\r\n        >\r\n          <div\r\n            onClick={() => {\r\n              setOpen(false);\r\n            }}\r\n            style={{\r\n              position: \"fixed\",\r\n              margin: \"-85px 5px 3px\",\r\n              background: \"white\",\r\n              borderRadius: \"24px\",\r\n              display: \"flex\",\r\n              color: \"#981515\",\r\n              border: \"1px solid #901818\",\r\n              padding: \"4px\",\r\n            }}\r\n          >\r\n            <Close />\r\n          </div>\r\n        </div>\r\n        <TextField\r\n          label=\" NAME\"\r\n          style={{ margin: \"5px\" }}\r\n          value={userDetail.name}\r\n          onChange={(e) => {\r\n            setUserDetail({ ...userDetail, name: e.target.value });\r\n          }}\r\n        />\r\n\r\n        <FormControl style={{ width: \"98%\", margin: \"5px\" }}>\r\n          <InputLabel>Gender</InputLabel>\r\n          <Select\r\n            value={userDetail.gender}\r\n            onChange={(e) => {\r\n              setUserDetail({ ...userDetail, gender: e.target.value });\r\n            }}\r\n          >\r\n            {/* {productCategory.map((item, index) => ( */}\r\n            <MenuItem value={\"male\"}>Male</MenuItem>\r\n            <MenuItem value={\"female\"}>Female</MenuItem>\r\n            <MenuItem value={\"others\"}>Others</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          label=\"EMAIIL\"\r\n          style={{ margin: \"5px\" }}\r\n          value={userDetail.email}\r\n          onChange={(e) => {\r\n            setUserDetail({ ...userDetail, email: e.target.value });\r\n          }}\r\n        />\r\n        <TextField\r\n          label=\"MOBILE\"\r\n          style={{ margin: \"5px\" }}\r\n          value={userDetail.mobile_no}\r\n          onChange={(e) => {\r\n            setUserDetail({ ...userDetail, mobile_no: e.target.value });\r\n          }}\r\n        />\r\n        <TextField\r\n          id=\"date\"\r\n          label=\"DATE OF BIRTH\"\r\n          type=\"date\"\r\n          // defaultValue=\"2017-05-24T10:30\"\r\n          className={classes.textField}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          value={userDetail.date_of_birth}\r\n          onChange={(e) => {\r\n            setUserDetail({ ...userDetail, date_of_birth: e.target.value });\r\n          }}\r\n        />\r\n        <div style={{ textAlign: \"center\", margin: \"15px  0px\" }}>\r\n          <button\r\n            onClick={() => {\r\n              UpdateUserDetail();\r\n            }}\r\n            style={{\r\n              border: \"none\",\r\n              background: \"#8c1002\",\r\n              color: \"white\",\r\n              padding: \"5px\",\r\n              borderRadius: \"5px\",\r\n              width: \"171px\",\r\n              height: \"29px\",\r\n              fontSize: \"15px\",\r\n            }}\r\n          >\r\n            Save Change\r\n          </button>\r\n        </div>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyAccount;\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\history\\my-history.js",["259","260","261","262","263","264"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ProductCard from \"../../Component/Product/ProductCard\";\r\nimport Header from \"../../Component/templet/header\";\r\n// import { user_history } from \"../../constants/api\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { Card } from \"@material-ui/core\";\r\n// import { user_info } from \"../../constants/storage-keys\";\r\nconst myHistoryQuery = gql`\r\n  query ($id: Int) {\r\n    get_allBasket(id: $id) {\r\n      id\r\n      createdAt\r\n      product {\r\n        id\r\n        name\r\n        image\r\n        rating\r\n      }\r\n      quantityOption {\r\n        id\r\n        quantity\r\n        # product_id\r\n        base_price\r\n        unit {\r\n          id\r\n          full_name\r\n          short_name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst HistoryCard = ({ item }) => {\r\n  // console.log(\"itemitem\",item)\r\n  return (\r\n    <Card\r\n      style={{\r\n        margin: \"1ch 4px 0ch\",\r\n        height: \"7ch\",\r\n        display: \"flex\",\r\n        position: \"relative\",\r\n        padding: \"5px\",\r\n      }}\r\n      onClick={() => {\r\n        window.location.href = `/search-results?id=${item.product.id}?name=${item.product.name}`;\r\n      }}\r\n    >\r\n      {/* <div style={{display:\"flex\"}}> */}\r\n      <div\r\n        style={{\r\n          flex: 1,\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <img style={{ height: \"50px\" }} src={item.product.image} />\r\n      </div>\r\n      <div style={{ flex: 5 }}>\r\n        <div style={{ margin: \"9px 4px -2px\" }}>\r\n          <span style={{ fontSize: \"17px\", }}>\r\n            {item.product.name}\r\n          </span>\r\n          <br />\r\n          <span style={{ fontWeight: 400, paddingTop: \"2px\",fontSize:'12px' }}>\r\n            {item.quantityOption.quantity}\r\n            {item.quantityOption.unit.short_name}\r\n          </span>\r\n        </div>\r\n        <div\r\n          style={{\r\n            fontWeight: 400,\r\n            fontSize: \"13px\",\r\n            position: \"absolute\",\r\n            right: 0,\r\n            paddingRight: \"5px\",\r\n            bottom: \"5px\",\r\n          }}\r\n        >\r\n          <span style={{color:'green'}}>On:</span> {item.createdAt}\r\n        </div>\r\n      </div>\r\n      {/* </div> */}\r\n      <span\r\n        style={{\r\n          width: \"10px\",\r\n          background: \"red\",\r\n          height: \"10px\",\r\n          margin: \"7px 7px 0px 0px\",\r\n          borderRadius: \"10px\",\r\n        }}\r\n      ></span>\r\n    </Card>\r\n  );\r\n};\r\nconst MyHistory = () => {\r\n  const user_info = useSelector((state) => state.authorization.user_info);\r\n  const [productHistory, setProductHistory] = useState([]);\r\n  const { networkStatus, called, loading, data } = useQuery(myHistoryQuery, {\r\n    variables: { id: user_info && user_info.id },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (networkStatus === 7) {\r\n      // console.log(\"history\", data.get_allBasket);\r\n      setProductHistory(data.get_allBasket);\r\n    }\r\n  }, [networkStatus]);\r\n  // useEffect(() => {\r\n  //   axios.post(user_history, { user_id: user_info.id }).then((response) => {\r\n  //     if (response.data.status) {\r\n  //       setProductHistory(response.data.data);\r\n  //     }\r\n  //     console.log(response.data.data);\r\n  //   });\r\n  // }, []);\r\n  return (\r\n    <div>\r\n      <Header pagetitle=\"My History\" />\r\n      <div style={{ marginTop: \"5px\", background: \"#efefef\" }}>\r\n        {productHistory.map((item) => (\r\n          // <ProductCard key={item.product_id} data={item} />\r\n          <HistoryCard key={item.id} item={item} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyHistory;\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\shop-by-category.js\\index.js",["265","266","267","268","269","270"],"import React from \"react\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport { makeStyles, Typography } from \"@material-ui/core\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport Header from \"../../Component/templet/header\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\n//\r\nimport Label from \"@material-ui/icons/Label\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\n\r\n//\r\nconst useTreeItemStyles = makeStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  content: {\r\n    color: theme.palette.text.secondary,\r\n    borderTopRightRadius: theme.spacing(2),\r\n    borderBottomRightRadius: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    \"&$expanded\": {\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n    \"&$focused, &$selected, &$selected$focused\": {\r\n      backgroundColor: `var(--tree-view-bg-color, ${theme.palette.action.selected})`,\r\n      color: \"var(--tree-view-color)\",\r\n    },\r\n  },\r\n  group: {\r\n    marginLeft: 0,\r\n    \"& $content\": {\r\n      paddingLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  expanded: {},\r\n  selected: {},\r\n  focused: {},\r\n  label: {\r\n    fontWeight: \"inherit\",\r\n    color: \"inherit\",\r\n  },\r\n  labelRoot: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0.5, 0, 0.5, 0.5),\r\n  },\r\n  labelIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  labelText: {\r\n    fontWeight: \"inherit\",\r\n    flexGrow: 1,\r\n  },\r\n}));\r\nfunction StyledTreeItem(props) {\r\n  const classes = useTreeItemStyles();\r\n  const {\r\n    bgColor,\r\n    color,\r\n    labelIcon: LabelIcon,\r\n    labelInfo,\r\n    labelText,\r\n    ...other\r\n  } = props;\r\n\r\n  return (\r\n    <TreeItem\r\n      label={\r\n        <div className={classes.labelRoot}>\r\n          <LabelIcon\r\n            color=\"inherit\"\r\n            className={classes.labelIcon}\r\n            style={{ fontSize: \"20px\" }}\r\n          />\r\n          <Typography\r\n            variant=\"body2\"\r\n            className={classes.labelText}\r\n            style={{ color: \"red\", fontSize: \"20px\" }}\r\n          >\r\n            {labelText}\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"inherit\">\r\n            {labelInfo}\r\n          </Typography>\r\n        </div>\r\n      }\r\n      style={{\r\n        \"--tree-view-color\": color,\r\n        \"--tree-view-bg-color\": bgColor,\r\n        fontSize: \"1px\",\r\n      }}\r\n      classes={{\r\n        root: classes.root,\r\n        content: classes.content,\r\n        expanded: classes.expanded,\r\n        selected: classes.selected,\r\n        focused: classes.focused,\r\n        group: classes.group,\r\n        label: classes.label,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\n// StyledTreeItem.propTypes = {\r\n//   bgColor: PropTypes.string,\r\n//   color: PropTypes.string,\r\n//   labelIcon: PropTypes.elementType.isRequired,\r\n//   labelInfo: PropTypes.string,\r\n//   labelText: PropTypes.string.isRequired,\r\n// };\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    // height: 240,\r\n    // flexGrow: 1,\r\n    // maxWidth: 400,\r\n  },\r\n  root2: {\r\n    color: \"red\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\",\r\n    },\r\n  },\r\n});\r\nconst Dataforloop = [\r\n  {\r\n    id: \" 1\",\r\n    year: \"fruits\",\r\n    months: [\r\n      { id: \"1\", name: \"fresh fruits\", fiels: [\"Apple\", \"Grapes\"] },\r\n      { id: \"2\", name: \"chopped fruits\", fiels: [\"Pinaple\", \"Guava\"] },\r\n      { id: \"3\", name: \"fruit Juice\", fiels: [\"Watermillon\", \"mango\"] },\r\n    ],\r\n  },\r\n  {\r\n    id: \" 2\",\r\n    year: \"fruits\",\r\n    months: [\r\n      { id: \"1\", name: \"fresh fruits\", fiels: [\"Apple\", \"Grapes\"] },\r\n      { id: \"2\", name: \"chopped fruits\", fiels: [\"Pinaple\", \"Guava\"] },\r\n      { id: \"3\", name: \"fruit Juice\", fiels: [\"Watermillon\", \"mango\"] },\r\n    ],\r\n  },\r\n];\r\nconst ShopByItemCategory = () => {\r\n  const classes = useStyles();\r\n  //   const [years, setYears] = useState([]);\r\n  //   useEffect(() => {\r\n  //     axios\r\n  //       .get(\"https://careipro.com:9000/site-management/get-visiters-log-files\")\r\n  //       .then(({ data }) => {\r\n  //         setYears(data);\r\n  //         let current_year = data[data.length - 1];\r\n  //         let current_month = current_year.months[current_year.months.length - 1];\r\n  //         let file = current_month.fiels[current_month.fiels.length - 1];\r\n  //         //   onOpenFile(current_year.year, current_month.name, file);\r\n  //       });\r\n  //   }, []);\r\n  return (\r\n    <>\r\n      <Header pagetitle={\"pagetitle\"} />\r\n      <div style={{ marginTop: \"50px\" }}>\r\n        {/* <HomeBanner /> */}\r\n        {/* <ProductsByCategory /> */}\r\n\r\n        {/* <TreeView\r\n          className={classes.root}\r\n          defaultCollapseIcon={<ExpandMoreIcon />}\r\n          defaultExpandIcon={<ChevronRightIcon />}\r\n        >\r\n          {Dataforloop.map((year, index) => (\r\n            <TreeItem\r\n              style={{ color: \"red\", fontSize: \"30px\" }}\r\n              nodeId={year.id}\r\n              key={`year-${year.id}`}\r\n              label={year.year}\r\n            >\r\n              {year.months.map((month) => (\r\n                <TreeItem\r\n                  style={{ color: \"red\" }}\r\n                  nodeId={`${year.id}-${month.id}`}\r\n                  key={`${year.id}-${month.id}`}\r\n                  label={month.name}\r\n                >\r\n                  {month.fiels.map((file) => (\r\n                    <TreeItem\r\n                      nodeId={`${year.id}-${month.id}-${file}`}\r\n                      key={`${year.id}-${month.id}-${file}`}\r\n                      label={file}\r\n                      //   onClick={() => {\r\n                      //     onOpenFile(year.year, month.name, file);\r\n                      //   }}\r\n                    />\r\n                  ))}\r\n                </TreeItem>\r\n              ))}\r\n            </TreeItem>\r\n          ))}\r\n        </TreeView> */}\r\n        <TreeView\r\n          aria-label=\"gmail\"\r\n          className={classes.root}\r\n          defaultExpanded={[\"3\"]}\r\n          defaultCollapseIcon={<ArrowDropDownIcon />}\r\n          defaultExpandIcon={<ArrowRightIcon />}\r\n          defaultEndIcon={<div style={{ width: 24 }} />}\r\n        >\r\n          {/* {Dataforloop.map((year, index) => ( */}\r\n          {Dataforloop.map((year, index) => (\r\n            <StyledTreeItem\r\n              nodeId={year.id}\r\n              key={`year-${year.id}`}\r\n              //   label={year.year}\r\n              nodeId={year.id}\r\n              labelText={year.year}\r\n              labelIcon={Label}\r\n            >\r\n              {year.months.map((month) => (\r\n                <StyledTreeItem\r\n                  nodeId={`${year.id}-${month.id}`}\r\n                  key={`${year.id}-${month.id}`}\r\n                  //   label={month.name}\r\n                  labelText={month.name}\r\n                  labelIcon={SupervisorAccountIcon}\r\n                  labelInfo=\"90\"\r\n                  color=\"#1a73e8\"\r\n                  bgColor=\"#e8f0fe\"\r\n                >\r\n                  {month.fiels.map((file) => (\r\n                    <StyledTreeItem\r\n                      nodeId={`${year.id}-${month.id}-${file}`}\r\n                      key={`${year.id}-${month.id}-${file}`}\r\n                      labelText={file}\r\n                      labelIcon={SupervisorAccountIcon}\r\n                      labelInfo=\"90\"\r\n                      color=\"#1a73e8\"\r\n                      bgColor=\"#e8f0fe\"\r\n                    />\r\n                  ))}\r\n                </StyledTreeItem>\r\n              ))}\r\n            </StyledTreeItem>\r\n            //   <StyledTreeItem nodeId=\"4\" labelText=\"History\" labelIcon={Label} />\r\n          ))}\r\n        </TreeView>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShopByItemCategory;\r\n//\r\n\r\n//\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\shopby\\searchresult.js",["271","272"],"import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport ProductCard from \"../../Component/Product/ProductCard\";\r\nimport HomeBanner from \"../../Component/templet/banner\";\r\nimport Header from \"../../Component/templet/header\";\r\nimport { gql, useLazyQuery } from \"@apollo/client\";\r\nconst SearchProductQuery = gql`\r\n  query ($name: String!) {\r\n    get_product_by_name(name: $name) {\r\n      id\r\n      name\r\n      # category_id\r\n      # brand_id\r\n      image\r\n      rating\r\n      # created_by\r\n      # updated_by\r\n      # is_active\r\n      Category: category {\r\n        name\r\n        id\r\n        # created_by\r\n        # updated_by\r\n        # is_active\r\n      }\r\n      Brand: brand {\r\n        id\r\n        name\r\n        company_name\r\n        ratings\r\n        # created_by\r\n        # updated_by\r\n        # is_active\r\n      }\r\n      Quantity: qntity {\r\n        id\r\n        quantity\r\n        product_id\r\n        base_price\r\n        unit_id\r\n        discount\r\n        # created_by\r\n        # updated_by\r\n        # is_active\r\n        Unit: unit {\r\n          full_name\r\n          short_name\r\n          # created_by\r\n          # updated_by\r\n          # is_active\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst Searchresult = () => {\r\n  const [searchProduct, setSearchProduct] = useState([]);\r\n  var url = window.location.search;\r\n\r\n  var searchText = url.substring(url.lastIndexOf(\"=\") + 1).replace(\"%20\", \" \");\r\n  const [SearchProduct, SearchProductRes] = useLazyQuery(SearchProductQuery);\r\n \r\n  useEffect(() => {\r\n    if (searchText.length > 0) {\r\n      SearchProduct({\r\n        variables: {\r\n          name: searchText,\r\n        },\r\n      });\r\n    }\r\n  }, [searchText]);\r\n  useEffect(() => {\r\n    if (SearchProductRes.data) {\r\n      setSearchProduct(SearchProductRes.data.get_product_by_name);\r\n    }\r\n  }, [SearchProductRes.data]);\r\n  return (\r\n    <div>\r\n      <Header pagetitle={searchText} />\r\n      <div style={{ marginTop: \"50px\" }}>\r\n        <HomeBanner />\r\n        {searchProduct.map((item, index) => (\r\n          <ProductCard key={index} data={item} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Searchresult;\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\constants\\storage-keys.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\constants\\authorization-constants.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\templet\\header.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\templet\\AddButton.js",["273","274","275","276","277","278","279"],"import { CircularProgress, IconButton } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Add from \"@material-ui/icons/Add\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport axios from \"axios\";\r\nimport { useStateValue } from \"../templet/StateProvider\";\r\nimport {\r\n  add_product_to_basket,\r\n  remove_product_from_basket,\r\n} from \"../../constants/api\";\r\nconst AddToBasketMutation = gql`\r\n  mutation ($product_id: Int!, $quantity_id: Int!, $user_id: Int!) {\r\n    create_new_basket(\r\n      input: {\r\n        product_id: $product_id\r\n        quantity_id: $quantity_id\r\n        user_id: $user_id\r\n      }\r\n    ) {\r\n      id\r\n      product_id\r\n      product {\r\n        id\r\n        name\r\n        image\r\n      }\r\n      quantityOption {\r\n        id\r\n        quantity\r\n        unit {\r\n          short_name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst RemoveFromBasket = gql`\r\n  mutation ($id: Int!, $is_active: Int) {\r\n    update_basket(input: { id: $id, is_active: $is_active }) {\r\n      status\r\n    }\r\n  }\r\n`;\r\nconst CustomButton = ({\r\n  id,\r\n  image,\r\n  name,\r\n  amount,\r\n  price,\r\n  stage,\r\n  count,\r\n  width,\r\n  item_id,\r\n  quantityId,\r\n}) => {\r\n  \r\n  const [{ basket }, dispacher] = useStateValue();\r\n  // console.log(\"basket\", count);\r\n  const [showLoader, setShowLoader] = useState(false);\r\n  const user_info = useSelector((state) => state.authorization.user_info);\r\n  const [basketItemId, setBasketItemId] = useState(item_id);\r\n  const isLoggedIn = useSelector((state) => state.authorization.is_loggedin);\r\n  const [itemAmt, setItemAmt] = useState(0);\r\n  const [AddMutation, addingres] = useMutation(AddToBasketMutation);\r\n  const [RemoveMutation, removeRes] = useMutation(RemoveFromBasket);\r\n  const AddtoBasketApi = () => {\r\n    setShowLoader(true);\r\n    // axios\r\n    //   .post(add_product_to_basket, {\r\n    //     user_id: user_info.id,\r\n    //     product_id: id,\r\n    //     product_qnt: amount,\r\n    //     product_price: price,\r\n    //     // product_count: \"7\",\r\n    //     product_name: name,\r\n    //     image_url: image,\r\n    //   })\r\n    //   .then((response) => {\r\n    //     console.log(response.data.data);\r\n    //     const AddResponse = response.data.data;\r\n    //     // setBasketItemId(AddResponse.id);\r\n    //     dispacher({\r\n    //       type: \"ADD_TO_BASKET\",\r\n    //       item: {\r\n    //         id: AddResponse.product_id,\r\n    //         image: AddResponse.image_url,\r\n    //         name: AddResponse.product_name,\r\n    //         amount: AddResponse.product_qnt,\r\n    //         price: AddResponse.product_name,\r\n    //         item_id: AddResponse.id,\r\n    //       },\r\n    //     });\r\n    //     if (response.data.status) {\r\n    //       setShowLoader(false);\r\n    //     }\r\n    //   });\r\n    setItemAmt(itemAmt + 1);\r\n    AddMutation({\r\n      variables: {\r\n        product_id: id,\r\n        quantity_id: quantityId,\r\n        user_id: user_info.id,\r\n      },\r\n    }).then((res) => {\r\n      const Res = res.data.create_new_basket;\r\n      // console.log(\"ADD_TO_BASKET\", Res);\r\n      dispacher({\r\n        type: \"ADD_TO_BASKET\",\r\n        item: {\r\n          id: Res.product.id,\r\n          image: Res.product.image,\r\n          name: Res.product.name,\r\n          quantityId: Res.quantityOption.id,\r\n          amount: amount,\r\n          price: price,\r\n          item_id: Res.id,\r\n        },\r\n      });\r\n      setShowLoader(false);\r\n    });\r\n  };\r\n  const RemoveProductFromBasket = () => {\r\n    // alert(item_id);\r\n    setShowLoader(true);\r\n\r\n    RemoveMutation({\r\n      variables: {\r\n        id: parseInt(item_id),\r\n        is_active: 0,\r\n      },\r\n    }).then((res) => {\r\n      // console.log(\"res\", res);\r\n      setShowLoader(false);\r\n    });\r\n    // axios\r\n    //   .post(remove_product_from_basket, {\r\n    //     // product_id: id,\r\n    //     // product_qnt: parseInt(amount),\r\n    //     // user_id: user_info[0].id,\r\n    //     item_id: item_id,\r\n    //   })\r\n    //   .then((response) => {\r\n    //     if (response.data.status) {\r\n    //       setShowLoader(false);\r\n    //     }\r\n    //     // console.log(response.data.data);\r\n    //   });\r\n  };\r\n\r\n  const addToBasket = () => {\r\n    // console.log(isLoggedIn);\r\n    if (isLoggedIn) {\r\n      AddtoBasketApi();\r\n    } else {\r\n      window.location.href = \"/login\";\r\n    }\r\n    // console.log(basket);\r\n  };\r\n  const removeFromBasket = () => {\r\n    setItemAmt(itemAmt - 1);\r\n    dispacher({\r\n      type: \"REMOVE_FROM_BASKET\",\r\n      item_id: parseInt(item_id),\r\n    });\r\n    RemoveProductFromBasket();\r\n  };\r\n  useEffect(() => {\r\n    // if (stage === \"remove\") {\r\n    if (count) {\r\n      setItemAmt(count);\r\n    }\r\n\r\n    // console.log(name, count);\r\n    // }\r\n  }, [count]);\r\n  useEffect(() => {\r\n    setBasketItemId(item_id);\r\n  }, [item_id]);\r\n  return (\r\n    <>\r\n      {/* {itemAmt == 0 ? \"this\" : itemAmt == -1 ? \"\" : \"\"} */}\r\n      {itemAmt === 0 ? (\r\n        <button\r\n          onClick={stage === \"add\" ? addToBasket : removeFromBasket}\r\n          style={{\r\n            backgroundColor: \"#9e2121\",\r\n            marginBottom: \"5px\",\r\n            marginLeft: \"5px\",\r\n            height: \"35px\",\r\n            width: width,\r\n            color: \"white\",\r\n            border: \"none\",\r\n            outline: \"none\",\r\n            borderRadius: \"5px\",\r\n            fontSize: \"15px\",\r\n          }}\r\n        >\r\n          {stage === \"add\" ? \"ADD\" : \"REMOVE\"}\r\n        </button>\r\n      ) : (\r\n        <div\r\n          onClick={() => {\r\n            itemAmt === 1 && stage === \"remove\" && removeFromBasket();\r\n          }}\r\n          style={{\r\n            backgroundColor: \"#9e2121\",\r\n            marginBottom: \"5px\",\r\n            marginLeft: \"5px\",\r\n            height: \"35px\",\r\n            width: width,\r\n            color: \"white\",\r\n            border: \"none\",\r\n            outline: \"none\",\r\n            borderRadius: \"5px\",\r\n            fontSize: \"17px\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          {itemAmt === 1 && stage === \"remove\" ? (\r\n            \"REMOVE\"\r\n          ) : (\r\n            <>\r\n              <IconButton\r\n                style={{ fontSize: \"24px\", fontWeight: 500, color: \"white\" }}\r\n                onClick={() => {\r\n                  addToBasket();\r\n                }}\r\n              >\r\n                <Add />\r\n              </IconButton>\r\n              <span style={{ fontSize: \"19px\", fontWeight: 500 }}>\r\n                {showLoader ? (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <CircularProgress\r\n                      style={{ width: \"25px\", height: \"25px\", color: \"white\" }}\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <span>{itemAmt}</span>\r\n                )}\r\n              </span>\r\n              <IconButton\r\n                style={{ fontSize: \"24px\", fontWeight: 500, color: \"white\" }}\r\n                onClick={() => {\r\n                  removeFromBasket();\r\n                }}\r\n              >\r\n                <Remove />\r\n              </IconButton>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomButton;\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\constants\\api.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\login\\login.js",["280","281","282","283","284"],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\nimport {\r\n  loggedin_as,\r\n  user_info,\r\n  auth_token,\r\n} from \"../../constants/storage-keys\";\r\nimport { useGoogleLogin } from \"react-google-login\";\r\nimport { loggedinAction } from \"../../actions/authorization\";\r\n// import { google_clint_id } from \"../../constants/api\";\r\nimport { refreshTokenSetup } from \"../../constants/refreshToken\";\r\nconst loginMutation = gql`\r\n  mutation ($email_id: String!, $password: String!) {\r\n    login(input: { email_id: $email_id, password: $password }) {\r\n      status\r\n      message\r\n      data {\r\n        id\r\n        name\r\n        email_id\r\n        gender\r\n        token\r\n        dob\r\n        user_type\r\n        mobile_no\r\n        profile_logo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Login = () => {\r\n  const [error, setError] = useState({ hasError: false, message: \"\" });\r\n  const dispatch = useDispatch();\r\n  const [userDetails, setUserDetails] = useState({\r\n    email_id: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const rememberUserdata = (response) => {\r\n    localStorage.setItem(user_info, JSON.stringify(response));\r\n    localStorage.setItem(loggedin_as, response.user_type);\r\n    localStorage.setItem(auth_token, response.token);\r\n    dispatch(\r\n      loggedinAction({\r\n        is_loggedin: true,\r\n        loggedin_as: \"user\",\r\n        user_info: response,\r\n      })\r\n    );\r\n    window.history.go(\"-1\");\r\n    console.log(\"data1\", response);\r\n  };\r\n  const [LoginMutation, loginRes] = useMutation(loginMutation);\r\n  const SignIn = () => {\r\n    LoginMutation({\r\n      variables: {\r\n        email_id: userDetails.email_id,\r\n        password: userDetails.password,\r\n      },\r\n    }).then((res) => {\r\n      const response = res.data.login;\r\n      if (response.status) {\r\n        rememberUserdata(res.data.login.data);\r\n      } else {\r\n        setError({ hasError: true, message: response.message });\r\n      }\r\n    });\r\n  };\r\n  const onSuccess = (res) => {\r\n    console.log(\"Login Success: currentUser:\", res);\r\n    LoginMutation({\r\n      variables: {\r\n        email_id: res.profileObj.email,\r\n        password: res.profileObj.googleId,\r\n      },\r\n    }).then((res) => {\r\n      const response = res.data.login;\r\n      if (response.status) {\r\n        rememberUserdata(res.data.login.data);\r\n      } else {\r\n        setError({ hasError: true, message: response.message });\r\n      }\r\n    });\r\n    refreshTokenSetup(res);\r\n  };\r\n  const onFailure = (res) => {\r\n    console.log(\"Login failed: res:\", res);\r\n    // alert(\r\n    //   `Failed to login. 😢 Please ping this to repo owner twitter.com/sivanesh_fiz`\r\n    // );\r\n  };\r\n  const clientId =\"115704933900-sj32ss7siupsi3041ci1sk3rmi8msn1q.apps.googleusercontent.com\"\r\n  // const { signIn } = useGoogleLogin({\r\n  //   onSuccess,\r\n  //   onFailure,\r\n  //   clientId,\r\n  //   isSignedIn: true,\r\n  //   accessType: \"offline\",\r\n  //   // responseType: 'code',\r\n  //   prompt: 'consent',\r\n  // });\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          width: \"-webkit-fill-available\",\r\n          marginTop: \"120px\",\r\n        }}\r\n      >\r\n        <h1>Login</h1>\r\n        <div\r\n          style={{ textAlign: \"left\", margin: \"-5px 28px\", fontSize: \"17px\" }}\r\n        >\r\n          Email Id\r\n        </div>\r\n        <input\r\n          style={{\r\n            width: \"-webkit-fill-available\",\r\n            border: \"none\",\r\n            background: \"black\",\r\n            outline: \"none\",\r\n            borderRadius: \"22px\",\r\n            height: \"39px\",\r\n            fontSize: \"17px\",\r\n            padding: \"0px 18px 1px 18px\",\r\n            margin: \"10px 18px\",\r\n            color: \"white\",\r\n          }}\r\n          value={userDetails.email_id}\r\n          onChange={(e) =>\r\n            setUserDetails({ ...userDetails, email_id: e.target.value })\r\n          }\r\n          type=\"text\"\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          width: \"-webkit-fill-available\",\r\n          marginTop: \"20px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{ textAlign: \"left\", margin: \"-5px 28px\", fontSize: \"17px\" }}\r\n        >\r\n          Password\r\n        </div>\r\n        <input\r\n          style={{\r\n            width: \"-webkit-fill-available\",\r\n            border: \"none\",\r\n            background: \"black\",\r\n            outline: \"none\",\r\n            borderRadius: \"22px\",\r\n            height: \"39px\",\r\n            fontSize: \"17px\",\r\n            padding: \"0px 18px 1px 18px\",\r\n            margin: \"10px 18px\",\r\n            textTransform: \"password\",\r\n            color: \"white\",\r\n          }}\r\n          value={userDetails.password}\r\n          onChange={(e) =>\r\n            setUserDetails({ ...userDetails, password: e.target.value })\r\n          }\r\n        />\r\n      </div>\r\n      \r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          marginTop: \"40px\",\r\n        }}\r\n      >\r\n        <button\r\n          style={{\r\n            width: \"80%\",\r\n            border: \"none\",\r\n            background: \"#00b186\",\r\n            height: \"35px\",\r\n            borderRadius: \"10px\",\r\n            color: \"white\",\r\n            fontSize: \"19px\",\r\n            fontWeight: 700,\r\n            marginBottom: \"10px\",\r\n            outline: \"none\",\r\n          }}\r\n          onClick={() => {\r\n            SignIn();\r\n          }}\r\n        >\r\n          log In\r\n        </button>\r\n        {/* <button\r\n          onClick={signIn}\r\n          style={{\r\n            cursor: \"pointer\",\r\n            display: \"block\",\r\n            fontSize: \"19px\",\r\n            boxSizing: \"content-box\",\r\n            margin: \" 11px auto 0px\",\r\n            width: \" 70%\",\r\n            padding: \"5px 20px\",\r\n            borderRadius: \"10px\",\r\n            borderColor: \"transparent\",\r\n            backgroundColor: \"white\",\r\n            boxShadow: \"0px 16px 60px rgba(78, 79, 114, 0.08)\",\r\n            position: \"relative\",\r\n            outline: \"none\",\r\n          }}\r\n        >\r\n          <img\r\n            src=\"google.svg\"\r\n            alt=\"google login\"\r\n            style={{\r\n              height: \"25px\",\r\n              width: \"25px\",\r\n              marginRight: \"0px\",\r\n              position: \"absolute\",\r\n              left: \"30px\",\r\n              alignItems: \"center\",\r\n            }}\r\n          ></img>\r\n\r\n          <span style={{ color: \"#4285f4\", fontWeight: 700 }}>\r\n            Sign in with Google\r\n          </span>\r\n        </button> */}\r\n      </div>\r\n\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        open={error.hasError}\r\n        autoHideDuration={1000}\r\n        onClose={() => {\r\n          setError({ ...Error, hasError: false });\r\n        }}\r\n        message={error.message}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\login\\register.js",["285","286","287","288","289","290","291","292","293","294","295","296","297"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLazyQuery, useQuery, gql, useMutation } from \"@apollo/client\";\r\nimport Header from \"../templet/header\";\r\nimport Axios from \"axios\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport {\r\n  loggedin_as,\r\n  user_info,\r\n  auth_token,\r\n} from \"../../constants/storage-keys\";\r\nimport { useGoogleLogin } from \"react-google-login\";\r\nimport { loggedinAction } from \"../../actions/authorization\";\r\nimport { google_clint_id } from \"../../constants/api\";\r\nimport { refreshTokenSetup } from \"../../constants/refreshToken\";\r\n\r\nconst REGISTER_MUTATION = gql`\r\n  mutation ($email_id: String, $password: String) {\r\n    register(input: { email_id: $email_id, password: $password }) {\r\n      status\r\n      message\r\n      data {\r\n        id\r\n        name\r\n        email_id\r\n        user_type\r\n        mobile_no\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst loginMutation = gql`\r\n  mutation ($email_id: String!, $password: String!) {\r\n    login(input: { email_id: $email_id, password: $password }) {\r\n      status\r\n      message\r\n      data {\r\n        id\r\n        name\r\n        email_id\r\n        gender\r\n        token\r\n        dob\r\n        user_type\r\n        mobile_no\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst Register = () => {\r\n  const [error, setError] = useState({ hasError: false, message: \"\" });\r\n  const dispatch = useDispatch();\r\n  const [userDetails, setUserDetails] = useState({\r\n    email_id: \"\",\r\n    password: \"\",\r\n    conformPassword: \"\",\r\n  });\r\n\r\n  const rememberUserdata = (response) => {\r\n    localStorage.setItem(user_info, JSON.stringify(response));\r\n    localStorage.setItem(loggedin_as, response.user_type);\r\n    localStorage.setItem(auth_token, response.token);\r\n    dispatch(\r\n      loggedinAction({\r\n        is_loggedin: true,\r\n        loggedin_as: \"user\",\r\n        user_info: response,\r\n      })\r\n    );\r\n    window.history.go(\"-1\");\r\n    console.log(\"data1\", response);\r\n  };\r\n  const [RegisterMutation, registerRes] = useMutation(REGISTER_MUTATION);\r\n  const [LoginMutation, loginRes] = useMutation(loginMutation);\r\n\r\n  // const [LoginMutation, loginRes] = useMutation(loginMutation);\r\n  // const SignIn = () => {\r\n  //   LoginMutation({\r\n  //     variables: {\r\n  //       email_id: userDetails.email_id,\r\n  //       password: userDetails.password,\r\n  //     },\r\n  //   }).then((res) => {\r\n  //     const response = res.data.login;\r\n  //     if (response.status) {\r\n  //       rememberUserdata(res.data.login.data);\r\n  //     } else {\r\n  //       setError({ hasError: true, message: response.message });\r\n  //     }\r\n  //   });\r\n  // };\r\n  const resister = () => {\r\n    if (userDetails.password === userDetails.conformPassword) {\r\n      RegisterMutation({\r\n        variables: {\r\n          email_id: userDetails.email_id,\r\n          password: userDetails.password,\r\n        },\r\n      }).then((res) => {\r\n        window.location.reload();\r\n        const response = res.data.register;\r\n        console.log(\"response\", response);\r\n        // rememberUserdata(response)\r\n      });\r\n    } else {\r\n      setError({ hasError: true, message: \"password doesn't match\" });\r\n    }\r\n  };\r\n  // const onSuccess = (res) => {\r\n  //   console.log(\"Login Success: currentUser:\", res);\r\n  //   RegisterMutation({\r\n  //     variables: {\r\n  //       email_id: res.profileObj.email,\r\n  //       password: res.profileObj.googleId,\r\n  //     },\r\n  //   }).then((resopnse) => {\r\n  //     LoginMutation({\r\n  //       variables: {\r\n  //         email_id: res.profileObj.email,\r\n  //         password: res.profileObj.googleId,\r\n  //       },\r\n  //     }).then((res) => {\r\n  //       const response = res.data.login;\r\n  //       if (response.status) {\r\n  //         rememberUserdata(res.data.login.data);\r\n  //       }\r\n  //       console.log(\"responses\",response)\r\n  //     });\r\n  //     // console.log({ variables: {\r\n  //     //   email_id: res.profileObj.email,\r\n  //     //   password: res.profileObj.googleId,\r\n  //     // }})\r\n  //     // console.log(resopnse)\r\n  //   });\r\n  //   refreshTokenSetup(res);\r\n  // };\r\n  // const onFailure = (res) => {\r\n  //   console.log(\"Login failed: res:\", res);\r\n  // };\r\n  // const clientId =\r\n  //   \"115704933900-sj32ss7siupsi3041ci1sk3rmi8msn1q.apps.googleusercontent.com\";\r\n\r\n  // const { signIn } = useGoogleLogin({\r\n  //   onSuccess,\r\n  //   onFailure,\r\n  //   clientId,\r\n  //   isSignedIn: true,\r\n  //   accessType: \"offline\",\r\n  //   // responseType: 'code',\r\n  //   // prompt: 'consent',\r\n  // });\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          width: \"-webkit-fill-available\",\r\n          marginTop: \"120px\",\r\n        }}\r\n      >\r\n        <h1>Register</h1>\r\n        <div\r\n          style={{ textAlign: \"left\", margin: \"-5px 28px\", fontSize: \"17px\" }}\r\n        >\r\n          Email Id\r\n        </div>\r\n        <input\r\n          style={{\r\n            width: \"-webkit-fill-available\",\r\n            border: \"none\",\r\n            background: \"black\",\r\n            outline: \"none\",\r\n            borderRadius: \"22px\",\r\n            height: \"39px\",\r\n            fontSize: \"17px\",\r\n            padding: \"0px 18px 1px 18px\",\r\n            margin: \"10px 18px\",\r\n            color: \"white\",\r\n          }}\r\n          value={userDetails.email_id}\r\n          onChange={(e) =>\r\n            setUserDetails({ ...userDetails, email_id: e.target.value })\r\n          }\r\n          type=\"text\"\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          width: \"-webkit-fill-available\",\r\n          marginTop: \"20px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{ textAlign: \"left\", margin: \"-5px 28px\", fontSize: \"17px\" }}\r\n        >\r\n          Password\r\n        </div>\r\n        <input\r\n          style={{\r\n            width: \"-webkit-fill-available\",\r\n            border: \"none\",\r\n            background: \"black\",\r\n            outline: \"none\",\r\n            borderRadius: \"22px\",\r\n            height: \"39px\",\r\n            fontSize: \"17px\",\r\n            padding: \"0px 18px 1px 18px\",\r\n            margin: \"10px 18px\",\r\n            textTransform: \"password\",\r\n            color: \"white\",\r\n          }}\r\n          value={userDetails.password}\r\n          onChange={(e) =>\r\n            setUserDetails({ ...userDetails, password: e.target.value })\r\n          }\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          width: \"-webkit-fill-available\",\r\n          marginTop: \"20px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{ textAlign: \"left\", margin: \"-5px 28px\", fontSize: \"17px\" }}\r\n        >\r\n          Conform Password\r\n        </div>\r\n        <input\r\n          style={{\r\n            width: \"-webkit-fill-available\",\r\n            border: \"none\",\r\n            background: \"black\",\r\n            outline: \"none\",\r\n            borderRadius: \"22px\",\r\n            height: \"39px\",\r\n            fontSize: \"17px\",\r\n            padding: \"0px 18px 1px 18px\",\r\n            margin: \"10px 18px\",\r\n            textTransform: \"password\",\r\n            color: \"white\",\r\n          }}\r\n          value={userDetails.conformPassword}\r\n          onChange={(e) =>\r\n            setUserDetails({ ...userDetails, conformPassword: e.target.value })\r\n          }\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          marginTop: \"40px\",\r\n        }}\r\n      >\r\n        <button\r\n          style={{\r\n            width: \"80%\",\r\n            border: \"none\",\r\n            background: \"#0e8a45\",\r\n            height: \"35px\",\r\n            borderRadius: \"10px\",\r\n            color: \"white\",\r\n            fontSize: \"19px\",\r\n            fontWeight: 700,\r\n            outline: \"none\",\r\n          }}\r\n          onClick={() => {\r\n            resister();\r\n          }}\r\n        >\r\n          Creat account\r\n        </button>\r\n        {/* <button\r\n          onClick={signIn}\r\n          style={{\r\n            cursor: \"pointer\",\r\n            display: \"block\",\r\n            fontSize: \"19px\",\r\n            boxSizing: \"content-box\",\r\n            margin: \" 11px auto 0px\",\r\n            width: \" 70%\",\r\n            padding: \"5px 20px\",\r\n            borderRadius: \"10px\",\r\n            borderColor: \"transparent\",\r\n            backgroundColor: \"white\",\r\n            boxShadow: \"0px 16px 60px rgba(78, 79, 114, 0.08)\",\r\n            position: \"relative\",\r\n            outline: \"none\",\r\n          }}\r\n        >\r\n          <img\r\n            src=\"google.svg\"\r\n            alt=\"google login\"\r\n            style={{\r\n              height: \"25px\",\r\n              width: \"25px\",\r\n              marginRight: \"0px\",\r\n              position: \"absolute\",\r\n              left: \"30px\",\r\n              alignItems: \"center\",\r\n            }}\r\n          ></img>\r\n\r\n          <span style={{ color: \"#4285f4\", fontWeight: 700 }}>\r\n            Sign in with Google\r\n          </span>\r\n        </button> */}\r\n      </div>\r\n\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        open={error.hasError}\r\n        autoHideDuration={10000}\r\n        onClose={() => {\r\n          setError({ ...Error, hasError: false });\r\n        }}\r\n        message={error.message}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\templet\\banner.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\Product\\Topdeals.js",["298","299","300","301","302","303","304","305","306","307","308","309","310","311"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Checkbox,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  get_product_list,\r\n  get_product_qnt_options,\r\n  get_top_deals,\r\n  site_url,\r\n} from \"../../constants/api\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport axios from \"axios\";\r\nimport CustomButton from \"../templet/AddButton\";\r\nimport { useStateValue } from \"../templet/StateProvider\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nconst allTopdeals = gql`\r\n  query {\r\n    get_allTopDeals {\r\n      id\r\n      product_id\r\n      Products {\r\n        id\r\n        name\r\n        # brand_id\r\n        image\r\n        # rating\r\n        # created_by\r\n        # updated_by\r\n        # is_active\r\n        # category {\r\n        # id\r\n        # name\r\n        # created_by\r\n        # updated_by\r\n        # is_active\r\n        # }\r\n        # brand {\r\n        #   id\r\n        #   name\r\n        #   company_name\r\n        #   ratings\r\n        #   created_by\r\n        #   updated_by\r\n        #   is_active\r\n        # }\r\n        qntity {\r\n          id\r\n          quantity\r\n          # product_id\r\n          base_price\r\n          # unit_id\r\n          discount\r\n          # created_by\r\n          # updated_by\r\n          # is_active\r\n          unit {\r\n            id\r\n            full_name\r\n            short_name\r\n            # created_by\r\n            # updated_by\r\n            # is_active\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const TopDeal = ({ item }) => {\r\n  // console.log(item.Products.qntity[0].quantity.unit.short_name)\r\n  const [{ basket }] = useStateValue();\r\n  const [productQntOption, setProductQntOption] = useState(\r\n    item.Products.qntity\r\n  );\r\n  const [discount, setDiscount] = useState(item.Products.qntity[0].discount);\r\n  const [productPrice, setProductPrice] = useState(\r\n    `${item.Products.qntity[0].base_price}`\r\n  );\r\n  const [quantityId, setQuantityId] = useState(item.Products.qntity[0].id);\r\n  const [openAmountPicker, setOpenAmountPicker] = useState(false);\r\n  const [discountedPrice, setDiscountedPrice] = useState(\r\n    Math.round(\r\n      item.Products.qntity[0].base_price -\r\n        (item.Products.qntity[0].base_price *\r\n          item.Products.qntity[0].discount) /\r\n          100\r\n    )\r\n  );\r\n  const [productAmount, setProductAmount] = useState(\r\n    `${item.Products.qntity[0].quantity}${item.Products.qntity[0].unit.short_name}`\r\n  );\r\n  const productId = [];\r\n  const productAmt = [];\r\n  basket.forEach((item) => {\r\n    productId.push(item.id);\r\n    productAmt.push(item.amount);\r\n  });\r\n  var count = {};\r\n  productId.forEach(function (i) {\r\n    count[i] = (count[i] || 0) + 1;\r\n  });\r\n  const Item_id = [];\r\n  const Id = [];\r\n  const basketQuantityId = [];\r\n  const BasketIdWithProductId = {};\r\n  basket.forEach((item) => {\r\n    Item_id.push(item.item_id);\r\n    basketQuantityId.push(item.quantityId);\r\n    Id.push(item.id);\r\n  });\r\n  Item_id.forEach(\r\n    (item_id, i) =>\r\n      (BasketIdWithProductId[item_id] = [Id[i], basketQuantityId[i]])\r\n  );\r\n  const result = Object.keys(BasketIdWithProductId).find(\r\n    (key) =>\r\n      JSON.stringify(BasketIdWithProductId[key]) ==\r\n      JSON.stringify([item.Products.id, quantityId])\r\n  );\r\n  const productQntSelected = (items) => {\r\n    if (items.unit) {\r\n      console.log(items);\r\n      setQuantityId(items.id);\r\n      setProductAmount(`${items.quantity}${items.unit.short_name}`);\r\n      setProductPrice(items.base_price);\r\n      setDiscountedPrice(\r\n        Math.round(items.base_price - (items.base_price * items.discount) / 100)\r\n      );\r\n      setDiscount(items.discount);\r\n      setTimeout(() => {\r\n        setOpenAmountPicker(false);\r\n      }, 100);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (openAmountPicker) {\r\n      document.body.style.overflow = \"hidden\";\r\n    }\r\n    if (!openAmountPicker) {\r\n      document.body.style.overflow = \"unset\";\r\n    }\r\n  }, [openAmountPicker]);\r\n  let BasketWithSameProduct = [];\r\n  basket.forEach((element) => {\r\n    if (element.id == item.Products.id) {\r\n      BasketWithSameProduct.unshift(element);\r\n    }\r\n  });\r\n  let currentBasketqntyid = {};\r\n  if (BasketWithSameProduct[0] && item.Products.qntity) {\r\n    item.Products.qntity.forEach((element) => {\r\n      if (element.id == BasketWithSameProduct[0].quantityId) {\r\n        currentBasketqntyid = element;\r\n      }\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (BasketWithSameProduct[0]) {\r\n        if (BasketWithSameProduct[0].quantityId != quantityId) {\r\n          productQntSelected(currentBasketqntyid);\r\n        }\r\n      }\r\n    }, 100);\r\n  }, [basket]);\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        style={{\r\n          flexShrink: 0,\r\n          marginRight: \"10px\",\r\n          padding: \"10px\",\r\n          maxWidth: \"170px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          width: \"132px\",\r\n          height: \"250px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            // flex: \"3 1 0%\",\r\n            border: \" 1px solid rgba(128, 128, 128, 0.32)\",\r\n            //   margin: \"5px 19px 5px 5px\",\r\n            padding: \"5px\",\r\n            borderRadius: \"10px\",\r\n            background: \"rgb(253, 253, 253)\",\r\n            boxShadow: \"rgb(0 0 0 / 5%) 0px 5px 15px\",\r\n            height: \"111px\",\r\n            width: \"100px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          <div\r\n            style={{\r\n              background: \"green\",\r\n              color: \"white\",\r\n              padding: \"3px\",\r\n              borderRadius: \"0px 0px 45px 45px\",\r\n              fontSize: \"13px\",\r\n              height: \"13px\",\r\n              width: \"95px\",\r\n              // position: \"absolute\",\r\n              // margin: \"-124px -18px 0px -5px\",\r\n              textAlign: \"center\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n            }}\r\n          >\r\n            {discount}% off\r\n          </div>\r\n          <img\r\n            src={item.Products.image}\r\n            alt={item.product_name}\r\n            style={{ width: \"100px\" }}\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            padding: \"7px 0px 0px 0px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <span style={{ fontSize: \"17px\", paddingBottom: \"5px\" }}>\r\n            {item.product_name}\r\n          </span>\r\n          <span>\r\n            {\" \"}\r\n            <del style={{ color: \"#5d5b5b\", fontSize: \"14px\" }}>\r\n              ₹{productPrice}\r\n            </del>\r\n            <span style={{ marginLeft: \"15px\" }}>₹{discountedPrice}</span>\r\n          </span>\r\n          <div\r\n            onClick={() => {\r\n              // productAmtApi();\r\n              setOpenAmountPicker(true);\r\n            }}\r\n            style={{\r\n              borderRadius: \"5px\",\r\n              border: \"1px solid #0080003b\",\r\n              padding: \"2px 0px 2px 6px\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"row\",\r\n              fontSize: \"15px\",\r\n              height: \"25px\",\r\n              justifyContent: \"center\",\r\n              marginTop: \"7px\",\r\n            }}\r\n          >\r\n            <span\r\n              style={\r\n                {\r\n                  // flex: 1\r\n                }\r\n              }\r\n            >\r\n              {productAmount}\r\n            </span>\r\n            <span\r\n              style={{\r\n                flex: 1,\r\n                textAlign: \"end\",\r\n                paddingRight: \"8px\",\r\n              }}\r\n            >\r\n              <KeyboardArrowDownIcon style={{ fontSize: \"15px\" }} />\r\n            </span>\r\n          </div>\r\n          <div\r\n            style={{\r\n              margin: \"10px 0px -5px -5px\",\r\n            }}\r\n          >\r\n            <CustomButton\r\n              id={item.Products.id}\r\n              image={item.Products.image_url}\r\n              name={item.Products.product_name}\r\n              amount={productAmount}\r\n              price={parseInt(discountedPrice)}\r\n              width=\"117px\"\r\n              stage=\"add\"\r\n              count={count[item.Products.id]}\r\n              quantityId={quantityId}\r\n              item_id={result}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card>\r\n      <Dialog\r\n        fullWidth={true}\r\n        onClose={() => {\r\n          setOpenAmountPicker(false);\r\n        }}\r\n        open={openAmountPicker}\r\n      >\r\n        <DialogTitle\r\n          style={{ borderBottom: \"1px solid gray\", padding: \"7px\" }}\r\n          onClose={() => {\r\n            setOpenAmountPicker(false);\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              position: \"relative\",\r\n\r\n              paddingLeft: \"18px\",\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                fontSize: \" 24px\",\r\n                fontWeight: 600,\r\n                fontFamily: \"auto\",\r\n                color: \"#a70606\",\r\n              }}\r\n            >\r\n              {item.Products.name}\r\n            </span>\r\n            <span\r\n              onClick={() => {\r\n                setOpenAmountPicker(false);\r\n              }}\r\n              style={{\r\n                position: \"fixed\",\r\n                right: 0,\r\n                border: \"1px solid #a7a3a3\",\r\n                margin: \"-57px 20px 0px 0px\",\r\n                borderRadius: \"15px\",\r\n                padding: \"1px\",\r\n                background: \"white\",\r\n                display: \"flex\",\r\n              }}\r\n            >\r\n              <CloseIcon />\r\n            </span>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent style={{ padding: \"9px 8px\" }}>\r\n          {productQntOption.map((item, index) => (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <Card\r\n                style={{\r\n                  padding: \"5px\",\r\n                  borderRadius: \"4px\",\r\n                  fontSize: \"19px\",\r\n                  marginBottom: \" 10px\",\r\n                }}\r\n              >\r\n                <span>\r\n                  {item.quantity} {item.unit.short_name}\r\n                  <del\r\n                    style={{\r\n                      marginLeft: \"90px\",\r\n                      color: \"green\",\r\n                      fontWeight: 500,\r\n                    }}\r\n                  >\r\n                    ₹{item.base_price}\r\n                  </del>\r\n                  <span\r\n                    style={{\r\n                      marginLeft: \"14px\",\r\n                      color: \"green\",\r\n                      fontWeight: 600,\r\n                    }}\r\n                  >\r\n                    ₹\r\n                    {Math.round(\r\n                      item.base_price - (item.base_price * item.discount) / 100\r\n                    )}\r\n                  </span>\r\n                </span>\r\n                <span\r\n                  style={{\r\n                    right: 0,\r\n                    position: \"absolute\",\r\n                    margin: \"-1px 15px 0px 0px\",\r\n                  }}\r\n                >\r\n                  <Checkbox\r\n                    style={{ padding: \"0px\" }}\r\n                    checked={quantityId===item.id}\r\n                    onClick={() => {\r\n                      productQntSelected(item);\r\n                    }}\r\n                  />\r\n                </span>\r\n              </Card>\r\n            </div>\r\n          ))}\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TopDeals = () => {\r\n  const [showloader, setShowloader] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  const { networkStatus, called, loading, data } = useQuery(allTopdeals);\r\n  // useEffect(() => {\r\n  //   setShowloader(true);\r\n  //   axios.get(get_top_deals).then((response) => {\r\n  //     setProducts(response.data.data);\r\n  //     if (response.data.status) {\r\n  //       setShowloader(false);\r\n  //     }\r\n  //     // console.log(response.data.data);\r\n  //   });\r\n  // }, []);\r\n  useEffect(() => {\r\n    setShowloader(true);\r\n    if (networkStatus === 7) {\r\n      console.log(\"data.get_allTopDeals\", data.get_allTopDeals);\r\n      setProducts(data.get_allTopDeals);\r\n      setShowloader(false);\r\n    }\r\n  }, [networkStatus]);\r\n  return (\r\n    <>\r\n      {showloader ? (\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <CircularProgress />\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className=\"hide-scroll-bar\"\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            overflowX: \"auto\",\r\n            width: \"100%\",\r\n            margin: \"10px 0px\",\r\n          }}\r\n        >\r\n          {products.map((item, index) => (\r\n            <TopDeal key={index} item={item} />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* {loading && */}\r\n      {/* <div style={{ textAlign: \"center\" }}>\r\n        <CircularProgress style={{ height: 32, width: 32, color: \"#168388\" }} />\r\n      </div> */}\r\n      {/* } */}\r\n    </>\r\n  );\r\n};\r\nexport default TopDeals;\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\Product\\productsByCategorys.js",["312","313","314","315","316"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { get_productsbycategory } from \"../../constants/api\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nconst ProductByCategoryQuery = gql`\r\n  query ($category_id: Int!) {\r\n    get_product_by_category(category_id: $category_id) {\r\n      id\r\n      name\r\n      # category_id\r\n      # brand_id\r\n      image\r\n      rating\r\n      # created_by\r\n      # updated_by\r\n      # is_active\r\n      Category: category {\r\n        name\r\n        id\r\n        # created_by\r\n        # updated_by\r\n        # is_active\r\n      }\r\n      Brand: brand {\r\n        id\r\n        name\r\n        company_name\r\n        ratings\r\n        # created_by\r\n        # updated_by\r\n        # is_active\r\n      }\r\n      Quantity: qntity {\r\n        id\r\n        quantity\r\n        product_id\r\n        base_price\r\n        unit_id\r\n        discount\r\n        # created_by\r\n        # updated_by\r\n        # is_active\r\n        Unit: unit {\r\n          full_name\r\n          short_name\r\n          # created_by\r\n          # updated_by\r\n          # is_active\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst ProductsByCategory = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [showLoader, setShowLoader] = useState(true);\r\n  const params = new URLSearchParams(window.location.search);\r\n  // useEffect(() => {\r\n  //   const params = new URLSearchParams(window.location.search);\r\n  //   setShowLoader(true);\r\n\r\n  //   axios\r\n  //     .get(`${get_productsbycategory}/${parseInt(params.get(\"id\"))}`)\r\n  //     .then((response) => {\r\n  //       if (response.data.status) {\r\n  //         setShowLoader(false);\r\n  //         setProducts(response.data.data);\r\n  //       }\r\n  //       // console.table(response.data.data);\r\n  //     });\r\n  // }, []);\r\n  const { networkStatus, called, loading, data } = useQuery(\r\n    ProductByCategoryQuery,\r\n    {\r\n      variables: { category_id: parseInt(params.get(\"id\")) },\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (networkStatus === 7) {\r\n      console.log(data.get_product_by_category);\r\n      setShowLoader(false);\r\n      setProducts(data.get_product_by_category);\r\n    }\r\n  }, [networkStatus]);\r\n  // useEffect(() => {\r\n  // \tdocument.body.style.background = \"#efefef\";\r\n  // }, []);\r\n  return (\r\n    <>\r\n      {showLoader ? (\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <CircularProgress />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          {products.map((product,index) => (\r\n            <ProductCard\r\n              key={index}\r\n              // id={product.product_id}\r\n              // image={product.image_url}\r\n              // name={product.product_name}\r\n              // amount=\"10kg\"\r\n              // price={product.product_price}\r\n              data={product}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductsByCategory;\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\Product\\Shopbyseasonsbest.js",["317","318","319","320"],"import { CircularProgress, Grid } from \"@material-ui/core\";\r\n// import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n// import { get_seasons_best_items, site_url } from \"../../constants/api\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nconst AllSeasonsBestItemQuery = gql`\r\nquery{\r\n  get_allSeasonsBest{\r\n    id\r\n    product_id\r\n    # is_popular\r\n    Products{\r\n      id\r\n      name\r\n      image\r\n      qntity{\r\n        quantity\r\n        unit{\r\n          # id\r\n          # full_name\r\n          short_name\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`\r\nconst CategoryItem = ({ item }) => {\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={() => {\r\n          // const searchName = item.product_name.replace(/ +/g, \"\");\r\n          window.location.href = `/search-results?id=${item.Products.id}?name=${item.Products.name}`;\r\n          // console.log(market);\r\n        }}\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          padding: \"7px 5px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            padding: \"5px 5px 3px\",\r\n            width: \" 50px\",\r\n            textAlign: \"center\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            border: \"2px solid rgb(150 146 146 / 51%)\",\r\n            borderRadius: \"7px\",\r\n            background: \"white\",\r\n            height: \"50px\",\r\n            overflow: \"hidden\",\r\n            marginBottom: \"7px\",\r\n          }}\r\n        >\r\n          {/* <span style={{ fontWeight: 400 }}>min_price</span> */}\r\n          <br />\r\n\r\n          <img\r\n            // onClick={() => {\r\n            // \tconst pagename = item.name.replace(/ +/g, \"\");\r\n            // \thistory.push(`/recipe-details?id=${item.id}?name=${pagename}`);\r\n            // }}\r\n            style={{\r\n              height: \"50px\",\r\n              padding: \"5px\",\r\n            }}\r\n            alt=\"seasonaryItems\"\r\n            src={item.Products.image}\r\n          />\r\n        </div>\r\n        <span style={{ fontWeight: 400, textAlign: \"center\" }}>\r\n          {item.Products.name}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst Shopbyseasonsbest = () => {\r\n  const [seasonsBest, setSeasonsBest] = useState([]);\r\n  const [showLoader, setShowloader] = useState(false);\r\n  const seasonitem = [\r\n    { img: \"apple.png\", name: \"Apple\" },\r\n    { img: \"orange.png\", name: \"Orange\" },\r\n    { img: \"butterchiken.png\", name: \"Butterchiken\" },\r\n    { img: \"apple.png\", name: \"Apple\" },\r\n    { img: \"orange.png\", name: \"Orange\" },\r\n    { img: \"butterchiken.png\", name: \"Butterchiken\" },\r\n    { img: \"apple.png\", name: \"Apple\" },\r\n    { img: \"orange.png\", name: \"Orange\" },\r\n    { img: \"butterchiken.png\", name: \"Butterchiken\" },\r\n  ];\r\n  const { networkStatus, called, loading, data } = useQuery(AllSeasonsBestItemQuery);\r\n\r\n  // useEffect(() => {\r\n  //   setShowLoader(true);\r\n  //   axios.get(`${get_seasons_best_items}/1`).then((response) => {\r\n  //     // console.log(response.data.data);\r\n  //     if (response.data.status) {\r\n  //       setShowLoader(false);\r\n  //     }\r\n  //     setSeasonsBest(response.data.data);\r\n  //   });\r\n  // }, []);\r\n  useEffect(() => {\r\n    setShowloader(true);\r\n    if (networkStatus === 7) {\r\n      console.log(\"data.get_allTopDeals\", data.get_allSeasonsBest);\r\n      setSeasonsBest(data.get_allSeasonsBest);\r\n      setShowloader(false);\r\n    }\r\n  }, [networkStatus]);\r\n  return (\r\n    <div style={{ background: \"#efefef\" }}>\r\n      {\r\n        showLoader ? (\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <CircularProgress />\r\n          </div>\r\n        ) : (\r\n          // :<div style={{ background: \"#efefef\" }}>\r\n          <Grid container>\r\n            {seasonsBest.map((item, index) => (\r\n              <Grid item xs={4} sm={3} md={1} key={index}>\r\n                <CategoryItem key={item.product_id} item={item} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        )\r\n        // {/* </div> */}\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shopbyseasonsbest;\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\Product\\ProductCard.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\category\\categoryCard.js",["321","322","323","324","325","326"],"import React, { useState } from \"react\";\r\nimport { Card, Grid, CircularProgress } from \"@material-ui/core\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  get_all_product_category,\r\n  get_product_category,\r\n} from \"../../constants/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nconst CategoruQuery = gql`\r\n  query {\r\n    get_allCategory {\r\n      id\r\n      name\r\n      image\r\n      is_popular\r\n    }\r\n  }\r\n`;\r\nconst PopularCategoruQuery = gql`\r\n  query {\r\n    get_PopularCategory {\r\n      id\r\n      name\r\n      image\r\n      is_popular\r\n    }\r\n  }\r\n`;\r\nconst HomeCategoryCard = ({ data }) => {\r\n  const history = useHistory();\r\n  return (\r\n    <Card\r\n      onClick={() => {\r\n        history.push(`/show-items-with-id?id=${data.id}?name=${data.name}`);\r\n      }}\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        // width: \"100%\",\r\n        flex: 1,\r\n        padding: \"10px\",\r\n        margin: \"0px 5px 5px 5px\",\r\n      }}\r\n    >\r\n      <span style={{ flex: 1 }}>\r\n        <img\r\n          style={{\r\n            height: \"45px\",\r\n            width: \"45px\",\r\n            borderRadius: \"30px\",\r\n          }}\r\n          src={data.image}\r\n          alt={data.name}\r\n        />\r\n      </span>\r\n      <span\r\n        style={{\r\n          flex: 2,\r\n          paddingLeft: \"10px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {data.name}\r\n      </span>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst CategoryCard = ({ all }) => {\r\n  const [productCategory, setProductCategory] = useState([]);\r\n  const [showLoader, setShowLoader] = useState(false);\r\n  const history = useHistory();\r\n\r\n  // console.log(all);\r\n  // useEffect(() => {\r\n  //   if (all) {\r\n  //     setShowLoader(true);\r\n  //     axios.get(get_all_product_category).then((response) => {\r\n  //       if (response.data.status) {\r\n  //         setShowLoader(false);\r\n  //         setProductCategory(response.data.data);\r\n  //       }\r\n  //     });\r\n  //   } else {\r\n  //     setShowLoader(true);\r\n  //     axios\r\n  //       .post(get_product_category, {\r\n  //         is_popular: 1,\r\n  //       })\r\n  //       .then((response) => {\r\n  //         if (response.data.status) {\r\n  //           setShowLoader(false);\r\n  //           setProductCategory(response.data.data);\r\n  //         }\r\n  //       });\r\n  //   }\r\n  // }, [all]);\r\n  // graphql\r\n  const Query = all === true ? CategoruQuery : PopularCategoruQuery;\r\n  const { networkStatus, called, loading, data } = useQuery(Query);\r\n  useEffect(() => {\r\n    setShowLoader(true);\r\n    if (networkStatus === 7) {\r\n      console.log(data.get_allCategory);\r\n      setProductCategory(\r\n        all === true ? data.get_allCategory : data.get_PopularCategory\r\n      );\r\n      setShowLoader(false);\r\n    }\r\n  }, [networkStatus]);\r\n  return (\r\n    <>\r\n      <div>\r\n        {showLoader ? (\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <CircularProgress />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                overflowX: \"auto\",\r\n                width: \"100%\",\r\n                background: \"#e8e7e7ad\",\r\n                padding: \"10px 0px\",\r\n              }}\r\n            >\r\n              <Grid container>\r\n                {productCategory.map((data, index) => (\r\n                  <Grid item xs={6} sm={4} md={2} key={index}>\r\n                    <HomeCategoryCard data={data} />\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </div>\r\n            {!all && (\r\n              <div\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  margin: \"0px 3px 0px 0px\",\r\n                  paddingBottom: \"10px\",\r\n                }}\r\n              >\r\n                <span\r\n                  onClick={() => {\r\n                    history.push(`/shop-by-items`);\r\n                  }}\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    border: \"1px solid black\",\r\n                    width: \"fit-content\",\r\n                    padding: \"3px 100px\",\r\n                    borderRadius: \"6px\",\r\n                    background: \"#591a07\",\r\n                    color: \"white\",\r\n                    textDecoration: \"none\",\r\n                  }}\r\n                >\r\n                  VIEW MORE\r\n                </span>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryCard;\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\checkout\\CheckoutProduct.js",["327","328"],"import React from \"react\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport { useStateValue } from \"../templet/StateProvider\";\r\nimport CustomButton from \"../templet/AddButton\";\r\nimport { useEffect } from \"react\";\r\nimport { site_url } from \"../../constants/api\";\r\n\r\n// import { useStateValue } from \"../../StateProvider\";/////////////////////\r\n\r\nfunction CheckoutProduct({ item }) {\r\n  // console.log(\"itemfromcheckoutproduct\", item);\r\n  const [{ basket }] = useStateValue();\r\n  // console.log(item);\r\n  // const productId = [];\r\n  // basket.forEach((item) => {\r\n  //   productId.push(item.id);\r\n  // });\r\n  // var count = {};\r\n  // productId.forEach(function (i) {\r\n  //   count[i] = (count[i] || 0) + 1;\r\n  // });\r\n  // console.log(`count[id]${item.name}`, count[item.id]);\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          borderBottom: \"1px solid #80808052\",\r\n          background: \"rgb(249 249 249)\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            padding: \"10px\",\r\n            marginBottom: \"5px\",\r\n          }}\r\n        >\r\n          <div style={{ flex: 1, display: \"flex\", flexDirection: \"column\" }}>\r\n            <div\r\n              style={{\r\n                flex: \" 3 1 0%\",\r\n                border: \"1px solid rgba(128, 128, 128, 0.32)\",\r\n                margin: \"5px\",\r\n                padding: \"5px\",\r\n                borderRadius: \"10px\",\r\n                marginRight: \"19px\",\r\n                background: \"rgb(253, 253, 253)\",\r\n                boxShadow: \"0 5px 15px rgba(0,0,0,.05)\",\r\n              }}\r\n            >\r\n              <img\r\n                style={{ width: \"100px\", height: \"100px\" }}\r\n                src={item.image}\r\n                alt={item.name}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              flex: 2,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              height: \"100px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                flex: 1,\r\n                paddingLeft: \"7px\",\r\n                fontSize: \"18px\",\r\n                fontFamily: \"ProximaNova-Regular\",\r\n              }}\r\n            >\r\n              {item.name}\r\n            </div>\r\n            <div\r\n              style={{\r\n                flex: 1,\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  borderRadius: \"5px\",\r\n                  border: \"1px solid #0080003b\",\r\n                  padding: \"2px 0px 2px 6px\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  flexDirection: \"row\",\r\n                  fontSize: \"15px\",\r\n                  height: \"25px\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <span style={{ flex: 1 }}>{item.amount}</span>\r\n                <span\r\n                  style={{\r\n                    flex: 1,\r\n                    textAlign: \"end\",\r\n                    paddingRight: \"8px\",\r\n                  }}\r\n                >\r\n                  <KeyboardArrowDownIcon style={{ fontSize: \"15px\" }} />\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                flex: 1,\r\n                width: \"fit-content\",\r\n                height: \" fit-content\",\r\n                margin: \"4px\",\r\n              }}\r\n            >\r\n              <span>₹{item.price}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ float: \"right\", marginTop: \"-44px\", marginRight: \"7px\" }}>\r\n          <CustomButton\r\n            key={item.item_id}\r\n            item={item}\r\n            id={item.id}\r\n            item_id={item.item_id}\r\n            // count={count[item.id]}\r\n            image={item.image}\r\n            name={item.name}\r\n            amount={item.amount}\r\n            price={item.price}\r\n            width=\"117px\"\r\n            stage=\"remove\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CheckoutProduct;\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\actions\\authorization.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\Product\\Productfinder.js",["329"],"import React, { useState, useEffect } from \"react\";\r\nimport { Dialog, Slide } from \"@material-ui/core\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport { gql, useLazyQuery } from \"@apollo/client\";\r\nconst SearchProductQuery = gql`\r\nquery($name:String!){\r\n  get_product_by_name(name:$name){\r\n    id\r\n    name\r\n  }\r\n}\r\n`\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst SearchResultCard = ({ item }) => {\r\n  return (\r\n    <li\r\n      key={item.id}\r\n      style={{\r\n        padding: \"10px 15px\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <span\r\n        style={{\r\n          marginLeft: \"32px\",\r\n          color: \"#5f5959\",\r\n          fontSize: \"19px\",\r\n        }}\r\n      >\r\n        {item.name}\r\n      </span>\r\n      <button\r\n        onClick={() => {\r\n          // const searchName = item.product_name.replace(/ +/g, \"\");\r\n          window.location.href = `/search-results?id=${item.id}?name=${item.name}`;\r\n          // console.log(market);\r\n        }}\r\n        style={{\r\n          position: \"absolute\",\r\n          right: 0,\r\n          margin: \"0px 10px 0px 0px\",\r\n          border: \"none\",\r\n          background: \"#ffb100\",\r\n          outline: \"none\",\r\n          padding: \"5px\",\r\n          width: \"105px\",\r\n          borderRadius: \"7px\",\r\n        }}\r\n      >\r\n        SELECT\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\nconst Productfinder = ({ openSearchDilog, onSelectItems }) => {\r\n  const [open, setOpen] = useState(true);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [sarchResultProducts, setSarchResultProducts] = useState([]);\r\n  // const [searchResultRecipe, setSearchResultRecipe] = useState([]);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [SearchProduct, SearchProductRes] = useLazyQuery(\r\n    SearchProductQuery\r\n  );\r\n  useEffect(() => {\r\n    if (searchText.length > 0) {\r\n    //  setTimeout(() => {\r\n      SearchProduct({\r\n        variables: {\r\n          name:searchText\r\n        }\r\n      })\r\n    //  }, 100);\r\n     \r\n    }\r\n  }, [searchText]);\r\n  // eslint-disable-next-line\r\n  console.log(SearchProductRes)\r\n  useEffect(() => {\r\n    if (SearchProductRes.data) {\r\n      console.log(SearchProductRes.data.get_product_by_name)\r\n      setSarchResultProducts(SearchProductRes.data.get_product_by_name)\r\n    }\r\n  }, [SearchProductRes.data]);\r\n  useEffect(() => {\r\n    setOpen(!open);\r\n    // eslint-disable-next-line\r\n  }, [openSearchDilog]);\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <div>\r\n          <div\r\n            style={{\r\n              margin: \"10px 10px\",\r\n              position: \"absolute\",\r\n              width: \"94%\",\r\n              background: \"white\",\r\n              borderRadius: \"10px\",\r\n              boxShadow:\r\n                \"rgba(0, 0, 0, 0.2) 0px 0px 0px 1px, rgba(0, 0, 0, 0.14) 0px 1px 4px 0px, rgba(0, 0, 0, 0.12) 0px 1px 10px 0px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                borderRadius: \"32px\",\r\n                flexDirection: \"column\",\r\n                width: \"-webkit-fill-available\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <div style={{ display: \"flex\", flexDirection: \"row \" }}>\r\n                <Search />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Type hear\"\r\n                  autoFocus\r\n                  onChange={(e) => {\r\n                    setSearchText(e.target.value);\r\n                  }}\r\n                  value={searchText}\r\n                  style={{\r\n                    border: \"none\",\r\n                    outline: \"none\",\r\n                    fontSize: \"18px\",\r\n                    width: \"100%\",\r\n                  }}\r\n                />\r\n                <span\r\n                  onClick={() => {\r\n                    handleClose();\r\n                  }}\r\n                >\r\n                  <Close />\r\n                </span>\r\n              </div>\r\n              <ul\r\n                style={{\r\n                  margin: 0,\r\n                  padding: 0,\r\n                  listStyle: \"none\",\r\n                  position: \"relative\",\r\n                }}\r\n              >\r\n                {sarchResultProducts.length > 0 &&\r\n                  searchText.length > 0 &&\r\n                  sarchResultProducts.map((item) => (\r\n                    <SearchResultCard item={item} />\r\n                  ))}\r\n                {/* {searchResultRecipe.length > 0 &&\r\n                  searchText.length > 0 &&\r\n                  searchResultRecipe.map((item) => (\r\n                    <SearchResultCard item={item} />\r\n                  ))} */}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Productfinder;\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\constants\\refreshToken.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\templet\\header\\MobileHeader.js",["330"],"import React from \"react\";\r\nimport { Link, useHistory, withRouter } from \"react-router-dom\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowbackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\nimport {\r\n  Card,\r\n  IconButton,\r\n  Icon,\r\n  Divider,\r\n  SwipeableDrawer,\r\n  List,\r\n  ListItem,\r\n} from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport Productfinder from \"../../Product/Productfinder\";\r\nimport { useEffect } from \"react\";\r\nimport { userLogout } from \"../../../actions/authorization\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { user_info,auth_token,loggedin_as } from \"../../../constants/storage-keys\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// import { initialState } from \"../../reducer\";\r\nconst style = {\r\n  topSection: {\r\n    background: \"#185c6b\", //'#14678e',\r\n    marginTop: \"56px\",\r\n    padding: \"15px 0px\",\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: \"0px 10px\",\r\n    height: \"56px\",\r\n  },\r\n  label: {\r\n    fontWeight: 500,\r\n    fontSize: \"20px\",\r\n    margin: \"10px 0px\",\r\n  },\r\n  action: {\r\n    width: \"100%\",\r\n    margin: \"0px 3px\",\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.12), 0 1px 5px 0 rgba(0,0,0,0.2)\",\r\n    padding: \"9px 10px\",\r\n    fontWeight: 500,\r\n    fontSize: \"15px\",\r\n    color: \"#4c4447\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  otherAction: {\r\n    display: \"inline-flex\",\r\n    flexDirection: \"column\",\r\n    width: \"80px\",\r\n    textAlign: \"center\",\r\n  },\r\n  otherActionIcon: {\r\n    fontSize: \"16px\",\r\n  },\r\n  otherActionIconButton: {\r\n    height: \"40px\",\r\n    width: \"40px\",\r\n    color: \"white\",\r\n    margin: \"0px auto\",\r\n  },\r\n  otherActionName: {\r\n    fontSize: \"14px\",\r\n    fontWeight: 500,\r\n  },\r\n};\r\nconst menuStyle = {\r\n  listItem: {\r\n    padding: \"10px 15px\",\r\n  },\r\n  listItemtext: {\r\n    // marginLeft: \"15px\",\r\n    fontWeight: 500,\r\n    color: \"#5a5353\",\r\n  },\r\n  menuicon: {\r\n    fontSize: 20,\r\n    color: \"#969696\",\r\n  },\r\n};\r\nconst MobileHeader = ({ pagetitle }) => {\r\n  const history = useHistory();\r\n  const [{ basket }] = useStateValue();\r\n  const is_loggedin = useSelector((state) => state.authorization.is_loggedin);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [openSearchDilog, setOpenSearchDilog] = useState(false);\r\n  const [openSideNav, setOpenSideNav] = useState(false);\r\n  const [scrollPosition, setScrollPosition] = useState(0);\r\n\r\n  const logout = () => {\r\n    dispatch(userLogout());\r\n    localStorage.removeItem(user_info);\r\n    localStorage.removeItem(auth_token);\r\n    localStorage.removeItem(loggedin_as);\r\n    setOpenSideNav(false);\r\n    window.location.reload(true);\r\n  };\r\n  useEffect(() => {\r\n    if (openSideNav) {\r\n      document.body.style.overflow = \"hidden\";\r\n    }\r\n    if (!openSideNav) {\r\n      document.body.style.overflow = \"unset\";\r\n    }\r\n  }, [openSideNav]);\r\n  const handleScroll = () => {\r\n      const position = window.pageYOffset;\r\n      setScrollPosition(position);\r\n  };\r\n  \r\n  useEffect(() => {\r\n      window.addEventListener('scroll', handleScroll, { passive: true });\r\n  \r\n      return () => {\r\n          window.removeEventListener('scroll', handleScroll);\r\n      };\r\n  }, []);\r\n  useEffect(() => {\r\n   console.log(\"scrollPosition\",scrollPosition)\r\n  }, [scrollPosition])\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <Card\r\n          style={{\r\n            display: \"flex\",\r\n            backgroundColor: \"#2f8a74\",\r\n            color: \"white\",\r\n            width: \"100%\",\r\n            position:scrollPosition>35? \"fixed\":'',\r\n            zIndex: 99,\r\n            top: 0,\r\n            borderRadius: 0,\r\n          }}\r\n        >\r\n          <div>\r\n            {pagetitle ? (\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"Open drawer\"\r\n                onClick={() => {\r\n                  window.history.go(\"-1\");\r\n                }}\r\n              >\r\n                <ArrowbackIcon />\r\n              </IconButton>\r\n            ) : (\r\n              <IconButton\r\n                onClick={() => {\r\n                  setOpenSideNav(true);\r\n                }}\r\n              >\r\n                <Icon>\r\n                  <MenuIcon style={{ color: \"white\" }} />\r\n                </Icon>\r\n              </IconButton>\r\n            )}\r\n          </div>\r\n          <div\r\n            style={{\r\n              flexDirection: \"row\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <span>\r\n              <Link\r\n                style={{\r\n                  textDecoration: \"none\",\r\n                  fontSize: \"20px\",\r\n                  color: \"white\",\r\n                }}\r\n                to=\"/\"\r\n              >\r\n                {pagetitle\r\n                  ? pagetitle.length > 15\r\n                    ? `${pagetitle.substring(0, 16)}...`\r\n                    : pagetitle\r\n                  : \"ଆମ ପରିବା\"}\r\n              </Link>\r\n            </span>\r\n            <span\r\n              style={{\r\n                position: \"absolute\",\r\n                right: 0,\r\n                margin: \"9px 81px 0px 0px\",\r\n              }}\r\n              onClick={() => {\r\n                setOpenSearchDilog(!openSearchDilog);\r\n              }}\r\n            >\r\n              <SearchIcon />\r\n            </span>\r\n            <Link\r\n              to=\"/checkout\"\r\n              style={{ color: \"white\", textDecoration: \"none\" }}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  marginLeft: \"20px\",\r\n                  right: 0,\r\n                  position: \"absolute\",\r\n                  margin: \"-11px 16px -1px\",\r\n                }}\r\n              >\r\n                <ShoppingBasketIcon />\r\n                <span\r\n                  style={{\r\n                    fontSize: \"13px\",\r\n                    fontWeight: 800,\r\n                    marginLeft: \"10px\",\r\n                    marginRight: \"10px\",\r\n                  }}\r\n                >\r\n                  {basket.length}\r\n                </span>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n      <div>\r\n        <SwipeableDrawer\r\n          anchor=\"left\"\r\n          open={openSideNav}\r\n          onClose={() => {\r\n            setOpenSideNav(false);\r\n          }}\r\n          onOpen={() => {\r\n            setOpenSideNav(true);\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              // width: \"calc(100vw - 173px)\",\r\n              width: \"100%\",\r\n              // padding: \"10px\",\r\n              height: \"-webkit-fill-available\",\r\n            }}\r\n          >\r\n            <div\r\n            // style={{ padding: \"5px\" }}\r\n            >\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"rgb(89, 26, 7)\",\r\n                  height: \"auto\",\r\n                  width: \"100%\",\r\n                  marginBottom: \"10px\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  // justifyContent: \"center\",\r\n\r\n                  flexDirection: \"column\",\r\n                  paddingTop: \"7px\",\r\n                  // borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    color: \"white\",\r\n                    fontSize: \"20px\",\r\n                    // marginLeft: \"20px\",\r\n                  }}\r\n                >\r\n                  ଆମ ପରିବା\r\n                </div>\r\n                {is_loggedin === true && (\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \"10px\",\r\n                      // display: \"flex\",\r\n                      // justifyContent: \"space-around\",\r\n                      color: \"white\",\r\n                      padding: \"2px 0px 12px\",\r\n                    }}\r\n                  >\r\n                    <span\r\n                      style={{\r\n                        border: \"1px solid white\",\r\n                        padding: \"3px 8px\",\r\n                        margin: \"10px\",\r\n                        width: \"60px\",\r\n                      }}\r\n                    >\r\n                      Account\r\n                    </span>\r\n                    <span\r\n                      style={{\r\n                        border: \"1px solid white\",\r\n                        padding: \"3px 8px\",\r\n                        margin: \"10px\",\r\n                        width: \"60px\",\r\n                      }}\r\n                    >\r\n                      Orders\r\n                    </span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <List style={{ padding: \"5px\" }}>\r\n                <ListItem\r\n                  button\r\n                  onClick={() => {\r\n                    history.push(\"/\");\r\n                    setOpenSideNav(false);\r\n                  }}\r\n                  style={menuStyle.listItem}\r\n                >\r\n                  <span style={menuStyle.listItemtext}> Home</span>\r\n                </ListItem>\r\n                <Divider />\r\n                {/* <ListItem\r\n                  button\r\n                  onClick={() => {\r\n                    history.push(\"/shop-by-category\");\r\n                    setOpenSideNav(false);\r\n                  }}\r\n                  style={menuStyle.listItem}\r\n                >\r\n                  <span style={menuStyle.listItemtext}> Shop By Category</span>\r\n                </ListItem> */}\r\n                <Divider />\r\n                <ListItem\r\n                  button\r\n                  onClick={() => {\r\n                    history.push(\"/\");\r\n                    setOpenSideNav(false);\r\n                  }}\r\n                  style={menuStyle.listItem}\r\n                >\r\n                  <span style={menuStyle.listItemtext}> Need Help</span>\r\n                </ListItem>{\" \"}\r\n                <Divider />\r\n                <ListItem\r\n                  button\r\n                  onClick={() => {\r\n                    history.push(\"/login\");\r\n                    setOpenSideNav(false);\r\n                  }}\r\n                  style={menuStyle.listItem}\r\n                >\r\n                  <span style={menuStyle.listItemtext}> About Us</span>\r\n                </ListItem>\r\n                <Divider />\r\n                {is_loggedin === true ? (\r\n                  <>\r\n                    <ListItem\r\n                      button\r\n                      onClick={() => {\r\n                        history.push(\"/my-history\");\r\n                        setOpenSideNav(false);\r\n                      }}\r\n                      style={menuStyle.listItem}\r\n                    >\r\n                      <span style={menuStyle.listItemtext}> My History</span>\r\n                    </ListItem>{\" \"}\r\n                    <Divider />\r\n                    <ListItem\r\n                      button\r\n                      onClick={() => {\r\n                        history.push(\"/my-account\");\r\n                        setOpenSideNav(false);\r\n                      }}\r\n                      style={menuStyle.listItem}\r\n                    >\r\n                      <span style={menuStyle.listItemtext}> My Account</span>\r\n                    </ListItem>{\" \"}\r\n                    <Divider />\r\n                    <ListItem\r\n                      button\r\n                      onClick={logout}\r\n                      style={menuStyle.listItem}\r\n                    >\r\n                      <span style={menuStyle.listItemtext}> logout</span>\r\n                    </ListItem>\r\n                    <Divider />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {\" \"}\r\n                    <ListItem\r\n                      button\r\n                      onClick={() => {\r\n                        history.push(\"/login\");\r\n                        setOpenSideNav(false);\r\n                      }}\r\n                      style={menuStyle.listItem}\r\n                    >\r\n                      <span style={menuStyle.listItemtext}> Login</span>\r\n                    </ListItem>\r\n                    <Divider />\r\n                  </>\r\n                )}\r\n              </List>\r\n            </div>\r\n          </div>\r\n        </SwipeableDrawer>\r\n      </div>\r\n      <Productfinder openSearchDilog={openSearchDilog} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n// export default header\r\n\r\nexport default withRouter(MobileHeader);\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\templet\\header\\DesktopHeader.js",["331","332","333","334","335","336","337","338","339"],"import { Icon } from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\r\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\r\nimport TooltipOption from \"./TooltipOption\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst style = {\r\n  shadowHeader: {\r\n    height: \"75px\",\r\n    WebkitBoxShadow: \"0 8px 24px 0 rgb(23 50 101 / 30%)\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: \"0px 15px\",\r\n    background: \"white\",\r\n    position: \"fixed\",\r\n    width: \"100%\",\r\n    zIndex: 99,\r\n    top: 0,\r\n  },\r\n  nonShadowheader: { height: \"75px\" },\r\n  logo: {\r\n    height: \"30px\",\r\n    margin: \"0px 70px 0px 0px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  headerOption: {\r\n    fontWeight: \"500\",\r\n    marginRight: \"32px\",\r\n    display: \"flex\",\r\n    cursor: \"pointer\",\r\n    alignItems: \"center\",\r\n  },\r\n  interestBotton: {\r\n    border: \"none\",\r\n    outline: \"none\",\r\n    background: \"#860090\",\r\n    width: \"140px\",\r\n    height: \"33px\",\r\n    borderRadius: \"8px\",\r\n    color: \"white\",\r\n    fontSize: \"16px\",\r\n    padding: \"5px\",\r\n    position: \"absolute\",\r\n    right: \"20px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  login: {\r\n    fontWeight: \"500\",\r\n    position: \"absolute\",\r\n    right: \"200px\",\r\n  },\r\n};\r\nconst options = {\r\n  allProducts: [\r\n    \"Life Insuranse\",\r\n    \"Health Insuranse\",\r\n    \"Bike Insuranse\",\r\n    \"Car Insuranse\",\r\n    \"business Insurance\",\r\n  ],\r\n  contacts: [\r\n    \"Home Loan\",\r\n    \"Business Loan\",\r\n    \"House Loan\",\r\n    \"Bike Loan\",\r\n    \"Car Loan\",\r\n  ],\r\n  support: [\"Founders\", \"Need Help\", \"About Us\", \"Our Partners\"],\r\n};\r\nconst menuOptions = [\r\n  {\r\n    name: \"Insuranse\",\r\n    children: options.allProducts,\r\n  },\r\n  {\r\n    name: \"Loans\",\r\n    children: options.contacts,\r\n  },\r\n  {\r\n    name: \"Support\",\r\n    children: options.support,\r\n  },\r\n];\r\nconst HtmlTooltip = styled(({ className, ...props }) => (\r\n  <Tooltip {...props} classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: \"#f5f5f9\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    maxWidth: 220,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: \"1px solid #dadde9\",\r\n  },\r\n}));\r\nconst SubManue = ({ x }) => {\r\n  const [showList, setShowList] = useState(false);\r\n  const [showStyle, setShowStyle] = useState(false);\r\n  const data = [\r\n    { name: \"Product link\" },\r\n    { name: \"Product link\" },\r\n    { name: \"Product link\" },\r\n    { name: \"Product link\" },\r\n    { name: \"Product link\" },\r\n    { name: \"Product link\" },\r\n    { name: \"Product link\" },\r\n    { name: \"Product link\" },\r\n    { name: \"Product link\" },\r\n  ];\r\n  function changeBackground(e) {\r\n    // e.target.style.background= \"white\"\r\n    e.target.style.color = \"green\";\r\n    // e.target.style.borderRadius= \"5px\"\r\n  }\r\n  function revertBackgroung(e) {\r\n    // e.target.style.background= \"\"\r\n    e.target.style.color = \"\";\r\n    // e.target.style.borderRadius= \"\"\r\n  }\r\n  return (\r\n    <span\r\n      onMouseEnter={() => {\r\n        setShowList(true);\r\n      }}\r\n      onMouseLeave={() => {\r\n        setShowList(false);\r\n      }}\r\n      style={{ display: \"flex\", position: \"relative\", cursor: \"pointer\" }}\r\n    >\r\n      <span style={{ fontSize: \"15px\", fontWeight: 500, color: \"black\" }}>\r\n        Fruits\r\n      </span>\r\n      {showList ? <ArrowDropDownIcon /> : <ArrowRightIcon />}\r\n      {showList && (\r\n        <span\r\n          // onMouseEnter={() => {\r\n          //   setShowList(true);\r\n          // }}\r\n          // onMouseLeave={() => {\r\n          //   setShowList(false);\r\n          // }}\r\n          style={{\r\n            height: \"fit-content\",\r\n            width: \"200px\",\r\n            position: \"absolute\",\r\n            background: \"#ececed\",\r\n            padding: \"10px\",\r\n            marginTop: \"20px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          {data.map((e) => (\r\n            <div\r\n              style={{ padding: \"5px\" }}\r\n              onMouseEnter={changeBackground}\r\n              onMouseLeave={revertBackgroung}\r\n            >\r\n              <span>{`${e.name}${x}`}</span>\r\n              <br />\r\n            </div>\r\n          ))}\r\n        </span>\r\n      )}\r\n    </span>\r\n  );\r\n};\r\nconst DesktopHeader = () => {\r\n  const history = useHistory();\r\n  const is_loggedin = useSelector((state) => state.authorization.is_loggedin);\r\n  const [{ basket }] = useStateValue();\r\n  const [scrollPosition, setScrollPosition] = useState(0);\r\n  const handleScroll = () => {\r\n    const position = window.pageYOffset;\r\n    setScrollPosition(position);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll, { passive: true });\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    console.log(\"scrollPosition\", scrollPosition);\r\n  }, [scrollPosition]);\r\n  return (\r\n    <div\r\n      style={{\r\n        position: scrollPosition > 80 ? \"fixed\" : \"\",\r\n        zIndex: 99,\r\n        width: \"-webkit-fill-available\",\r\n        top: 0,\r\n      }}\r\n    >\r\n      {/* header */}\r\n      <div style={{ background: \"#2f8a74\" }}>\r\n        <div\r\n          style={{\r\n            background: \"#2f8a74\",\r\n            height: \"72px\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            maxWidth: \"1300px\",\r\n            margin: \"auto\",\r\n          }}\r\n        >\r\n          {/* manu  Icon */}\r\n          <span style={{ flex: 1 }}>\r\n            <Icon style={{ margin: \"0px 31px 0px 31px\" }}>\r\n              <MenuIcon style={{ color: \"white\", fontSize: \"40px\" }} />\r\n            </Icon>\r\n          </span>\r\n          {/* Logo */}\r\n          <span style={{ margin: \"0px -18px 0px 0px\", flex: 1 }}>\r\n            <img src=\"apple.png\" style={{ height: \"40px\" }} />\r\n          </span>\r\n          <span\r\n            style={{\r\n              background: \"white\",\r\n              width: \"410px\",\r\n              height: \"40px\",\r\n              borderRadius: \"8px\",\r\n              display: \"flex\",\r\n              padding: \"0px 10px\",\r\n              alignItems: \"center\",\r\n              flex: 5,\r\n            }}\r\n          >\r\n            {/* search */}\r\n            <span style={{ flex: \"4\" }}>\r\n              {/* input */}\r\n              <input\r\n                placeholder=\"Search With Product Name and more ...\"\r\n                style={{\r\n                  height: \"38px\",\r\n                  width: \"353px\",\r\n                  border: \"none\",\r\n                  outline: \"none\",\r\n                  fontSize: \"17px\",\r\n                  fontWeight: 400,\r\n                }}\r\n              />\r\n            </span>\r\n            <span style={{ paddingLeft: \"25px\", display: \"flex\" }}>\r\n              <FormatListBulletedIcon />\r\n            </span>\r\n          </span>\r\n          <span\r\n            style={{\r\n              flex: 3,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              color: \"white\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            {/* signup */}\r\n            <PersonIcon style={{ fontSize: \"30px\" }} />\r\n            <span\r\n              onClick={() => {\r\n                history.push(\"/login\");\r\n              }}\r\n            >\r\n              Sign in\r\n            </span>{\" \"}\r\n            /{\" \"}\r\n            <span\r\n              onClick={() => {\r\n                history.push(\"/login\");\r\n              }}\r\n            >\r\n              Sign up\r\n            </span>\r\n            <span style={{ margin: \"14px 0px 0px 23px\" }}>\r\n              <Link\r\n                to=\"/checkout\"\r\n                style={{ color: \"white\", textDecoration: \"none\" }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    marginLeft: \"20px\",\r\n                    //   right: 0,\r\n                    //   position: \"absolute\",\r\n                    margin: \"-11px 16px -1px\",\r\n                  }}\r\n                >\r\n                  {is_loggedin && (\r\n                    <>\r\n                      <ShoppingCartIcon />\r\n                      <span\r\n                        style={{\r\n                          fontSize: \"13px\",\r\n                          fontWeight: 800,\r\n                          marginLeft: \"10px\",\r\n                          marginRight: \"10px\",\r\n                        }}\r\n                      >\r\n                        {basket.length}\r\n                      </span>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </Link>\r\n            </span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      {/* manue options */}\r\n      {/* <div\r\n        style={{\r\n          background: \"white\",\r\n          padding: \"5px 20px\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n          boxShadow:\r\n            scrollPosition > 80\r\n              ? \"0px 4px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)\"\r\n              : \"\",\r\n          marginBottom: \"20px\",\r\n        }}\r\n      >\r\n        {menuOptions.map((e, i) => (\r\n          <HtmlTooltip key={i} title={<TooltipOption options={e.children} />}>\r\n            <span style={style.headerOption}>\r\n              {e.name} <ArrowDropDownIcon />\r\n            </span>\r\n          </HtmlTooltip>\r\n        ))}\r\n         <SubManue x={1} />\r\n        <SubManue x={2} />\r\n        <SubManue x={3} />\r\n        <SubManue x={4} />\r\n        <SubManue x={5} />\r\n        <SubManue x={6} />\r\n        <SubManue x={7} />\r\n        <SubManue x={8} />\r\n        <SubManue x={9} />\r\n        <SubManue x={10} />\r\n        <SubManue x={11} /> \r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DesktopHeader;\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\actions\\deviceRecognizer.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\home\\index.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\home\\leftNav.js",["340","341"],"import React from \"react\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport './style.css'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    // height: 110,\r\n    flexGrow: 1,\r\n    // maxWidth: 400,\r\n    background: \"white\",\r\n    borderRadius: \"10px\",\r\n    padding:'10px'\r\n  },\r\n \r\n});\r\nconst LeftNav = () => {\r\n  const classes = useStyles();\r\n  const renderTree = (nodes) => (\r\n    <TreeItem key={nodes.id} nodeId={nodes.id} label={nodes.name}>\r\n      {Array.isArray(nodes.children)\r\n        ? nodes.children.map((node) => renderTree(node))\r\n        : null}\r\n    </TreeItem>\r\n  );\r\n  return (\r\n    <div>\r\n      <TreeView\r\n        className={classes.root}\r\n        defaultCollapseIcon={<ExpandMoreIcon />}\r\n        defaultExpandIcon={<ChevronRightIcon />}\r\n        // multiSelect\r\n      >\r\n        <TreeItem nodeId=\"1\" label=\"Fruits & Vagitables\">\r\n          <TreeItem nodeId=\"2\" label=\"Fresh Fruits\" />\r\n          <TreeItem nodeId=\"3\" label=\"Fresh Vegitables\" />\r\n          <TreeItem nodeId=\"4\" label=\"Herbs & Seasonings\" />\r\n          <TreeItem nodeId=\"5\" label=\"Exotic Fruits & Vegitables\" />\r\n        </TreeItem>\r\n        <TreeItem nodeId=\"6\" label=\"Dairy & Bekery\">\r\n          <TreeItem nodeId=\"7\" label=\"Calendar\" />\r\n          <TreeItem nodeId=\"8\" label=\"Chrome\" />\r\n          <TreeItem nodeId=\"9\" label=\"Webstorm\" />\r\n        </TreeItem>\r\n        <TreeItem nodeId=\"10\" label=\"Applications\">\r\n          <TreeItem nodeId=\"11\" label=\"Calendar\" />\r\n          <TreeItem nodeId=\"12\" label=\"Chrome\" />\r\n          <TreeItem nodeId=\"13\" label=\"Webstorm\" />\r\n        </TreeItem>\r\n        <TreeItem nodeId=\"14\" label=\"Applications\">\r\n          <TreeItem nodeId=\"15\" label=\"Calendar\" />\r\n          <TreeItem nodeId=\"16\" label=\"Chrome\" />\r\n          <TreeItem nodeId=\"17\" label=\"Webstorm\" />\r\n        </TreeItem>\r\n        <TreeItem nodeId=\"18\" label=\"Applications\">\r\n          <TreeItem nodeId=\"19\" label=\"Calendar\" />\r\n          <TreeItem nodeId=\"20\" label=\"Chrome\" />\r\n          <TreeItem nodeId=\"21\" label=\"Webstorm\" />\r\n        </TreeItem>\r\n        <TreeItem nodeId=\"22\" label=\"Applications\">\r\n          <TreeItem nodeId=\"23\" label=\"Calendar\" />\r\n          <TreeItem nodeId=\"24\" label=\"Chrome\" />\r\n          <TreeItem nodeId=\"25\" label=\"Webstorm\" />\r\n        </TreeItem>\r\n        <TreeItem nodeId=\"26\" label=\"Documents\">\r\n          <TreeItem nodeId=\"27\" label=\"index.js\" />\r\n          <TreeItem nodeId=\"28\" label=\"tree-view.js\" />\r\n        </TreeItem>\r\n      </TreeView>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftNav;\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\home\\body.js",["342","343","344","345","346","347"],"// eslint-disable-next-line\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport LProductCard from \"../Product/LProduct\";\r\nimport { TopDeal } from \"../Product/Topdeals\";\r\nconst data = [\r\n  {\r\n    id: 1,\r\n    product_id: \"1\",\r\n    Products: {\r\n      id: 1,\r\n      name: \"Apple\",\r\n      image: \"apple.png\",\r\n      qntity: [\r\n        {\r\n          id: 4,\r\n          quantity: 1,\r\n          base_price: 32,\r\n          discount: 12,\r\n          unit: {\r\n            id: 1,\r\n            full_name: \"Kilogram\",\r\n            short_name: \"Kg\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n        {\r\n          id: 5,\r\n          quantity: 2,\r\n          base_price: 54,\r\n          discount: 32,\r\n          unit: {\r\n            id: 1,\r\n            full_name: \"Kilogram\",\r\n            short_name: \"Kg\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n        {\r\n          id: 6,\r\n          quantity: 5,\r\n          base_price: 65,\r\n          discount: 50,\r\n          unit: {\r\n            id: 1,\r\n            full_name: \"Kilogram\",\r\n            short_name: \"Kg\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 2,\r\n    product_id: \"2\",\r\n    Products: {\r\n      id: 2,\r\n      name: \"Banana\",\r\n      image: \"banana.webp\",\r\n      qntity: [\r\n        {\r\n          id: 1,\r\n          quantity: 2,\r\n          base_price: 23,\r\n          discount: 12,\r\n          unit: {\r\n            id: 1,\r\n            full_name: \"Kilogram\",\r\n            short_name: \"Kg\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n        {\r\n          id: 2,\r\n          quantity: 1,\r\n          base_price: 32,\r\n          discount: 23,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n        {\r\n          id: 9,\r\n          quantity: 3,\r\n          base_price: 32,\r\n          discount: 11,\r\n          unit: {\r\n            id: 1,\r\n            full_name: \"Kilogram\",\r\n            short_name: \"Kg\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 6,\r\n    product_id: \"3\",\r\n    Products: {\r\n      id: 3,\r\n      name: \"Water Millon\",\r\n      image: \"product_image__2021-03-25-16-45-26.png\",\r\n      qntity: [\r\n        {\r\n          id: 3,\r\n          quantity: 3,\r\n          base_price: 32,\r\n          discount: 24,\r\n          unit: {\r\n            id: 1,\r\n            full_name: \"Kilogram\",\r\n            short_name: \"Kg\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n        {\r\n          id: 7,\r\n          quantity: 3,\r\n          base_price: 23,\r\n          discount: 12,\r\n          unit: {\r\n            id: 1,\r\n            full_name: \"Kilogram\",\r\n            short_name: \"Kg\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n        {\r\n          id: 8,\r\n          quantity: 5,\r\n          base_price: 12,\r\n          discount: 12,\r\n          unit: {\r\n            id: 1,\r\n            full_name: \"Kilogram\",\r\n            short_name: \"Kg\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 9,\r\n    product_id: \"18\",\r\n    Products: {\r\n      id: 18,\r\n      name: \"Baby Corn\",\r\n      image: \"Baby-corn.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 50,\r\n          quantity: 1,\r\n          base_price: 20,\r\n          discount: 2,\r\n          unit: {\r\n            id: 3,\r\n            full_name: \"Pices\",\r\n            short_name: \"pcs\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n        {\r\n          id: 51,\r\n          quantity: 2,\r\n          base_price: 40,\r\n          discount: 4,\r\n          unit: {\r\n            id: 3,\r\n            full_name: \"Pices\",\r\n            short_name: \"pcs\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n        {\r\n          id: 52,\r\n          quantity: 3,\r\n          base_price: 60,\r\n          discount: 5,\r\n          unit: {\r\n            id: 3,\r\n            full_name: \"Pices\",\r\n            short_name: \"pcs\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 10,\r\n    product_id: \"63\",\r\n    Products: {\r\n      id: 63,\r\n      name: \"Gilodi\",\r\n      image: \"DESI_GILODI-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 108,\r\n          quantity: 1,\r\n          base_price: 50,\r\n          discount: 5,\r\n          unit: {\r\n            id: 1,\r\n            full_name: \"Kilogram\",\r\n            short_name: \"Kg\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 11,\r\n    product_id: \"8\",\r\n    Products: {\r\n      id: 8,\r\n      name: \"Button Mushroom\",\r\n      image: \"product_image__2021-03-25-16-48-08.webp\",\r\n      qntity: [\r\n        {\r\n          id: 28,\r\n          quantity: 1,\r\n          base_price: 100,\r\n          discount: 12,\r\n          unit: {\r\n            id: 1,\r\n            full_name: \"Kilogram\",\r\n            short_name: \"Kg\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n        {\r\n          id: 29,\r\n          quantity: 2,\r\n          base_price: 200,\r\n          discount: 12,\r\n          unit: {\r\n            id: 1,\r\n            full_name: \"Kilogram\",\r\n            short_name: \"Kg\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n        {\r\n          id: 30,\r\n          quantity: 3,\r\n          base_price: 300,\r\n          discount: 12,\r\n          unit: {\r\n            id: 1,\r\n            full_name: \"Kilogram\",\r\n            short_name: \"Kg\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n  {\r\n    id: 12,\r\n    product_id: \"78\",\r\n    Products: {\r\n      id: 78,\r\n      name: \"Coriander\",\r\n      image: \"coriander-270x360.jpg\",\r\n      qntity: [\r\n        {\r\n          id: 80,\r\n          quantity: 100,\r\n          base_price: 30,\r\n          discount: 14,\r\n          unit: {\r\n            id: 2,\r\n            full_name: \"Gram\",\r\n            short_name: \"g\",\r\n            __typename: \"Unit\",\r\n          },\r\n          __typename: \"ProductsQuantityOptions\",\r\n        },\r\n      ],\r\n      __typename: \"Products\",\r\n    },\r\n    __typename: \"TopDeals\",\r\n  },\r\n];\r\nconst getAllProduct = gql`\r\n  query {\r\n    Product: get_allProduct {\r\n      id\r\n      name\r\n      image\r\n      qntity {\r\n        id\r\n        quantity\r\n        base_price\r\n        discount\r\n        unit {\r\n          id\r\n          full_name\r\n          short_name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst Body = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const { networkStatus, called, loading, data } = useQuery(getAllProduct);\r\n  useEffect(() => {\r\n    // setShowloader(true);\r\n    if (networkStatus === 7) {\r\n      console.log(\"data.get_allProduct\", data.get_allProduct);\r\n      setProducts(data.Product);\r\n      // setShowloader(false);\r\n    }\r\n  }, [networkStatus]);\r\n  return (\r\n    <div>\r\n      <img\r\n        src=\"amaparibaBanner4.webp\"\r\n        style={{ width: \"100%\", borderRadius: \"10px\" }}\r\n      />\r\n      <Grid\r\n        container\r\n        style={{\r\n          marginTop: \"20px\",\r\n          background: \"white\",\r\n          padding: \"10px\",\r\n        }}\r\n      >\r\n        {products.map((item) => (\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            sm={4}\r\n            md={3}\r\n            style={{\r\n              display: \"flex\",\r\n              marginBottom: \"15px\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <LProductCard item={item} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\Product\\LProduct.js",["348","349","350","351","352","353","354","355","356","357","358","359","360","361","362"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Checkbox,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  get_product_list,\r\n  get_product_qnt_options,\r\n  get_top_deals,\r\n  site_url,\r\n} from \"../../constants/api\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport axios from \"axios\";\r\nimport CustomButton from \"../templet/AddButton\";\r\nimport { useStateValue } from \"../templet/StateProvider\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nconst LProductCard = ({ item }) => {\r\n  console.log('jnslk',item.qntity[0])\r\n  // console.log(item.qntity[0].quantity.unit.short_name)\r\n  const [{ basket }] = useStateValue();\r\n  const [productQntOption, setProductQntOption] = useState(\r\n    item.qntity\r\n  );\r\n  const [discount, setDiscount] = useState(item.qntity[0].discount);\r\n  const [productPrice, setProductPrice] = useState(\r\n    `${item.qntity[0].base_price}`\r\n  );\r\n  const [quantityId, setQuantityId] = useState(item.qntity[0].id);\r\n  const [openAmountPicker, setOpenAmountPicker] = useState(false);\r\n  const [discountedPrice, setDiscountedPrice] = useState(\r\n    Math.round(\r\n      item.qntity[0].base_price -\r\n        (item.qntity[0].base_price *\r\n          item.qntity[0].discount) /\r\n          100\r\n    )\r\n  );\r\n  const [productAmount, setProductAmount] = useState(\r\n    `${item.qntity[0].quantity}${item.qntity[0].unit.short_name}`\r\n  );\r\n  const productId = [];\r\n  const productAmt = [];\r\n  basket.forEach((item) => {\r\n    productId.push(item.id);\r\n    productAmt.push(item.amount);\r\n  });\r\n  var count = {};\r\n  productId.forEach(function (i) {\r\n    count[i] = (count[i] || 0) + 1;\r\n  });\r\n  const Item_id = [];\r\n  const Id = [];\r\n  const basketQuantityId = [];\r\n  const BasketIdWithProductId = {};\r\n  basket.forEach((item) => {\r\n    Item_id.push(item.item_id);\r\n    basketQuantityId.push(item.quantityId);\r\n    Id.push(item.id);\r\n  });\r\n  Item_id.forEach(\r\n    (item_id, i) =>\r\n      (BasketIdWithProductId[item_id] = [Id[i], basketQuantityId[i]])\r\n  );\r\n  const result = Object.keys(BasketIdWithProductId).find(\r\n    (key) =>\r\n      JSON.stringify(BasketIdWithProductId[key]) ==\r\n      JSON.stringify([item.id, quantityId])\r\n  );\r\n  const productQntSelected = (items) => {\r\n    if (items.unit) {\r\n      console.log(items);\r\n      setQuantityId(items.id);\r\n      setProductAmount(`${items.quantity}${items.unit.short_name}`);\r\n      setProductPrice(items.base_price);\r\n      setDiscountedPrice(\r\n        Math.round(items.base_price - (items.base_price * items.discount) / 100)\r\n      );\r\n      setDiscount(items.discount);\r\n      setTimeout(() => {\r\n        setOpenAmountPicker(false);\r\n      }, 100);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (openAmountPicker) {\r\n      document.body.style.overflow = \"hidden\";\r\n    }\r\n    if (!openAmountPicker) {\r\n      document.body.style.overflow = \"unset\";\r\n    }\r\n  }, [openAmountPicker]);\r\n  let BasketWithSameProduct = [];\r\n  basket.forEach((element) => {\r\n    if (element.id == item.id) {\r\n      BasketWithSameProduct.unshift(element);\r\n    }\r\n  });\r\n  let currentBasketqntyid = {};\r\n  if (BasketWithSameProduct[0] && item.qntity) {\r\n    item.qntity.forEach((element) => {\r\n      if (element.id == BasketWithSameProduct[0].quantityId) {\r\n        currentBasketqntyid = element;\r\n      }\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (BasketWithSameProduct[0]) {\r\n        if (BasketWithSameProduct[0].quantityId != quantityId) {\r\n          productQntSelected(currentBasketqntyid);\r\n        }\r\n      }\r\n    }, 100);\r\n  }, [basket]);\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        style={{\r\n          flexShrink: 0,\r\n          // marginRight: \"10px\",\r\n          padding: \"10px\",\r\n          // maxWidth: \"170px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          width: \"200px\",\r\n          height: \"300px\",\r\n          borderRadius: \"12px\",\r\n          border: \"1px solid #cbc1ab\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            // flex: \"3 1 0%\",\r\n            border: \" 1px solid rgba(128, 128, 128, 0.32)\",\r\n            //   margin: \"5px 19px 5px 5px\",\r\n            padding: \"5px\",\r\n            borderRadius: \"10px\",\r\n            background: \"rgb(253, 253, 253)\",\r\n            boxShadow: \"rgb(0 0 0 / 5%) 0px 5px 15px\",\r\n            height: \"150px\",\r\n            width: \"150px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n            position: \"relative\",\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          <div\r\n            style={{\r\n              background: \"green\",\r\n              color: \"white\",\r\n              padding: \"3px\",\r\n              borderRadius: \"0px 0px 45px 45px\",\r\n              fontSize: \"13px\",\r\n              height: \"13px\",\r\n              width: \"95px\",\r\n              // position: \"absolute\",\r\n              // margin: \"-124px -18px 0px -5px\",\r\n              textAlign: \"center\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n            }}\r\n          >\r\n            {discount}% off\r\n          </div>\r\n          <img\r\n            src={item.image}\r\n            alt={item.name}\r\n            style={{ width: \"140px\" }}\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            padding: \"7px 0px 0px 0px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <span style={{ fontSize: \"17px\", paddingBottom: \"5px\" }}>\r\n            {item.name}\r\n            <del\r\n              style={{ color: \"#5d5b5b\", fontSize: \"14px\", paddingLeft: \"5px\" }}\r\n            >\r\n              ₹{productPrice}\r\n            </del>\r\n            <span style={{ marginLeft: \"15px\" }}>₹{discountedPrice}</span>\r\n          </span>\r\n          {/* <span>\r\n              {\" \"}\r\n             \r\n            </span> */}\r\n          <select\r\n            //   onClick={() => {\r\n            //     // productAmtApi();\r\n            //     setOpenAmountPicker(true);\r\n            //   }}\r\n            style={{\r\n              borderRadius: \"5px\",\r\n              border: \"1px solid #0080003b\",\r\n              padding: \"2px 0px 2px 6px\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"row\",\r\n              fontSize: \"15px\",\r\n              height: \"25px\",\r\n              justifyContent: \"center\",\r\n              marginTop: \"7px\",\r\n              width: \"170px\",\r\n              outline: \"none\",\r\n            }}\r\n          >\r\n            <option\r\n              style={\r\n                {\r\n                  // flex: 1\r\n                }\r\n              }\r\n            >\r\n              {/* {productAmount} */}\r\n              100g\r\n            </option>\r\n            <option\r\n              style={\r\n                {\r\n                  // flex: 1\r\n                }\r\n              }\r\n            >\r\n              {/* {productAmount} */}\r\n              200g\r\n            </option>\r\n            <option\r\n              style={\r\n                {\r\n                  // flex: 1\r\n                }\r\n              }\r\n            >\r\n              {/* {productAmount} */}\r\n              300g\r\n            </option>\r\n            {/* <span\r\n                style={{\r\n                  flex: 1,\r\n                  textAlign: \"end\",\r\n                  paddingRight: \"8px\",\r\n                }}\r\n              >\r\n                <KeyboardArrowDownIcon style={{ fontSize: \"15px\" }} />\r\n              </span> */}\r\n          </select>\r\n          <div\r\n            style={{\r\n              margin: \"10px 0px -5px -5px\",\r\n            }}\r\n          >\r\n            <CustomButton\r\n              id={item.id}\r\n              image={item.image_url}\r\n              name={item.product_name}\r\n              amount={productAmount}\r\n              price={parseInt(discountedPrice)}\r\n              width=\"117px\"\r\n              stage=\"add\"\r\n              count={count[item.id]}\r\n              quantityId={quantityId}\r\n              item_id={result}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card>\r\n      <Dialog\r\n        fullWidth={true}\r\n        onClose={() => {\r\n          setOpenAmountPicker(false);\r\n        }}\r\n        open={openAmountPicker}\r\n      >\r\n        <DialogTitle\r\n          style={{ borderBottom: \"1px solid gray\", padding: \"7px\" }}\r\n          onClose={() => {\r\n            setOpenAmountPicker(false);\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              position: \"relative\",\r\n\r\n              paddingLeft: \"18px\",\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                fontSize: \" 24px\",\r\n                fontWeight: 600,\r\n                fontFamily: \"auto\",\r\n                color: \"#a70606\",\r\n              }}\r\n            >\r\n              {item.name}\r\n            </span>\r\n            <span\r\n              onClick={() => {\r\n                setOpenAmountPicker(false);\r\n              }}\r\n              style={{\r\n                position: \"fixed\",\r\n                right: 0,\r\n                border: \"1px solid #a7a3a3\",\r\n                margin: \"-57px 20px 0px 0px\",\r\n                borderRadius: \"15px\",\r\n                padding: \"1px\",\r\n                background: \"white\",\r\n                display: \"flex\",\r\n              }}\r\n            >\r\n              <CloseIcon />\r\n            </span>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent style={{ padding: \"9px 8px\" }}>\r\n          {productQntOption.map((item, index) => (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <Card\r\n                style={{\r\n                  padding: \"5px\",\r\n                  borderRadius: \"4px\",\r\n                  fontSize: \"19px\",\r\n                  marginBottom: \" 10px\",\r\n                }}\r\n              >\r\n                <span>\r\n                  {item.quantity} {item.unit.short_name}\r\n                  <del\r\n                    style={{\r\n                      marginLeft: \"90px\",\r\n                      color: \"green\",\r\n                      fontWeight: 500,\r\n                    }}\r\n                  >\r\n                    ₹{item.base_price}\r\n                  </del>\r\n                  <span\r\n                    style={{\r\n                      marginLeft: \"14px\",\r\n                      color: \"green\",\r\n                      fontWeight: 600,\r\n                    }}\r\n                  >\r\n                    ₹\r\n                    {Math.round(\r\n                      item.base_price - (item.base_price * item.discount) / 100\r\n                    )}\r\n                  </span>\r\n                </span>\r\n                <span\r\n                  style={{\r\n                    right: 0,\r\n                    position: \"absolute\",\r\n                    margin: \"-1px 15px 0px 0px\",\r\n                  }}\r\n                >\r\n                  <Checkbox\r\n                    style={{ padding: \"0px\" }}\r\n                    checked={quantityId === item.id}\r\n                    onClick={() => {\r\n                      productQntSelected(item);\r\n                    }}\r\n                  />\r\n                </span>\r\n              </Card>\r\n            </div>\r\n          ))}\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\nexport default LProductCard;\r\n",["363","364"],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\profile\\my-address.js",["365"],"import { Checkbox, Dialog, Radio, Slide } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Header from \"../../Component/templet/header\";\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst MyAddress = () => {\r\n  //   console.log(addNew);\r\n  const [open, setOpen] = useState(false);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Header pagetitle={\"Address\"} />\r\n      <div\r\n        // style={{ display: \"flex\", alignItems: \"flex-start\", marginTop: \"10px\",background:\"white\" ,padding:'5px'}}\r\n        className=\"address\"\r\n      >\r\n        <Radio />\r\n        <div>\r\n          <div>\r\n            <span style={{ fontWeight: 700 }}>Default Address: </span>\r\n            <span>home</span>\r\n          </div>\r\n          <div>Kishan Tripathy</div>\r\n          <div>\r\n            HouseNO, Apartmant Name, Street, AreaDetail, Bangalore - 560063\r\n          </div>\r\n          <div>ph: 9861177199</div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: \"-webkit-fill-available\",\r\n          background: \"rgb(47, 138, 116)\",\r\n          bottom: 0,\r\n          position: \"absolute\",\r\n          padding: \"10px 15px\",\r\n          textAlign: \"right\",\r\n        }}\r\n      >\r\n        <button\r\n          onClick={() => {\r\n            setOpen(true);\r\n          }}\r\n          className=\"customButton\"\r\n        >\r\n          ADD NEW\r\n        </button>\r\n      </div>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <div\r\n          style={{\r\n            width: \"-webkit-fill-available\",\r\n            background: \"rgb(47, 138, 116)\",\r\n            color: \"white\",\r\n            fontSize: \"19px\",\r\n            padding: \"10px 15px\",\r\n          }}\r\n        >\r\n          NewAddress\r\n          <CloseIcon\r\n            onClick={handleClose}\r\n            style={{ position: \"absolute\", right: 15 }}\r\n          />\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n// const AddNewAddress = ({ addNew }) => {\r\n//   return (\r\n//     <div>\r\n//       <Header pagetitle={\"NewAddress\"} />\r\n//     </div>\r\n//   );\r\n// };\r\n// const Address = () => {\r\n//   const [addNew, setAddNew] = useState(false);\r\n//   const wddjbf = () => {\r\n//     setAddNew(!addNew);\r\n//   };\r\n//   return (\r\n//     <>\r\n//       {addNew ? (\r\n//         <AddNewAddress addNew={wddjbf} />\r\n//       ) : (\r\n//         <MyAddress addNew={wddjbf} />\r\n//       )}\r\n//     </>\r\n//   );\r\n// };\r\nexport default MyAddress;\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\checkout\\dalivery-options.js",["366"],"import React, { useState } from \"react\";\r\nimport Header from \"../../Component/templet/header\";\r\n\r\nconst DaliveryOptions = () => {\r\n\r\n  return (\r\n    <div>\r\n      <Header pagetitle={\"Dalivery Options\"} />\r\n     <div>\r\n         uaohdoi\r\n     </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DaliveryOptions;\r\n","D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\pages\\checkout\\make-payment.js",[],"D:\\Amapariba\\Ama-pariba-E-commerce-\\src\\Component\\templet\\header\\TooltipOption.js",[],{"ruleId":"367","replacedBy":"368"},{"ruleId":"369","replacedBy":"370"},{"ruleId":"371","severity":1,"message":"372","line":44,"column":12,"nodeType":"373","messageId":"374","endLine":44,"endColumn":18},{"ruleId":"371","severity":1,"message":"375","line":46,"column":26,"nodeType":"373","messageId":"374","endLine":46,"endColumn":32},{"ruleId":"371","severity":1,"message":"376","line":46,"column":34,"nodeType":"373","messageId":"374","endLine":46,"endColumn":41},{"ruleId":"377","severity":1,"message":"378","line":75,"column":6,"nodeType":"379","endLine":75,"endColumn":21,"suggestions":"380"},{"ruleId":"377","severity":1,"message":"381","line":94,"column":6,"nodeType":"379","endLine":94,"endColumn":16,"suggestions":"382"},{"ruleId":"383","severity":1,"message":"384","line":25,"column":5,"nodeType":"385","messageId":"386","endLine":30,"endColumn":13},{"ruleId":"371","severity":1,"message":"387","line":2,"column":8,"nodeType":"373","messageId":"374","endLine":2,"endColumn":22},{"ruleId":"371","severity":1,"message":"388","line":1,"column":17,"nodeType":"373","messageId":"374","endLine":1,"endColumn":26},{"ruleId":"371","severity":1,"message":"389","line":1,"column":28,"nodeType":"373","messageId":"374","endLine":1,"endColumn":36},{"ruleId":"371","severity":1,"message":"372","line":8,"column":12,"nodeType":"373","messageId":"374","endLine":8,"endColumn":18},{"ruleId":"371","severity":1,"message":"390","line":8,"column":10,"nodeType":"373","messageId":"374","endLine":8,"endColumn":26},{"ruleId":"371","severity":1,"message":"388","line":12,"column":10,"nodeType":"373","messageId":"374","endLine":12,"endColumn":19},{"ruleId":"371","severity":1,"message":"388","line":1,"column":27,"nodeType":"373","messageId":"374","endLine":1,"endColumn":36},{"ruleId":"371","severity":1,"message":"391","line":60,"column":26,"nodeType":"373","messageId":"374","endLine":60,"endColumn":35},{"ruleId":"392","severity":1,"message":"393","line":112,"column":13,"nodeType":"394","endLine":112,"endColumn":77},{"ruleId":"371","severity":1,"message":"395","line":1,"column":8,"nodeType":"373","messageId":"374","endLine":1,"endColumn":13},{"ruleId":"371","severity":1,"message":"396","line":4,"column":8,"nodeType":"373","messageId":"374","endLine":4,"endColumn":19},{"ruleId":"392","severity":1,"message":"393","line":60,"column":9,"nodeType":"394","endLine":60,"endColumn":68},{"ruleId":"371","severity":1,"message":"375","line":102,"column":26,"nodeType":"373","messageId":"374","endLine":102,"endColumn":32},{"ruleId":"371","severity":1,"message":"376","line":102,"column":34,"nodeType":"373","messageId":"374","endLine":102,"endColumn":41},{"ruleId":"377","severity":1,"message":"397","line":111,"column":6,"nodeType":"379","endLine":111,"endColumn":21,"suggestions":"398"},{"ruleId":"371","severity":1,"message":"399","line":3,"column":8,"nodeType":"373","messageId":"374","endLine":3,"endColumn":22},{"ruleId":"371","severity":1,"message":"400","line":4,"column":8,"nodeType":"373","messageId":"374","endLine":4,"endColumn":24},{"ruleId":"371","severity":1,"message":"388","line":8,"column":10,"nodeType":"373","messageId":"374","endLine":8,"endColumn":19},{"ruleId":"371","severity":1,"message":"389","line":9,"column":10,"nodeType":"373","messageId":"374","endLine":9,"endColumn":18},{"ruleId":"371","severity":1,"message":"395","line":10,"column":8,"nodeType":"373","messageId":"374","endLine":10,"endColumn":13},{"ruleId":"401","severity":1,"message":"402","line":238,"column":15,"nodeType":"403","endLine":238,"endColumn":31},{"ruleId":"371","severity":1,"message":"395","line":1,"column":8,"nodeType":"373","messageId":"374","endLine":1,"endColumn":13},{"ruleId":"377","severity":1,"message":"404","line":73,"column":6,"nodeType":"379","endLine":73,"endColumn":18,"suggestions":"405"},{"ruleId":"371","severity":1,"message":"395","line":7,"column":8,"nodeType":"373","messageId":"374","endLine":7,"endColumn":13},{"ruleId":"371","severity":1,"message":"406","line":10,"column":3,"nodeType":"373","messageId":"374","endLine":10,"endColumn":24},{"ruleId":"371","severity":1,"message":"407","line":11,"column":3,"nodeType":"373","messageId":"374","endLine":11,"endColumn":29},{"ruleId":"371","severity":1,"message":"372","line":59,"column":12,"nodeType":"373","messageId":"374","endLine":59,"endColumn":18},{"ruleId":"371","severity":1,"message":"408","line":63,"column":10,"nodeType":"373","messageId":"374","endLine":63,"endColumn":22},{"ruleId":"371","severity":1,"message":"409","line":66,"column":23,"nodeType":"373","messageId":"374","endLine":66,"endColumn":32},{"ruleId":"371","severity":1,"message":"410","line":67,"column":26,"nodeType":"373","messageId":"374","endLine":67,"endColumn":35},{"ruleId":"371","severity":1,"message":"411","line":10,"column":10,"nodeType":"373","messageId":"374","endLine":10,"endColumn":24},{"ruleId":"371","severity":1,"message":"412","line":56,"column":25,"nodeType":"373","messageId":"374","endLine":56,"endColumn":33},{"ruleId":"371","severity":1,"message":"413","line":72,"column":9,"nodeType":"373","messageId":"374","endLine":72,"endColumn":18},{"ruleId":"371","severity":1,"message":"414","line":89,"column":9,"nodeType":"373","messageId":"374","endLine":89,"endColumn":18},{"ruleId":"371","severity":1,"message":"415","line":95,"column":9,"nodeType":"373","messageId":"374","endLine":95,"endColumn":17},{"ruleId":"371","severity":1,"message":"416","line":2,"column":23,"nodeType":"373","messageId":"374","endLine":2,"endColumn":34},{"ruleId":"371","severity":1,"message":"417","line":3,"column":10,"nodeType":"373","messageId":"374","endLine":3,"endColumn":22},{"ruleId":"371","severity":1,"message":"418","line":3,"column":24,"nodeType":"373","messageId":"374","endLine":3,"endColumn":32},{"ruleId":"371","severity":1,"message":"419","line":4,"column":8,"nodeType":"373","messageId":"374","endLine":4,"endColumn":14},{"ruleId":"371","severity":1,"message":"420","line":5,"column":8,"nodeType":"373","messageId":"374","endLine":5,"endColumn":13},{"ruleId":"371","severity":1,"message":"387","line":7,"column":8,"nodeType":"373","messageId":"374","endLine":7,"endColumn":22},{"ruleId":"371","severity":1,"message":"411","line":13,"column":10,"nodeType":"373","messageId":"374","endLine":13,"endColumn":24},{"ruleId":"371","severity":1,"message":"421","line":15,"column":10,"nodeType":"373","messageId":"374","endLine":15,"endColumn":25},{"ruleId":"371","severity":1,"message":"422","line":16,"column":10,"nodeType":"373","messageId":"374","endLine":16,"endColumn":27},{"ruleId":"371","severity":1,"message":"423","line":60,"column":9,"nodeType":"373","messageId":"374","endLine":60,"endColumn":25},{"ruleId":"371","severity":1,"message":"424","line":74,"column":28,"nodeType":"373","messageId":"374","endLine":74,"endColumn":39},{"ruleId":"371","severity":1,"message":"425","line":75,"column":10,"nodeType":"373","messageId":"374","endLine":75,"endColumn":23},{"ruleId":"371","severity":1,"message":"412","line":75,"column":25,"nodeType":"373","messageId":"374","endLine":75,"endColumn":33},{"ruleId":"371","severity":1,"message":"426","line":11,"column":3,"nodeType":"373","messageId":"374","endLine":11,"endColumn":19},{"ruleId":"371","severity":1,"message":"427","line":12,"column":3,"nodeType":"373","messageId":"374","endLine":12,"endColumn":26},{"ruleId":"371","severity":1,"message":"428","line":13,"column":3,"nodeType":"373","messageId":"374","endLine":13,"endColumn":16},{"ruleId":"371","severity":1,"message":"429","line":14,"column":3,"nodeType":"373","messageId":"374","endLine":14,"endColumn":11},{"ruleId":"371","severity":1,"message":"395","line":18,"column":8,"nodeType":"373","messageId":"374","endLine":18,"endColumn":13},{"ruleId":"371","severity":1,"message":"430","line":78,"column":28,"nodeType":"373","messageId":"374","endLine":78,"endColumn":47},{"ruleId":"431","severity":1,"message":"432","line":123,"column":50,"nodeType":"433","messageId":"434","endLine":123,"endColumn":52},{"ruleId":"431","severity":1,"message":"432","line":151,"column":20,"nodeType":"433","messageId":"434","endLine":151,"endColumn":22},{"ruleId":"431","severity":1,"message":"432","line":158,"column":22,"nodeType":"433","messageId":"434","endLine":158,"endColumn":24},{"ruleId":"431","severity":1,"message":"435","line":166,"column":49,"nodeType":"433","messageId":"434","endLine":166,"endColumn":51},{"ruleId":"377","severity":1,"message":"436","line":171,"column":6,"nodeType":"379","endLine":171,"endColumn":14,"suggestions":"437"},{"ruleId":"371","severity":1,"message":"375","line":427,"column":26,"nodeType":"373","messageId":"374","endLine":427,"endColumn":32},{"ruleId":"371","severity":1,"message":"376","line":427,"column":34,"nodeType":"373","messageId":"374","endLine":427,"endColumn":41},{"ruleId":"377","severity":1,"message":"438","line":445,"column":6,"nodeType":"379","endLine":445,"endColumn":21,"suggestions":"439"},{"ruleId":"371","severity":1,"message":"395","line":2,"column":8,"nodeType":"373","messageId":"374","endLine":2,"endColumn":13},{"ruleId":"371","severity":1,"message":"440","line":3,"column":10,"nodeType":"373","messageId":"374","endLine":3,"endColumn":32},{"ruleId":"371","severity":1,"message":"375","line":75,"column":26,"nodeType":"373","messageId":"374","endLine":75,"endColumn":32},{"ruleId":"371","severity":1,"message":"376","line":75,"column":34,"nodeType":"373","messageId":"374","endLine":75,"endColumn":41},{"ruleId":"377","severity":1,"message":"441","line":87,"column":6,"nodeType":"379","endLine":87,"endColumn":21,"suggestions":"442"},{"ruleId":"371","severity":1,"message":"443","line":87,"column":9,"nodeType":"373","messageId":"374","endLine":87,"endColumn":19},{"ruleId":"371","severity":1,"message":"375","line":98,"column":26,"nodeType":"373","messageId":"374","endLine":98,"endColumn":32},{"ruleId":"371","severity":1,"message":"376","line":98,"column":34,"nodeType":"373","messageId":"374","endLine":98,"endColumn":41},{"ruleId":"377","severity":1,"message":"444","line":117,"column":6,"nodeType":"379","endLine":117,"endColumn":21,"suggestions":"445"},{"ruleId":"371","severity":1,"message":"395","line":4,"column":8,"nodeType":"373","messageId":"374","endLine":4,"endColumn":13},{"ruleId":"371","severity":1,"message":"446","line":6,"column":3,"nodeType":"373","messageId":"374","endLine":6,"endColumn":27},{"ruleId":"371","severity":1,"message":"447","line":7,"column":3,"nodeType":"373","messageId":"374","endLine":7,"endColumn":23},{"ruleId":"371","severity":1,"message":"375","line":104,"column":26,"nodeType":"373","messageId":"374","endLine":104,"endColumn":32},{"ruleId":"371","severity":1,"message":"376","line":104,"column":34,"nodeType":"373","messageId":"374","endLine":104,"endColumn":41},{"ruleId":"377","severity":1,"message":"448","line":114,"column":6,"nodeType":"379","endLine":114,"endColumn":21,"suggestions":"449"},{"ruleId":"371","severity":1,"message":"429","line":6,"column":10,"nodeType":"373","messageId":"374","endLine":6,"endColumn":18},{"ruleId":"371","severity":1,"message":"372","line":12,"column":12,"nodeType":"373","messageId":"374","endLine":12,"endColumn":18},{"ruleId":"377","severity":1,"message":"404","line":82,"column":6,"nodeType":"379","endLine":82,"endColumn":18,"suggestions":"450"},{"ruleId":"371","severity":1,"message":"451","line":27,"column":7,"nodeType":"373","messageId":"374","endLine":27,"endColumn":12},{"ruleId":"371","severity":1,"message":"452","line":3,"column":8,"nodeType":"373","messageId":"374","endLine":3,"endColumn":26},{"ruleId":"371","severity":1,"message":"453","line":15,"column":8,"nodeType":"373","messageId":"374","endLine":15,"endColumn":21},{"ruleId":"371","severity":1,"message":"451","line":17,"column":7,"nodeType":"373","messageId":"374","endLine":17,"endColumn":12},{"ruleId":"371","severity":1,"message":"454","line":80,"column":7,"nodeType":"373","messageId":"374","endLine":80,"endColumn":18},{"ruleId":"371","severity":1,"message":"455","line":94,"column":7,"nodeType":"373","messageId":"374","endLine":94,"endColumn":18},{"ruleId":"371","severity":1,"message":"456","line":105,"column":7,"nodeType":"373","messageId":"374","endLine":105,"endColumn":15},{"ruleId":"371","severity":1,"message":"457","line":107,"column":10,"nodeType":"373","messageId":"374","endLine":107,"endColumn":19},{"ruleId":"371","severity":1,"message":"458","line":107,"column":21,"nodeType":"373","messageId":"374","endLine":107,"endColumn":33},{"ruleId":"392","severity":1,"message":"393","line":225,"column":13,"nodeType":"394","endLine":225,"endColumn":63},{"ruleId":"371","severity":1,"message":"459","line":2,"column":8,"nodeType":"373","messageId":"374","endLine":2,"endColumn":16},{"ruleId":"371","severity":1,"message":"460","line":26,"column":40,"nodeType":"373","messageId":"374","endLine":26,"endColumn":50},{"ruleId":"371","severity":1,"message":"461","line":6,"column":10,"nodeType":"373","messageId":"374","endLine":6,"endColumn":17},{"ruleId":"371","severity":1,"message":"462","line":7,"column":7,"nodeType":"373","messageId":"374","endLine":7,"endColumn":11},{"ruleId":"371","severity":1,"message":"375","line":993,"column":26,"nodeType":"373","messageId":"374","endLine":993,"endColumn":32},{"ruleId":"371","severity":1,"message":"376","line":993,"column":34,"nodeType":"373","messageId":"374","endLine":993,"endColumn":41},{"ruleId":"377","severity":1,"message":"463","line":1001,"column":6,"nodeType":"379","endLine":1001,"endColumn":21,"suggestions":"464"},{"ruleId":"392","severity":1,"message":"393","line":1004,"column":7,"nodeType":"394","endLine":1007,"endColumn":9},{"ruleId":"371","severity":1,"message":"465","line":8,"column":3,"nodeType":"373","messageId":"374","endLine":8,"endColumn":19},{"ruleId":"371","severity":1,"message":"426","line":11,"column":3,"nodeType":"373","messageId":"374","endLine":11,"endColumn":19},{"ruleId":"371","severity":1,"message":"427","line":12,"column":3,"nodeType":"373","messageId":"374","endLine":12,"endColumn":26},{"ruleId":"371","severity":1,"message":"428","line":13,"column":3,"nodeType":"373","messageId":"374","endLine":13,"endColumn":16},{"ruleId":"371","severity":1,"message":"429","line":14,"column":3,"nodeType":"373","messageId":"374","endLine":14,"endColumn":11},{"ruleId":"371","severity":1,"message":"466","line":17,"column":8,"nodeType":"373","messageId":"374","endLine":17,"endColumn":29},{"ruleId":"371","severity":1,"message":"395","line":18,"column":8,"nodeType":"373","messageId":"374","endLine":18,"endColumn":13},{"ruleId":"371","severity":1,"message":"467","line":21,"column":10,"nodeType":"373","messageId":"374","endLine":21,"endColumn":13},{"ruleId":"371","severity":1,"message":"418","line":21,"column":15,"nodeType":"373","messageId":"374","endLine":21,"endColumn":23},{"ruleId":"371","severity":1,"message":"430","line":26,"column":28,"nodeType":"373","messageId":"374","endLine":26,"endColumn":47},{"ruleId":"431","severity":1,"message":"432","line":71,"column":50,"nodeType":"433","messageId":"434","endLine":71,"endColumn":52},{"ruleId":"431","severity":1,"message":"432","line":99,"column":20,"nodeType":"433","messageId":"434","endLine":99,"endColumn":22},{"ruleId":"431","severity":1,"message":"432","line":106,"column":22,"nodeType":"433","messageId":"434","endLine":106,"endColumn":24},{"ruleId":"431","severity":1,"message":"435","line":114,"column":49,"nodeType":"433","messageId":"434","endLine":114,"endColumn":51},{"ruleId":"377","severity":1,"message":"436","line":119,"column":6,"nodeType":"379","endLine":119,"endColumn":14,"suggestions":"468"},{"ruleId":"367","replacedBy":"469"},{"ruleId":"369","replacedBy":"470"},{"ruleId":"371","severity":1,"message":"471","line":1,"column":10,"nodeType":"373","messageId":"374","endLine":1,"endColumn":18},{"ruleId":"371","severity":1,"message":"389","line":1,"column":17,"nodeType":"373","messageId":"374","endLine":1,"endColumn":25},"no-native-reassign",["472"],"no-negated-in-lhs",["473"],"no-unused-vars","'basket' is assigned a value but never used.","Identifier","unusedVar","'called' is assigned a value but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data.get_basket_by_id' and 'dispacher'. Either include them or remove the dependency array.","ArrayExpression",["474"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["475"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'SwipeableViews' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'get_basket_items' is defined but never used.","'updateRes' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'axios' is defined but never used.","'ProductCard' is defined but never used.","React Hook useEffect has a missing dependency: 'data.get_allBasket'. Either include it or remove the dependency array.",["476"],"'ExpandMoreIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'SearchProduct'. Either include it or remove the dependency array.",["477"],"'add_product_to_basket' is defined but never used.","'remove_product_from_basket' is defined but never used.","'basketItemId' is assigned a value but never used.","'addingres' is assigned a value but never used.","'removeRes' is assigned a value but never used.","'useGoogleLogin' is defined but never used.","'loginRes' is assigned a value but never used.","'onSuccess' is assigned a value but never used.","'onFailure' is assigned a value but never used.","'clientId' is assigned a value but never used.","'useSelector' is defined but never used.","'useLazyQuery' is defined but never used.","'useQuery' is defined but never used.","'Header' is defined but never used.","'Axios' is defined but never used.","'google_clint_id' is defined but never used.","'refreshTokenSetup' is defined but never used.","'rememberUserdata' is assigned a value but never used.","'registerRes' is assigned a value but never used.","'LoginMutation' is assigned a value but never used.","'get_product_list' is defined but never used.","'get_product_qnt_options' is defined but never used.","'get_top_deals' is defined but never used.","'site_url' is defined but never used.","'setProductQntOption' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'BasketWithSameProduct', 'currentBasketqntyid', and 'quantityId'. Either include them or remove the dependency array.",["478"],"React Hook useEffect has a missing dependency: 'data.get_allTopDeals'. Either include it or remove the dependency array.",["479"],"'get_productsbycategory' is defined but never used.","React Hook useEffect has a missing dependency: 'data.get_product_by_category'. Either include it or remove the dependency array.",["480"],"'seasonitem' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'data.get_allSeasonsBest'. Either include it or remove the dependency array.",["481"],"'get_all_product_category' is defined but never used.","'get_product_category' is defined but never used.","React Hook useEffect has missing dependencies: 'all', 'data.get_PopularCategory', and 'data.get_allCategory'. Either include them or remove the dependency array. If 'setProductCategory' needs the current value of 'all', you can also switch to useReducer instead of useState and read 'all' in the reducer.",["482"],["483"],"'style' is assigned a value but never used.","'ShoppingBasketIcon' is defined but never used.","'TooltipOption' is defined but never used.","'menuOptions' is assigned a value but never used.","'HtmlTooltip' is assigned a value but never used.","'SubManue' is assigned a value but never used.","'showStyle' is assigned a value but never used.","'setShowStyle' is assigned a value but never used.","'Collapse' is defined but never used.","'renderTree' is assigned a value but never used.","'TopDeal' is defined but never used.","'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.Product' and 'data.get_allProduct'. Either include them or remove the dependency array.",["484"],"'CircularProgress' is defined but never used.","'KeyboardArrowDownIcon' is defined but never used.","'gql' is defined but never used.",["485"],["472"],["473"],"'Checkbox' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},{"desc":"490","fix":"491"},{"desc":"492","fix":"493"},{"desc":"494","fix":"495"},{"desc":"496","fix":"497"},{"desc":"498","fix":"499"},{"desc":"500","fix":"501"},{"desc":"502","fix":"503"},{"desc":"492","fix":"504"},{"desc":"505","fix":"506"},{"desc":"494","fix":"507"},"Update the dependencies array to be: [data.get_basket_by_id, dispacher, networkStatus]",{"range":"508","text":"509"},"Update the dependencies array to be: [dispatch, isMobile]",{"range":"510","text":"511"},"Update the dependencies array to be: [data.get_allBasket, networkStatus]",{"range":"512","text":"513"},"Update the dependencies array to be: [SearchProduct, searchText]",{"range":"514","text":"515"},"Update the dependencies array to be: [BasketWithSameProduct, basket, currentBasketqntyid, quantityId]",{"range":"516","text":"517"},"Update the dependencies array to be: [data.get_allTopDeals, networkStatus]",{"range":"518","text":"519"},"Update the dependencies array to be: [data.get_product_by_category, networkStatus]",{"range":"520","text":"521"},"Update the dependencies array to be: [data.get_allSeasonsBest, networkStatus]",{"range":"522","text":"523"},"Update the dependencies array to be: [all, data.get_PopularCategory, data.get_allCategory, networkStatus]",{"range":"524","text":"525"},{"range":"526","text":"515"},"Update the dependencies array to be: [data.Product, data.get_allProduct, networkStatus]",{"range":"527","text":"528"},{"range":"529","text":"517"},[2198,2213],"[data.get_basket_by_id, dispacher, networkStatus]",[2654,2664],"[dispatch, isMobile]",[3025,3040],"[data.get_allBasket, networkStatus]",[1716,1728],"[SearchProduct, searchText]",[4737,4745],"[BasketWithSameProduct, basket, currentBasketqntyid, quantityId]",[12804,12819],"[data.get_allTopDeals, networkStatus]",[2252,2267],"[data.get_product_by_category, networkStatus]",[3496,3511],"[data.get_allSeasonsBest, networkStatus]",[2846,2861],"[all, data.get_PopularCategory, data.get_allCategory, networkStatus]",[2161,2173],[21987,22002],"[data.Product, data.get_allProduct, networkStatus]",[3667,3675]]