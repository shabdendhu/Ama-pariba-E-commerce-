[{"/home/kishan/amapariba/myproject/src/index.js":"1","/home/kishan/amapariba/myproject/src/App.js":"2","/home/kishan/amapariba/myproject/src/reducer.js":"3","/home/kishan/amapariba/myproject/src/serviceWorker.js":"4","/home/kishan/amapariba/myproject/src/Component/templet/StateProvider.js":"5","/home/kishan/amapariba/myproject/src/store/index.js":"6","/home/kishan/amapariba/myproject/src/Component/templet/MainComponent.jsx":"7","/home/kishan/amapariba/myproject/src/reducer/index.js":"8","/home/kishan/amapariba/myproject/src/Component/templet/skeleton.js":"9","/home/kishan/amapariba/myproject/src/router.js":"10","/home/kishan/amapariba/myproject/src/reducer/authorization.js":"11","/home/kishan/amapariba/myproject/src/Component/templet/home.js":"12","/home/kishan/amapariba/myproject/src/Component/templet/Productdetails.js":"13","/home/kishan/amapariba/myproject/src/Component/templet/RecipesDetails.js":"14","/home/kishan/amapariba/myproject/src/Component/login/login.js":"15","/home/kishan/amapariba/myproject/src/pages/checkout/Checkout.js":"16","/home/kishan/amapariba/myproject/src/pages/category.js/index.js":"17","/home/kishan/amapariba/myproject/src/pages/about/about.js":"18","/home/kishan/amapariba/myproject/src/pages/shop/shop-by-items.js":"19","/home/kishan/amapariba/myproject/src/pages/shop/searchresult.js":"20","/home/kishan/amapariba/myproject/src/pages/shop/show-items-by-id.js":"21","/home/kishan/amapariba/myproject/src/pages/shop/shop-by-recipes.js":"22","/home/kishan/amapariba/myproject/src/constants/authorization-constants.js":"23","/home/kishan/amapariba/myproject/src/constants/storage-keys.js":"24","/home/kishan/amapariba/myproject/src/Component/templet/header.js":"25","/home/kishan/amapariba/myproject/src/Component/templet/banner.js":"26","/home/kishan/amapariba/myproject/src/Component/templet/Productfinder.js":"27","/home/kishan/amapariba/myproject/src/constants/api.js":"28","/home/kishan/amapariba/myproject/src/Component/templet/AddButton.js":"29","/home/kishan/amapariba/myproject/src/Component/Cards/productsList.js":"30","/home/kishan/amapariba/myproject/src/Component/category/CategoryforHome2.js":"31","/home/kishan/amapariba/myproject/src/Component/category/Recipes.js":"32","/home/kishan/amapariba/myproject/src/pages/checkout/CheckoutProduct.js":"33","/home/kishan/amapariba/myproject/src/Component/templet/Subtotal.js":"34","/home/kishan/amapariba/myproject/src/Component/category/categoryCard.js":"35","/home/kishan/amapariba/myproject/src/Component/category/Shopbyseasonsbest.js":"36","/home/kishan/amapariba/myproject/src/actions/authorization.js":"37","/home/kishan/amapariba/myproject/src/Component/Cards/productsByCategorys.js":"38","/home/kishan/amapariba/myproject/src/Component/Cards/ProductCard.js":"39","/home/kishan/amapariba/myproject/src/Component/category/Topdeals.js":"40","/home/kishan/amapariba/myproject/src/pages/shop-by-category.js/index.js":"41","/home/kishan/amapariba/myproject/src/pages/profile/my-account.js":"42"},{"size":929,"mtime":1615810172836,"results":"43","hashOfConfig":"44"},{"size":1440,"mtime":1616527461285,"results":"45","hashOfConfig":"44"},{"size":984,"mtime":1615916906566,"results":"46","hashOfConfig":"44"},{"size":5087,"mtime":1614540173578,"results":"47","hashOfConfig":"44"},{"size":363,"mtime":1615820663755,"results":"48","hashOfConfig":"44"},{"size":147,"mtime":1614540173578,"results":"49","hashOfConfig":"44"},{"size":1272,"mtime":1615740005380,"results":"50","hashOfConfig":"44"},{"size":179,"mtime":1614540173578,"results":"51","hashOfConfig":"44"},{"size":364,"mtime":1615739604742,"results":"52","hashOfConfig":"44"},{"size":1832,"mtime":1616394226235,"results":"53","hashOfConfig":"44"},{"size":765,"mtime":1614540173578,"results":"54","hashOfConfig":"44"},{"size":537,"mtime":1615307929932,"results":"55","hashOfConfig":"44"},{"size":5521,"mtime":1615308528057,"results":"56","hashOfConfig":"44"},{"size":11339,"mtime":1615307762705,"results":"57","hashOfConfig":"44"},{"size":6863,"mtime":1616574594826,"results":"58","hashOfConfig":"44"},{"size":7258,"mtime":1615897488980,"results":"59","hashOfConfig":"44"},{"size":1853,"mtime":1615307974355,"results":"60","hashOfConfig":"44"},{"size":283,"mtime":1614540173550,"results":"61","hashOfConfig":"44"},{"size":649,"mtime":1614540173574,"results":"62","hashOfConfig":"44"},{"size":1123,"mtime":1615308159411,"results":"63","hashOfConfig":"44"},{"size":969,"mtime":1615907404633,"results":"64","hashOfConfig":"44"},{"size":666,"mtime":1614540173578,"results":"65","hashOfConfig":"44"},{"size":78,"mtime":1614540173550,"results":"66","hashOfConfig":"44"},{"size":75,"mtime":1614540173550,"results":"67","hashOfConfig":"44"},{"size":10831,"mtime":1616394222548,"results":"68","hashOfConfig":"44"},{"size":2114,"mtime":1615906099771,"results":"69","hashOfConfig":"44"},{"size":4670,"mtime":1616058356300,"results":"70","hashOfConfig":"44"},{"size":2308,"mtime":1616575910239,"results":"71","hashOfConfig":"44"},{"size":5686,"mtime":1616575717459,"results":"72","hashOfConfig":"44"},{"size":576,"mtime":1614540173550,"results":"73","hashOfConfig":"44"},{"size":1309,"mtime":1615306213584,"results":"74","hashOfConfig":"44"},{"size":3470,"mtime":1615306325355,"results":"75","hashOfConfig":"44"},{"size":4052,"mtime":1615906824816,"results":"76","hashOfConfig":"44"},{"size":2113,"mtime":1615307792308,"results":"77","hashOfConfig":"44"},{"size":3686,"mtime":1615476056224,"results":"78","hashOfConfig":"44"},{"size":3283,"mtime":1616069072206,"results":"79","hashOfConfig":"44"},{"size":329,"mtime":1614540173550,"results":"80","hashOfConfig":"44"},{"size":1453,"mtime":1615963788388,"results":"81","hashOfConfig":"44"},{"size":13570,"mtime":1615964893545,"results":"82","hashOfConfig":"44"},{"size":9546,"mtime":1616375540397,"results":"83","hashOfConfig":"44"},{"size":8119,"mtime":1616338052448,"results":"84","hashOfConfig":"44"},{"size":6562,"mtime":1616575301986,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1rhweb1",{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/kishan/amapariba/myproject/src/index.js",[],["180","181"],"/home/kishan/amapariba/myproject/src/App.js",["182","183"],"/home/kishan/amapariba/myproject/src/reducer.js",[],"/home/kishan/amapariba/myproject/src/serviceWorker.js",[],"/home/kishan/amapariba/myproject/src/Component/templet/StateProvider.js",[],"/home/kishan/amapariba/myproject/src/store/index.js",[],"/home/kishan/amapariba/myproject/src/Component/templet/MainComponent.jsx",[],"/home/kishan/amapariba/myproject/src/reducer/index.js",[],"/home/kishan/amapariba/myproject/src/Component/templet/skeleton.js",["184","185"],"import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\n\nconst PageSkeleton = () => {\n  return (\n    <React.Fragment>\n      <Skeleton height={70} />\n      <br />\n      <br />\n      <br />\n      <Skeleton count={10} />\n      <br />\n      <br />\n      <br />\n      <Skeleton count={10} />\n    </React.Fragment>\n  );\n};\nexport default PageSkeleton;\n","/home/kishan/amapariba/myproject/src/router.js",[],"/home/kishan/amapariba/myproject/src/reducer/authorization.js",[],"/home/kishan/amapariba/myproject/src/Component/templet/home.js",[],"/home/kishan/amapariba/myproject/src/Component/templet/Productdetails.js",[],"/home/kishan/amapariba/myproject/src/Component/templet/RecipesDetails.js",[],"/home/kishan/amapariba/myproject/src/Component/login/login.js",["186"],"/home/kishan/amapariba/myproject/src/pages/checkout/Checkout.js",["187","188"],"import React from \"react\";\nimport \"./Checkout.css\";\nimport CheckoutProduct from \"./CheckoutProduct\";\nimport CurrencyFormat from \"react-currency-format\";\nimport Header from \"../../Component/templet/header\";\nimport { useStateValue } from \"../../Component/templet/StateProvider\";\nimport { getBasketTotal } from \"../../reducer\";\nimport { get_basket_items, make_new_order } from \"../../constants/api\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nconst EmptyBasketNotication = () => {\n  const history = useHistory();\n  return (\n    <div\n      style={{\n        background: \"#efefef\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginTop: \"170px\",\n        flexDirection: \"column\",\n      }}\n    >\n      <img\n        src=\"emptybasket.png\"\n        alt=\"emptybasket_icon\"\n        style={{ width: \"200px\", borderRadius: \"30px\" }}\n      />\n      <div> YOUR BASKET IS EMPTY</div>\n      {/* <div> */}\n      <button\n        onClick={() => {\n          history.push(\"/\");\n        }}\n        style={{\n          backgroundColor: \"#9e2121\",\n          margin: \"30px\",\n          height: \"35px\",\n          width: \"50%\",\n          color: \"white\",\n          border: \"none\",\n          outline: \"none\",\n          borderRadius: \"5px\",\n          fontSize: \"17px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-around\",\n        }}\n      >\n        START SHOPPING\n      </button>\n      {/* </div> */}\n    </div>\n  );\n};\n\nconst Checkout = () => {\n  const [{ basket }] = useStateValue();\n  // const [{ user }] = useStateValue();\n  // const isLoggedIn = useSelector((state) => state.authorization.is_loggedin);\n  const [apipauser, setApipauser] = useState(true);\n  // console.log(\"basket\", basket);\n  // var unique = [];\n  // var distinct = [];\n  // for (let i = 0; i < basket.length; i++) {\n  //   if (!unique[basket[i].id]) {\n  //     distinct.push(basket[i]);\n  //     unique[basket[i].id] = 1;\n  //   }\n  // }\n\n  console.log(basket);\n  const shorteddistinct = basket.sort((a, b) => {\n    return a.id - b.id;\n  });\n  console.log(\"distinct\", shorteddistinct);\n  const makeOrder = () => {\n    basket.forEach((item, index) => {\n      if (apipauser === true) {\n        setApipauser(false);\n        axios\n          .post(make_new_order, {\n            order_date: new Date(),\n            status: \"conformed\",\n            user_id: \"1\",\n            product_id: item.id,\n            product_amt: item.amount,\n          })\n          .then((response) => {\n            if (response.data.status === true) {\n              setApipauser(true);\n            }\n            console.log(response.data.message);\n          });\n      }\n    });\n  };\n  // useEffect(() => {\n  //   axios\n  //     .post(get_basket_items, {\n  //       user_id: 1,\n  //     })\n  //     .then((response) => {\n  //       console.log(\"response.data.data.insertId\", response.data.data);\n  //     });\n  // }, []);\n  return (\n    <>\n      <Header pagetitle=\"My Basket\" />\n      <div className=\"checkout\">\n        <div className=\"checkout__left\">\n          <div>\n            {basket.length === 0 ? (\n              <div>\n                <EmptyBasketNotication />\n              </div>\n            ) : (\n              <div style={{ background: \"#efefef\", marginTop: \"50px\" }}>\n                {basket.length > 0 && (\n                  <div\n                  // style={{ position: \"fixed\" }}\n                  >\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        height: \"40px\",\n                        padding: \"10px\",\n                        paddingBottom: \"10px\",\n                        backgroundColor: \"gray\",\n                        position: \"fixed\",\n                        bottom: 0,\n                        color: \"white\",\n                        width: \" -webkit-fill-available\",\n                      }}\n                    >\n                      <CurrencyFormat\n                        renderText={(value) => (\n                          <div>\n                            <span style={{ paddingBottom: \"10px\" }}>\n                              <b>Subtotal: </b>\n                              <span style={{ paddingLeft: \"5px\" }}>\n                                Rs: {value}\n                              </span>\n                              <br />\n                              <span>\n                                {basket.length}{\" \"}\n                                {basket.length === 1 ? \"Item\" : \"Items\"} in your\n                                basket\n                              </span>\n                            </span>\n                            <span\n                              style={{\n                                right: 0,\n                                position: \"absolute\",\n                                margin: \"-17px 6px 1px\",\n                              }}\n                            >\n                              <button\n                                onClick={() => {\n                                  makeOrder();\n                                }}\n                                style={{\n                                  outline: \"none\",\n                                  border: \"none\",\n                                  background: \"#9e2821\",\n                                  color: \"white\",\n                                  height: \"30px\",\n                                  width: \"113px\",\n                                  borderRadius: \"18px\",\n                                }}\n                              >\n                                CHECKOUT\n                              </button>\n                            </span>\n                          </div>\n                        )}\n                        desimalScale={2}\n                        value={getBasketTotal(basket)}\n                        displayType={\"text\"}\n                        thousendSeparetor={true}\n                        prifix={\"Rs\"}\n                      />\n                    </div>\n                  </div>\n                )}\n                <div\n                  style={{\n                    background: \"white\",\n                    borderBottom: \"1px solid gray\",\n                    borderTop: \"1px solid gray\",\n                    // paddingBottom: \"5px\",\n                    padding: \"5px\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  YOUR BASKET\n                </div>\n                <div style={{ marginBottom: \"55px\" }}>\n                  {shorteddistinct.map((item, index) => (\n                    <CheckoutProduct\n                      key={item.item_id}\n                      // key={index}\n                      // count={count}\n                      item={item}\n                      id={item.id}\n                      image={item.image}\n                      price={item.price}\n                      amount={item.amount}\n                    />\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Checkout;\n","/home/kishan/amapariba/myproject/src/pages/category.js/index.js",[],"/home/kishan/amapariba/myproject/src/pages/about/about.js",[],"/home/kishan/amapariba/myproject/src/pages/shop/shop-by-items.js",[],"/home/kishan/amapariba/myproject/src/pages/shop/searchresult.js",[],"/home/kishan/amapariba/myproject/src/pages/shop/show-items-by-id.js",["189"],"import React from \"react\";\nimport Header from \"../../Component/templet/header\";\nimport HomeBanner from \"../../Component/templet/banner\";\nimport ProductsByCategory from \"../../Component/Cards/productsByCategorys\";\nimport { useStateValue } from \"../../Component/templet/StateProvider\";\n\nconst ShopByCategory = () => {\n  const [{ basket }] = useStateValue();\n  var url = window.location.search;\n  var pagetitle = url.substring(url.lastIndexOf(\"=\") + 1);\n\n  //\n\n  // var count = {};\n  // basket.forEach(function (i) {\n  //   delete i.item_id;\n  //   // console.log(\"filterdObjfilterdObj\", i);\n  //   var key = JSON.stringify(i);\n  //   count[key] = (count[key] || 0) + 1;\n  //   // console.log(i.id);\n  // });\n  // console.log(\"countcountcount\", count);\n  //\n  return (\n    <>\n      <Header pagetitle={pagetitle} />\n      <div style={{ marginTop: \"50px\" }}>\n        <HomeBanner />\n        <ProductsByCategory />\n      </div>\n    </>\n  );\n};\n\nexport default ShopByCategory;\n","/home/kishan/amapariba/myproject/src/pages/shop/shop-by-recipes.js",[],"/home/kishan/amapariba/myproject/src/constants/authorization-constants.js",[],"/home/kishan/amapariba/myproject/src/constants/storage-keys.js",[],"/home/kishan/amapariba/myproject/src/Component/templet/header.js",["190"],"import React from \"react\";\nimport { Link, useHistory, withRouter } from \"react-router-dom\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowbackIcon from \"@material-ui/icons/ArrowBack\";\n\nimport {\n  Card,\n  IconButton,\n  Icon,\n  Divider,\n  SwipeableDrawer,\n  List,\n  ListItem,\n} from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { useStateValue } from \"./StateProvider\";\nimport Productfinder from \"./Productfinder\";\nimport { useEffect } from \"react\";\nimport { userLogout } from \"../../actions/authorization\";\nimport { useDispatch } from \"react-redux\";\nimport { user_info } from \"../../constants/storage-keys\";\n// import { initialState } from \"../../reducer\";\nconst style = {\n  topSection: {\n    background: \"#185c6b\", //'#14678e',\n    marginTop: \"56px\",\n    padding: \"15px 0px\",\n  },\n  header: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"0px 10px\",\n    height: \"56px\",\n  },\n  label: {\n    fontWeight: 500,\n    fontSize: \"20px\",\n    margin: \"10px 0px\",\n  },\n  action: {\n    width: \"100%\",\n    margin: \"0px 3px\",\n    boxShadow:\n      \"0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.12), 0 1px 5px 0 rgba(0,0,0,0.2)\",\n    padding: \"9px 10px\",\n    fontWeight: 500,\n    fontSize: \"15px\",\n    color: \"#4c4447\",\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  otherAction: {\n    display: \"inline-flex\",\n    flexDirection: \"column\",\n    width: \"80px\",\n    textAlign: \"center\",\n  },\n  otherActionIcon: {\n    fontSize: \"16px\",\n  },\n  otherActionIconButton: {\n    height: \"40px\",\n    width: \"40px\",\n    color: \"white\",\n    margin: \"0px auto\",\n  },\n  otherActionName: {\n    fontSize: \"14px\",\n    fontWeight: 500,\n  },\n};\nconst menuStyle = {\n  listItem: {\n    padding: \"10px 15px\",\n  },\n  listItemtext: {\n    // marginLeft: \"15px\",\n    fontWeight: 500,\n    color: \"#5a5353\",\n  },\n  menuicon: {\n    fontSize: 20,\n    color: \"#969696\",\n  },\n};\nconst Header = ({ pagetitle }) => {\n  const history = useHistory();\n  const [{ basket }] = useStateValue();\n\n  const dispatch = useDispatch();\n\n  const [openSearchDilog, setOpenSearchDilog] = useState(false);\n  const [openSideNav, setOpenSideNav] = useState(false);\n\n  const logout = () => {\n    dispatch(userLogout());\n    localStorage.removeItem(user_info);\n    setOpenSideNav(false);\n  };\n  useEffect(() => {\n    if (openSideNav) {\n      document.body.style.overflow = \"hidden\";\n    }\n    if (!openSideNav) {\n      document.body.style.overflow = \"unset\";\n    }\n  }, [openSideNav]);\n\n  return (\n    <React.Fragment>\n      <div style={{}}>\n        <Card\n          style={{\n            display: \"flex\",\n            backgroundColor: \"#2f8a74\",\n            color: \"white\",\n            width: \"100%\",\n            position: \"fixed\",\n            zIndex: 99,\n            top: 0,\n            borderRadius: 0,\n          }}\n        >\n          <div>\n            {pagetitle ? (\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"Open drawer\"\n                onClick={() => {\n                  window.history.go(\"-1\");\n                }}\n              >\n                <ArrowbackIcon />\n              </IconButton>\n            ) : (\n              <IconButton\n                onClick={() => {\n                  setOpenSideNav(true);\n                }}\n              >\n                <Icon>\n                  <MenuIcon style={{ color: \"white\" }} />\n                </Icon>\n              </IconButton>\n            )}\n          </div>\n          <div\n            style={{\n              flexDirection: \"row\",\n              display: \"flex\",\n              alignItems: \"center\",\n            }}\n          >\n            <span>\n              <Link\n                style={{\n                  textDecoration: \"none\",\n                  fontSize: \"20px\",\n                  color: \"white\",\n                }}\n                to=\"/\"\n              >\n                {pagetitle\n                  ? pagetitle.length > 15\n                    ? `${pagetitle.substring(0, 10)}...`\n                    : pagetitle\n                  : \"ଆମ ପରିବା\"}\n              </Link>\n            </span>\n            <span\n              style={{\n                position: \"absolute\",\n                right: 0,\n                margin: \"9px 81px 0px 0px\",\n              }}\n              onClick={() => {\n                setOpenSearchDilog(!openSearchDilog);\n              }}\n            >\n              <SearchIcon />\n            </span>\n            <Link\n              to=\"/checkout\"\n              style={{ color: \"white\", textDecoration: \"none\" }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  marginLeft: \"20px\",\n                  right: 0,\n                  position: \"absolute\",\n                  margin: \"-11px 16px -1px\",\n                }}\n              >\n                <ShoppingBasketIcon />\n                <span\n                  style={{\n                    fontSize: \"13px\",\n                    fontWeight: 800,\n                    marginLeft: \"10px\",\n                    marginRight: \"10px\",\n                  }}\n                >\n                  {basket.length}\n                </span>\n              </div>\n            </Link>\n          </div>\n        </Card>\n      </div>\n      <div>\n        <SwipeableDrawer\n          anchor=\"left\"\n          open={openSideNav}\n          onClose={() => {\n            setOpenSideNav(false);\n          }}\n          onOpen={() => {\n            setOpenSideNav(true);\n          }}\n        >\n          <div\n            style={{\n              // width: \"calc(100vw - 173px)\",\n              width: \"100%\",\n              // padding: \"10px\",\n              height: \"-webkit-fill-available\",\n            }}\n          >\n            <div\n            // style={{ padding: \"5px\" }}\n            >\n              <div\n                style={{\n                  backgroundColor: \"rgb(89, 26, 7)\",\n                  height: \"78px\",\n                  width: \"100%\",\n                  marginBottom: \"10px\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  // justifyContent: \"center\",\n\n                  flexDirection: \"column\",\n                  paddingTop: \"7px\",\n                  // borderRadius: \"5px\",\n                }}\n              >\n                <div\n                  style={{\n                    color: \"white\",\n                    fontSize: \"20px\",\n                    // marginLeft: \"20px\",\n                  }}\n                >\n                  ଆମ ପରିବା\n                </div>\n                <div\n                  style={{\n                    width: \"100%\",\n                    marginTop: \"10px\",\n                    // display: \"flex\",\n                    // justifyContent: \"space-around\",\n                    color: \"white\",\n                  }}\n                >\n                  <span\n                    style={{\n                      border: \"1px solid white\",\n                      padding: \"3px 8px\",\n                      margin: \"10px\",\n                      width: \"60px\",\n                    }}\n                  >\n                    Account\n                  </span>\n                  <span\n                    style={{\n                      border: \"1px solid white\",\n                      padding: \"3px 8px\",\n                      margin: \"10px\",\n                      width: \"60px\",\n                    }}\n                  >\n                    Orders\n                  </span>\n                </div>\n              </div>\n\n              <List style={{ padding: \"5px\" }}>\n                <ListItem\n                  button\n                  onClick={() => {\n                    history.push(\"/\");\n                    setOpenSideNav(false);\n                  }}\n                  style={menuStyle.listItem}\n                >\n                  <span style={menuStyle.listItemtext}> Home</span>\n                </ListItem>\n                <Divider />\n                <ListItem\n                  button\n                  onClick={() => {\n                    history.push(\"/shop-by-category\");\n                    setOpenSideNav(false);\n                  }}\n                  style={menuStyle.listItem}\n                >\n                  <span style={menuStyle.listItemtext}> Shop By Category</span>\n                </ListItem>\n                <Divider />\n                <ListItem\n                  button\n                  onClick={() => {\n                    history.push(\"/\");\n                    setOpenSideNav(false);\n                  }}\n                  style={menuStyle.listItem}\n                >\n                  <span style={menuStyle.listItemtext}> My History</span>\n                </ListItem>{\" \"}\n                <Divider />\n                <ListItem\n                  button\n                  onClick={() => {\n                    history.push(\"/my-account\");\n                    setOpenSideNav(false);\n                  }}\n                  style={menuStyle.listItem}\n                >\n                  <span style={menuStyle.listItemtext}> My Account</span>\n                </ListItem>{\" \"}\n                <Divider />\n                <ListItem\n                  button\n                  onClick={() => {\n                    history.push(\"/\");\n                    setOpenSideNav(false);\n                  }}\n                  style={menuStyle.listItem}\n                >\n                  <span style={menuStyle.listItemtext}> Need Help</span>\n                </ListItem>{\" \"}\n                <Divider />\n                <ListItem\n                  button\n                  onClick={() => {\n                    history.push(\"/login\");\n                    setOpenSideNav(false);\n                  }}\n                  style={menuStyle.listItem}\n                >\n                  <span style={menuStyle.listItemtext}> About Us</span>\n                </ListItem>\n                <Divider />\n                <ListItem\n                  button\n                  onClick={() => {\n                    history.push(\"/login\");\n                    setOpenSideNav(false);\n                  }}\n                  style={menuStyle.listItem}\n                >\n                  <span style={menuStyle.listItemtext}> Login</span>\n                </ListItem>\n                <Divider />\n                <ListItem button onClick={logout} style={menuStyle.listItem}>\n                  <span style={menuStyle.listItemtext}> logout</span>\n                </ListItem>\n              </List>\n            </div>\n          </div>\n        </SwipeableDrawer>\n      </div>\n      <Productfinder openSearchDilog={openSearchDilog} />\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(Header);\n","/home/kishan/amapariba/myproject/src/Component/templet/banner.js",[],"/home/kishan/amapariba/myproject/src/Component/templet/Productfinder.js",[],"/home/kishan/amapariba/myproject/src/constants/api.js",[],"/home/kishan/amapariba/myproject/src/Component/templet/AddButton.js",["191","192"],"/home/kishan/amapariba/myproject/src/Component/Cards/productsList.js",[],"/home/kishan/amapariba/myproject/src/Component/category/CategoryforHome2.js",[],"/home/kishan/amapariba/myproject/src/Component/category/Recipes.js",[],"/home/kishan/amapariba/myproject/src/pages/checkout/CheckoutProduct.js",["193"],"import React from \"react\";\nimport \"./CheckoutProduct.css\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport { useStateValue } from \"../../Component/templet/StateProvider\";\nimport CustomButton from \"../../Component/templet/AddButton\";\nimport { useEffect } from \"react\";\n\n// import { useStateValue } from \"../../StateProvider\";/////////////////////\n\nfunction CheckoutProduct({ item }) {\n  // console.log(\"itemfromcheckoutproduct\", item);\n  const [{ basket }] = useStateValue();\n  // console.log(item);\n  // const productId = [];\n  // basket.forEach((item) => {\n  //   productId.push(item.id);\n  // });\n  // var count = {};\n  // productId.forEach(function (i) {\n  //   count[i] = (count[i] || 0) + 1;\n  // });\n  // console.log(`count[id]${item.name}`, count[item.id]);\n  useEffect(() => {}, []);\n  return (\n    <>\n      <div\n        style={{\n          borderBottom: \"1px solid #80808052\",\n          background: \"rgb(249 249 249)\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            padding: \"10px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <div style={{ flex: 1, display: \"flex\", flexDirection: \"column\" }}>\n            <div\n              style={{\n                flex: \" 3 1 0%\",\n                border: \"1px solid rgba(128, 128, 128, 0.32)\",\n                margin: \"5px\",\n                padding: \"5px\",\n                borderRadius: \"10px\",\n                marginRight: \"19px\",\n                background: \"rgb(253, 253, 253)\",\n                boxShadow: \"0 5px 15px rgba(0,0,0,.05)\",\n              }}\n            >\n              <img\n                style={{ width: \"100px\", height: \"100px\" }}\n                src={item.image}\n                alt={item.name}\n              />\n            </div>\n          </div>\n          <div\n            style={{\n              flex: 2,\n              display: \"flex\",\n              flexDirection: \"column\",\n              height: \"100px\",\n            }}\n          >\n            <div\n              style={{\n                flex: 1,\n                paddingLeft: \"7px\",\n                fontSize: \"18px\",\n                fontFamily: \"ProximaNova-Regular\",\n              }}\n            >\n              {item.name}\n            </div>\n            <div\n              style={{\n                flex: 1,\n              }}\n            >\n              <div\n                style={{\n                  borderRadius: \"5px\",\n                  border: \"1px solid #0080003b\",\n                  padding: \"2px 0px 2px 6px\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  flexDirection: \"row\",\n                  fontSize: \"15px\",\n                  height: \"25px\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <span style={{ flex: 1 }}>{item.amount}</span>\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"end\",\n                    paddingRight: \"8px\",\n                  }}\n                >\n                  <KeyboardArrowDownIcon style={{ fontSize: \"15px\" }} />\n                </span>\n              </div>\n            </div>\n            <div\n              style={{\n                flex: 1,\n                width: \"fit-content\",\n                height: \" fit-content\",\n                margin: \"4px\",\n              }}\n            >\n              <span>₹{item.price}</span>\n            </div>\n          </div>\n        </div>\n        <div style={{ float: \"right\", marginTop: \"-44px\", marginRight: \"7px\" }}>\n          <CustomButton\n            key={item.item_id}\n            item={item}\n            id={item.id}\n            item_id={item.item_id}\n            // count={count[item.id]}\n            image={item.image}\n            name={item.name}\n            amount={item.amount}\n            price={item.price}\n            width=\"117px\"\n            stage=\"remove\"\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default CheckoutProduct;\n","/home/kishan/amapariba/myproject/src/Component/templet/Subtotal.js",[],"/home/kishan/amapariba/myproject/src/Component/category/categoryCard.js",[],"/home/kishan/amapariba/myproject/src/Component/category/Shopbyseasonsbest.js",["194"],"import { CircularProgress, Grid } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { get_seasons_best_items } from \"../../constants/api\";\nconst CategoryItem = ({ item }) => {\n  return (\n    <>\n      <div\n        onClick={() => {\n          // const searchName = item.product_name.replace(/ +/g, \"\");\n          window.location.href = `/search-results?id=${item.product_id}?name=${item.product_name}`;\n          // console.log(market);\n        }}\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          padding: \"7px 5px\",\n        }}\n      >\n        <div\n          style={{\n            padding: \"5px 5px 3px\",\n            width: \" 50px\",\n            textAlign: \"center\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            border: \"2px solid rgb(150 146 146 / 51%)\",\n            borderRadius: \"7px\",\n            background: \"white\",\n            height: \"50px\",\n            overflow: \"hidden\",\n            marginBottom: \"7px\",\n          }}\n        >\n          {/* <span style={{ fontWeight: 400 }}>min_price</span> */}\n          <br />\n\n          <img\n            // onClick={() => {\n            // \tconst pagename = item.name.replace(/ +/g, \"\");\n            // \thistory.push(`/recipe-details?id=${item.id}?name=${pagename}`);\n            // }}\n            style={{\n              height: \"50px\",\n              padding: \"5px\",\n            }}\n            alt=\"seasonaryItems\"\n            src={item.image_url}\n          />\n        </div>\n        <span style={{ fontWeight: 400, textAlign: \"center\" }}>\n          {item.product_name}\n        </span>\n      </div>\n    </>\n  );\n};\nconst Shopbyseasonsbest = () => {\n  const [seasonsBest, setSeasonsBest] = useState([]);\n  const [showLoader, setShowLoader] = useState(false);\n  const seasonitem = [\n    { img: \"apple.png\", name: \"Apple\" },\n    { img: \"orange.png\", name: \"Orange\" },\n    { img: \"butterchiken.png\", name: \"Butterchiken\" },\n    { img: \"apple.png\", name: \"Apple\" },\n    { img: \"orange.png\", name: \"Orange\" },\n    { img: \"butterchiken.png\", name: \"Butterchiken\" },\n    { img: \"apple.png\", name: \"Apple\" },\n    { img: \"orange.png\", name: \"Orange\" },\n    { img: \"butterchiken.png\", name: \"Butterchiken\" },\n  ];\n  useEffect(() => {\n    setShowLoader(true);\n    axios.get(`${get_seasons_best_items}/1`).then((response) => {\n      // console.log(response.data.data);\n      if (response.data.status) {\n        setShowLoader(false);\n      }\n      setSeasonsBest(response.data.data);\n    });\n  }, []);\n  return (\n    <div style={{ background: \"#efefef\" }}>\n      {\n        showLoader ? (\n          <div style={{ textAlign: \"center\" }}>\n            <CircularProgress />\n          </div>\n        ) : (\n          // :<div style={{ background: \"#efefef\" }}>\n          <Grid container>\n            {seasonsBest.map((item, index) => (\n              <Grid item xs={4} sm={3} md={1} key={index}>\n                <CategoryItem key={item.product_id} item={item} />\n              </Grid>\n            ))}\n          </Grid>\n        )\n        // {/* </div> */}\n      }\n    </div>\n  );\n};\n\nexport default Shopbyseasonsbest;\n","/home/kishan/amapariba/myproject/src/actions/authorization.js",[],"/home/kishan/amapariba/myproject/src/Component/Cards/productsByCategorys.js",[],"/home/kishan/amapariba/myproject/src/Component/Cards/ProductCard.js",["195","196","197"],"import React, { useState, useEffect } from \"react\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport { useStateValue } from \"../templet/StateProvider\";\nimport CustomButton from \"../templet/AddButton\";\nimport { get_product_qnt_options } from \"../../constants/api\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport axios from \"axios\";\nimport {\n  DialogTitle,\n  DialogContent,\n  Dialog,\n  Checkbox,\n  Card,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ProductCard = ({ data }) => {\n  // console.log(data);\n  const history = useHistory();\n  const [openAmountPicker, setOpenAmountPicker] = useState(false);\n  const [{ basket }] = useStateValue();\n  const [productQntOption, setProductQntOption] = useState([]);\n  const [Discount, setDiscount] = useState(data.discount);\n  const [discountedPrice, setDiscountedPrice] = useState(data.discounted_price);\n  const [productPrice, setProductPrice] = useState(`${data.product_price}`);\n  const [productAmount, setProductAmount] = useState(\n    `${data.default_amt}${data.unit_quantity}`\n  );\n\n  const productId = [];\n  const productAmt = [];\n  basket.forEach((item) => {\n    productId.push(item.id);\n    productAmt.push(item.amount);\n  });\n  // console.log(\"productAmt\", productAmt);\n\n  var count = {};\n  productId.forEach(function (i) {\n    count[i] = (count[i] || 0) + 1;\n  });\n  //logic to get the item_id from basket if the product_id existt\n  const Item_id = [];\n  const Id = [];\n  const vdjhg = {};\n  basket.forEach((item) => {\n    Item_id.push(item.item_id);\n    // console.log(item);\n\n    Id.push(item.id);\n  });\n  // console.log(Id, Item_id);\n\n  // for (let i = 0; i < Id.length; i++) {\n  // vdjhg[Id[i]] = Item_id[i];\n  Item_id.forEach((item_id, i) => (vdjhg[item_id] = Id[i]));\n  // }\n  const result = Object.keys(vdjhg).find(\n    (key) => vdjhg[key] === data.product_id\n  );\n  console.log(result);\n  // console.log(\"vdjhg[data.product_id]\", `${data.product_id}=${result}`);\n  var currentProductObjct = basket.filter((obj) => obj.item_id == result);\n  if (currentProductObjct && currentProductObjct[0]) {\n    console.log(currentProductObjct[0].amount);\n  }\n  const productAmtApi = () => {\n    axios\n      .get(`${get_product_qnt_options}/${data.product_id}`)\n      .then((response) => {\n        let qntydata = response.data;\n        if (qntydata.status === true && qntydata.data.length > 0) {\n          setProductQntOption(response.data.data);\n          console.log(response.data.data);\n          setOpenAmountPicker(true);\n        }\n      });\n  };\n  // const currentProductData = () => {\n  //   if (result) {\n  //     axios\n  //       .get(`${get_product_qnt_options}/${data.product_id}`)\n  //       .then((response) => {\n  //         let qntydata = response.data;\n  //         if (qntydata.status === true && qntydata.data.length > 0) {\n  //           var Data = response.data.data;\n  //           var ProductObjct = Data.filter(\n  //             (obj) => obj.quantity == currentProductObjct[0].amount\n  //           );\n  //           productQntSelected(ProductObjct[0]);\n  //           // console.log(ProductObjct[0]);\n  //         }\n  //       });\n  //   }\n  // };\n  const productQntSelected = (item) => {\n    setDiscount(item.discount);\n    setProductAmount(`${item.quantity}${item.short_unit}`);\n    setProductPrice(item.price);\n    setDiscountedPrice(item.discounted_price);\n    setTimeout(() => {\n      setOpenAmountPicker(false);\n    }, 100);\n  };\n  useEffect(() => {\n    if (openAmountPicker) {\n      document.body.style.overflow = \"hidden\";\n    }\n    if (!openAmountPicker) {\n      document.body.style.overflow = \"unset\";\n    }\n  }, [openAmountPicker]);\n  // useEffect(() => {\n  //   currentProductData();\n  // }, [basket]);\n  useEffect(() => {\n    if (result) {\n      axios\n        .get(`${get_product_qnt_options}/${data.product_id}`)\n        .then((response) => {\n          let qntydata = response.data;\n          if (qntydata.status === true && qntydata.data.length > 0) {\n            var Data = response.data.data;\n            var ProductObjct = Data.filter(\n              (obj) => obj.quantity == parseInt(currentProductObjct[0].amount)\n            );\n            if (ProductObjct[0]) {\n              productQntSelected(ProductObjct[0]);\n            }\n\n            console.log(\n              parseInt(currentProductObjct[0].amount),\n              Data,\n              ProductObjct\n            );\n          }\n        });\n    }\n  }, [result]);\n  return (\n    <>\n      <React.Fragment>\n        <div\n          style={{\n            borderBottom: \"1px solid #80808052\",\n            background: \"rgb(249 249 249)\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              padding: \"10px\",\n              marginBottom: \"5px\",\n            }}\n          >\n            <div style={{ flex: 1, display: \"flex\", flexDirection: \"column\" }}>\n              <div\n                style={{\n                  flex: \" 3 1 0%\",\n                  border: \"1px solid rgba(128, 128, 128, 0.32)\",\n                  margin: \"5px\",\n                  padding: \"5px\",\n                  borderRadius: \"10px\",\n                  marginRight: \"19px\",\n                  background: \"rgb(253, 253, 253)\",\n                  boxShadow: \"0 5px 15px rgba(0,0,0,.05)\",\n                }}\n              >\n                <div\n                  style={{\n                    background: \"green\",\n                    color: \"white\",\n                    padding: \"3px\",\n                    borderRadius: \"0px 0px 45px 45px\",\n                    fontSize: \"13px\",\n                    height: \"13px\",\n                    width: \"100px\",\n                    // position: \"absolute\",\n                    // margin: \"-124px -18px 0px -5px\",\n                    textAlign: \"center\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    marginTop: \"-5px\",\n                  }}\n                >\n                  {Discount}% off\n                </div>\n                <img\n                  onClick={() => {\n                    history.push(\n                      `/product-details?id=${data.product_id}?name=${data.product_name}`\n                    );\n                  }}\n                  style={{\n                    width: \"100px\",\n                    height: \"100px\",\n                    // paddingTop: \"13px\",\n                  }}\n                  alt={data.product_name}\n                  src={data.image_url}\n                />\n              </div>\n            </div>\n            <div\n              style={{\n                flex: 2,\n                display: \"flex\",\n                flexDirection: \"column\",\n                height: \"100px\",\n              }}\n            >\n              <div\n                style={{\n                  // flex: 1,\n                  paddingLeft: \"7px\",\n                  fontSize: \"18px\",\n                  fontFamily: \"ProximaNova-Regular\",\n                  margin: \"9px 0px\",\n                }}\n              >\n                {data.product_name}\n              </div>\n              <div\n                style={\n                  {\n                    // flex: 1,\n                  }\n                }\n              >\n                <div\n                  onClick={() => {\n                    productAmtApi(data.product_id);\n                  }}\n                  style={{\n                    borderRadius: \"5px\",\n                    border: \"1px solid #0080003b\",\n                    padding: \"2px 0px 2px 6px\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    flexDirection: \"row\",\n                    fontSize: \"15px\",\n                    height: \"25px\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <span\n                    style={\n                      {\n                        // flex: 1\n                      }\n                    }\n                  >\n                    {productAmount}\n                  </span>\n                  <span\n                    style={{\n                      flex: 1,\n                      textAlign: \"end\",\n                      paddingRight: \"8px\",\n                    }}\n                  >\n                    <KeyboardArrowDownIcon style={{ fontSize: \"15px\" }} />\n                  </span>\n                </div>\n              </div>\n              <div\n                style={{\n                  flex: 1,\n                  width: \"fit-content\",\n                  height: \" fit-content\",\n                  margin: \"4px\",\n                  marginTop: \"8px\",\n                }}\n              >\n                <del>₹{productPrice}</del>\n                <span style={{ marginLeft: \"15px\" }}>₹{discountedPrice}</span>\n              </div>\n            </div>\n          </div>\n          <div\n            style={{ float: \"right\", marginTop: \"-44px\", marginRight: \"14px\" }}\n          >\n            <CustomButton\n              id={data.product_id}\n              image={data.image_url}\n              name={data.product_name}\n              amount={productAmount}\n              price={parseInt(productPrice)}\n              width=\"117px\"\n              stage=\"add\"\n              count={count[data.product_id]}\n              item_id={result}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n\n      <Dialog\n        fullWidth={true}\n        onClose={() => {\n          setOpenAmountPicker(false);\n        }}\n        // aria-labelledby=\"customized-dialog-title\"\n        open={openAmountPicker}\n        // style={{ width: \"fit-\" }}\n      >\n        <DialogTitle\n          // id=\"customized-dialog-title\"\n          style={{ borderBottom: \"1px solid gray\", padding: \"7px\" }}\n          onClose={() => {\n            setOpenAmountPicker(false);\n          }}\n        >\n          <div\n            style={{\n              position: \"relative\",\n\n              paddingLeft: \"18px\",\n            }}\n          >\n            <span\n              style={{\n                fontSize: \" 24px\",\n                fontWeight: 600,\n                fontFamily: \"auto\",\n                color: \"#a70606\",\n              }}\n            >\n              {data.product_name}\n            </span>\n            <span\n              onClick={() => {\n                setOpenAmountPicker(false);\n              }}\n              style={{\n                position: \"fixed\",\n                right: 0,\n                border: \"1px solid #a7a3a3\",\n                margin: \"-57px 20px 0px 0px\",\n                borderRadius: \"15px\",\n                padding: \"1px\",\n                background: \"white\",\n                display: \"flex\",\n              }}\n            >\n              <CloseIcon />\n            </span>\n          </div>\n        </DialogTitle>\n        <DialogContent style={{ padding: \"9px 8px\" }}>\n          {productQntOption.map((item, index) => (\n            <div\n              key={index}\n              style={{\n                // padding: \"9px 8px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Card\n                style={{\n                  // border: \"1px solid #00e7ff\",\n                  // background: \"gainsboro\",\n                  padding: \"5px\",\n                  borderRadius: \"4px\",\n                  fontSize: \"19px\",\n                  marginBottom: \" 10px\",\n                }}\n              >\n                <span>\n                  {item.quantity} {item.short_unit}\n                  <del\n                    style={{\n                      marginLeft: \"90px\",\n                      color: \"green\",\n                      fontWeight: 500,\n                    }}\n                  >\n                    ₹{item.price}\n                  </del>\n                  <span\n                    style={{\n                      marginLeft: \"14px\",\n                      color: \"green\",\n                      fontWeight: 600,\n                    }}\n                  >\n                    ₹{item.discounted_price}\n                  </span>\n                </span>\n                <span\n                  style={{\n                    right: 0,\n                    position: \"absolute\",\n                    margin: \"-1px 15px 0px 0px\",\n                  }}\n                >\n                  <Checkbox\n                    style={{ padding: \"0px\" }}\n                    onClick={() => {\n                      productQntSelected(item);\n                    }}\n                  />\n                </span>\n              </Card>\n              {/* <Card\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t// border: \" 1px solid #00e7ff\",\n\t\t\t\t\t\t\t\t\t// background: \"gainsboro\",\n\t\t\t\t\t\t\t\t\tpadding: \"5px\",\n\t\t\t\t\t\t\t\t\tborderRadius: \"4px\",\n\t\t\t\t\t\t\t\t\tfontSize: \"19px\",\n\t\t\t\t\t\t\t\t\tmarginBottom: \" 10px\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span>{item.option_2}</span>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\t\t\tmargin: \"-1px 15px 0px 0px\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\tstyle={{ padding: \"0px\" }}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tproductQntSelected(item.option_2);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</Card> */}\n            </div>\n          ))}\n        </DialogContent>\n        {/* <DialogActions>\n          <Button autoFocus color=\"primary\">\n            More Options\n          </Button>\n        </DialogActions> */}\n      </Dialog>\n    </>\n  );\n};\n\nexport default ProductCard;\n","/home/kishan/amapariba/myproject/src/Component/category/Topdeals.js",["198"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Checkbox,\n} from \"@material-ui/core\";\nimport {\n  get_product_list,\n  get_product_qnt_options,\n  get_top_deals,\n} from \"../../constants/api\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport axios from \"axios\";\nimport CustomButton from \"../templet/AddButton\";\nimport { useStateValue } from \"../templet/StateProvider\";\nconst TopDeal = ({ item }) => {\n  const [{ basket }] = useStateValue();\n  const [productQntOption, setProductQntOption] = useState([]);\n  const [productPrice, setProductPrice] = useState(`${item.product_price}`);\n  const [openAmountPicker, setOpenAmountPicker] = useState(false);\n  const [discountedPrice, setDiscountedPrice] = useState(item.discounted_price);\n  const [productAmount, setProductAmount] = useState(\n    `${item.default_amt}${item.unit_quantity}`\n  );\n  //\n  const productId = [];\n  basket.forEach((item) => {\n    productId.push(item.id);\n  });\n  var count = {};\n  productId.forEach(function (i) {\n    count[i] = (count[i] || 0) + 1;\n  });\n  //\n  const productQntSelected = (items) => {\n    // console.log(items);\n    setProductAmount(`${items.quantity}${items.short_unit}`);\n    setProductPrice(items.price);\n    setDiscountedPrice(items.discounted_price);\n    setTimeout(() => {\n      setOpenAmountPicker(false);\n    }, 100);\n  };\n  const productAmtApi = () => {\n    axios\n      .get(`${get_product_qnt_options}/${item.product_id}`)\n      .then((response) => {\n        let qntydata = response.data;\n        if (qntydata.status === true && qntydata.data.length > 0) {\n          setProductQntOption(response.data.data);\n          setOpenAmountPicker(true);\n        }\n      });\n  };\n  useEffect(() => {\n    if (openAmountPicker) {\n      document.body.style.overflow = \"hidden\";\n    }\n    if (!openAmountPicker) {\n      document.body.style.overflow = \"unset\";\n    }\n  }, [openAmountPicker]);\n  return (\n    <>\n      <Card\n        style={{\n          flexShrink: 0,\n          marginRight: \"10px\",\n          padding: \"10px\",\n          maxWidth: \"170px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n          width: \"132px\",\n          height: \"250px\",\n        }}\n      >\n        <div\n          style={{\n            // flex: \"3 1 0%\",\n            border: \" 1px solid rgba(128, 128, 128, 0.32)\",\n            //   margin: \"5px 19px 5px 5px\",\n            padding: \"5px\",\n            borderRadius: \"10px\",\n            background: \"rgb(253, 253, 253)\",\n            boxShadow: \"rgb(0 0 0 / 5%) 0px 5px 15px\",\n            height: \"111px\",\n            width: \"100px\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n          }}\n        >\n          {\" \"}\n          <div\n            style={{\n              background: \"green\",\n              color: \"white\",\n              padding: \"3px\",\n              borderRadius: \"0px 0px 45px 45px\",\n              fontSize: \"13px\",\n              height: \"13px\",\n              width: \"100px\",\n              // position: \"absolute\",\n              // margin: \"-124px -18px 0px -5px\",\n              textAlign: \"center\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              marginTop: \"-2px\",\n            }}\n          >\n            {item.discount}% off\n          </div>\n          <img\n            src={item.image_url}\n            alt={item.product_name}\n            style={{ width: \"100px\" }}\n          />\n        </div>\n        <div\n          style={{\n            padding: \"7px 0px 0px 0px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n        >\n          <span style={{ fontSize: \"17px\", paddingBottom: \"5px\" }}>\n            {item.product_name}\n          </span>\n          <span>\n            {\" \"}\n            <del style={{ color: \"#5d5b5b\", fontSize: \"14px\" }}>\n              ₹{productPrice}\n            </del>\n            <span style={{ marginLeft: \"15px\" }}>₹{discountedPrice}</span>\n          </span>\n          <div\n            onClick={() => {\n              productAmtApi();\n            }}\n            style={{\n              borderRadius: \"5px\",\n              border: \"1px solid #0080003b\",\n              padding: \"2px 0px 2px 6px\",\n              display: \"flex\",\n              alignItems: \"center\",\n              flexDirection: \"row\",\n              fontSize: \"15px\",\n              height: \"25px\",\n              justifyContent: \"center\",\n              marginTop: \"7px\",\n            }}\n          >\n            <span\n              style={\n                {\n                  // flex: 1\n                }\n              }\n            >\n              {productAmount}\n            </span>\n            <span\n              style={{\n                flex: 1,\n                textAlign: \"end\",\n                paddingRight: \"8px\",\n              }}\n            >\n              <KeyboardArrowDownIcon style={{ fontSize: \"15px\" }} />\n            </span>\n          </div>\n          <div\n            style={{\n              margin: \"10px 0px -5px -5px\",\n            }}\n          >\n            <CustomButton\n              id={item.product_id}\n              image={item.image_url}\n              name={item.product_name}\n              amount={productAmount}\n              price={parseInt(productPrice)}\n              width=\"117px\"\n              stage=\"add\"\n              count={count[item.product_id]}\n            />\n          </div>\n        </div>\n      </Card>\n      <Dialog\n        fullWidth={true}\n        onClose={() => {\n          setOpenAmountPicker(false);\n        }}\n        open={openAmountPicker}\n      >\n        <DialogTitle\n          style={{ borderBottom: \"1px solid gray\", padding: \"7px\" }}\n          onClose={() => {\n            setOpenAmountPicker(false);\n          }}\n        >\n          <div\n            style={{\n              position: \"relative\",\n\n              paddingLeft: \"18px\",\n            }}\n          >\n            <span\n              style={{\n                fontSize: \" 24px\",\n                fontWeight: 600,\n                fontFamily: \"auto\",\n                color: \"#a70606\",\n              }}\n            >\n              {item.product_name}\n            </span>\n            <span\n              onClick={() => {\n                setOpenAmountPicker(false);\n              }}\n              style={{\n                position: \"fixed\",\n                right: 0,\n                border: \"1px solid #a7a3a3\",\n                margin: \"-57px 20px 0px 0px\",\n                borderRadius: \"15px\",\n                padding: \"1px\",\n                background: \"white\",\n                display: \"flex\",\n              }}\n            >\n              <CloseIcon />\n            </span>\n          </div>\n        </DialogTitle>\n        <DialogContent style={{ padding: \"9px 8px\" }}>\n          {productQntOption.map((item, index) => (\n            <div\n              key={index}\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Card\n                style={{\n                  padding: \"5px\",\n                  borderRadius: \"4px\",\n                  fontSize: \"19px\",\n                  marginBottom: \" 10px\",\n                }}\n              >\n                <span>\n                  {item.quantity} {item.short_unit}\n                  <del\n                    style={{\n                      marginLeft: \"90px\",\n                      color: \"green\",\n                      fontWeight: 500,\n                    }}\n                  >\n                    ₹{item.price}\n                  </del>\n                  <span\n                    style={{\n                      marginLeft: \"14px\",\n                      color: \"green\",\n                      fontWeight: 600,\n                    }}\n                  >\n                    ₹{item.discounted_price}\n                  </span>\n                </span>\n                <span\n                  style={{\n                    right: 0,\n                    position: \"absolute\",\n                    margin: \"-1px 15px 0px 0px\",\n                  }}\n                >\n                  <Checkbox\n                    style={{ padding: \"0px\" }}\n                    onClick={() => {\n                      productQntSelected(item);\n                    }}\n                  />\n                </span>\n              </Card>\n            </div>\n          ))}\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n\nconst TopDeals = () => {\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    axios.get(get_top_deals).then((response) => {\n      setProducts(response.data.data);\n      // console.log(response.data.data);\n    });\n  }, []);\n  return (\n    <>\n      <div\n        className=\"hide-scroll-bar\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          overflowX: \"auto\",\n          width: \"100%\",\n          margin: \"10px 0px\",\n        }}\n      >\n        {products.map((item, index) => (\n          <TopDeal key={index} item={item} />\n        ))}\n      </div>\n      {/* {loading && */}\n      {/* <div style={{ textAlign: \"center\" }}>\n        <CircularProgress style={{ height: 32, width: 32, color: \"#168388\" }} />\n      </div> */}\n      {/* } */}\n    </>\n  );\n};\nexport default TopDeals;\n","/home/kishan/amapariba/myproject/src/pages/shop-by-category.js/index.js",["199","200","201","202","203","204"],"import React from \"react\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport TreeView from \"@material-ui/lab/TreeView\";\nimport Header from \"../../Component/templet/header\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n//\nimport Label from \"@material-ui/icons/Label\";\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\n\n//\nconst useTreeItemStyles = makeStyles((theme) => ({\n  root: {\n    color: theme.palette.text.secondary,\n  },\n  content: {\n    color: theme.palette.text.secondary,\n    borderTopRightRadius: theme.spacing(2),\n    borderBottomRightRadius: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    fontWeight: theme.typography.fontWeightMedium,\n    \"&$expanded\": {\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n    \"&:hover\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n    \"&$focused, &$selected, &$selected$focused\": {\n      backgroundColor: `var(--tree-view-bg-color, ${theme.palette.action.selected})`,\n      color: \"var(--tree-view-color)\",\n    },\n  },\n  group: {\n    marginLeft: 0,\n    \"& $content\": {\n      paddingLeft: theme.spacing(2),\n    },\n  },\n  expanded: {},\n  selected: {},\n  focused: {},\n  label: {\n    fontWeight: \"inherit\",\n    color: \"inherit\",\n  },\n  labelRoot: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0.5, 0, 0.5, 0.5),\n  },\n  labelIcon: {\n    marginRight: theme.spacing(1),\n  },\n  labelText: {\n    fontWeight: \"inherit\",\n    flexGrow: 1,\n  },\n}));\nfunction StyledTreeItem(props) {\n  const classes = useTreeItemStyles();\n  const {\n    bgColor,\n    color,\n    labelIcon: LabelIcon,\n    labelInfo,\n    labelText,\n    ...other\n  } = props;\n\n  return (\n    <TreeItem\n      label={\n        <div className={classes.labelRoot}>\n          <LabelIcon\n            color=\"inherit\"\n            className={classes.labelIcon}\n            style={{ fontSize: \"20px\" }}\n          />\n          <Typography\n            variant=\"body2\"\n            className={classes.labelText}\n            style={{ color: \"red\", fontSize: \"20px\" }}\n          >\n            {labelText}\n          </Typography>\n          <Typography variant=\"caption\" color=\"inherit\">\n            {labelInfo}\n          </Typography>\n        </div>\n      }\n      style={{\n        \"--tree-view-color\": color,\n        \"--tree-view-bg-color\": bgColor,\n        fontSize: \"1px\",\n      }}\n      classes={{\n        root: classes.root,\n        content: classes.content,\n        expanded: classes.expanded,\n        selected: classes.selected,\n        focused: classes.focused,\n        group: classes.group,\n        label: classes.label,\n      }}\n      {...other}\n    />\n  );\n}\n\n// StyledTreeItem.propTypes = {\n//   bgColor: PropTypes.string,\n//   color: PropTypes.string,\n//   labelIcon: PropTypes.elementType.isRequired,\n//   labelInfo: PropTypes.string,\n//   labelText: PropTypes.string.isRequired,\n// };\n\nconst useStyles = makeStyles({\n  root: {\n    // height: 240,\n    // flexGrow: 1,\n    // maxWidth: 400,\n  },\n  root2: {\n    color: \"red\",\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n});\nconst Dataforloop = [\n  {\n    id: \" 1\",\n    year: \"fruits\",\n    months: [\n      { id: \"1\", name: \"fresh fruits\", fiels: [\"Apple\", \"Grapes\"] },\n      { id: \"2\", name: \"chopped fruits\", fiels: [\"Pinaple\", \"Guava\"] },\n      { id: \"3\", name: \"fruit Juice\", fiels: [\"Watermillon\", \"mango\"] },\n    ],\n  },\n  {\n    id: \" 2\",\n    year: \"fruits\",\n    months: [\n      { id: \"1\", name: \"fresh fruits\", fiels: [\"Apple\", \"Grapes\"] },\n      { id: \"2\", name: \"chopped fruits\", fiels: [\"Pinaple\", \"Guava\"] },\n      { id: \"3\", name: \"fruit Juice\", fiels: [\"Watermillon\", \"mango\"] },\n    ],\n  },\n];\nconst ShopByItemCategory = () => {\n  const classes = useStyles();\n  //   const [years, setYears] = useState([]);\n  //   useEffect(() => {\n  //     axios\n  //       .get(\"https://careipro.com:9000/site-management/get-visiters-log-files\")\n  //       .then(({ data }) => {\n  //         setYears(data);\n  //         let current_year = data[data.length - 1];\n  //         let current_month = current_year.months[current_year.months.length - 1];\n  //         let file = current_month.fiels[current_month.fiels.length - 1];\n  //         //   onOpenFile(current_year.year, current_month.name, file);\n  //       });\n  //   }, []);\n  return (\n    <>\n      <Header pagetitle={\"pagetitle\"} />\n      <div style={{ marginTop: \"50px\" }}>\n        {/* <HomeBanner /> */}\n        {/* <ProductsByCategory /> */}\n\n        {/* <TreeView\n          className={classes.root}\n          defaultCollapseIcon={<ExpandMoreIcon />}\n          defaultExpandIcon={<ChevronRightIcon />}\n        >\n          {Dataforloop.map((year, index) => (\n            <TreeItem\n              style={{ color: \"red\", fontSize: \"30px\" }}\n              nodeId={year.id}\n              key={`year-${year.id}`}\n              label={year.year}\n            >\n              {year.months.map((month) => (\n                <TreeItem\n                  style={{ color: \"red\" }}\n                  nodeId={`${year.id}-${month.id}`}\n                  key={`${year.id}-${month.id}`}\n                  label={month.name}\n                >\n                  {month.fiels.map((file) => (\n                    <TreeItem\n                      nodeId={`${year.id}-${month.id}-${file}`}\n                      key={`${year.id}-${month.id}-${file}`}\n                      label={file}\n                      //   onClick={() => {\n                      //     onOpenFile(year.year, month.name, file);\n                      //   }}\n                    />\n                  ))}\n                </TreeItem>\n              ))}\n            </TreeItem>\n          ))}\n        </TreeView> */}\n        <TreeView\n          aria-label=\"gmail\"\n          className={classes.root}\n          defaultExpanded={[\"3\"]}\n          defaultCollapseIcon={<ArrowDropDownIcon />}\n          defaultExpandIcon={<ArrowRightIcon />}\n          defaultEndIcon={<div style={{ width: 24 }} />}\n        >\n          {/* {Dataforloop.map((year, index) => ( */}\n          {Dataforloop.map((year, index) => (\n            <StyledTreeItem\n              nodeId={year.id}\n              key={`year-${year.id}`}\n              //   label={year.year}\n              nodeId={year.id}\n              labelText={year.year}\n              labelIcon={Label}\n            >\n              {year.months.map((month) => (\n                <StyledTreeItem\n                  nodeId={`${year.id}-${month.id}`}\n                  key={`${year.id}-${month.id}`}\n                  //   label={month.name}\n                  labelText={month.name}\n                  labelIcon={SupervisorAccountIcon}\n                  labelInfo=\"90\"\n                  color=\"#1a73e8\"\n                  bgColor=\"#e8f0fe\"\n                >\n                  {month.fiels.map((file) => (\n                    <StyledTreeItem\n                      nodeId={`${year.id}-${month.id}-${file}`}\n                      key={`${year.id}-${month.id}-${file}`}\n                      labelText={file}\n                      labelIcon={SupervisorAccountIcon}\n                      labelInfo=\"90\"\n                      color=\"#1a73e8\"\n                      bgColor=\"#e8f0fe\"\n                    />\n                  ))}\n                </StyledTreeItem>\n              ))}\n            </StyledTreeItem>\n            //   <StyledTreeItem nodeId=\"4\" labelText=\"History\" labelIcon={Label} />\n          ))}\n        </TreeView>\n      </div>\n    </>\n  );\n};\n\nexport default ShopByItemCategory;\n//\n\n//\n","/home/kishan/amapariba/myproject/src/pages/profile/my-account.js",["205","206","207"],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":16,"column":12,"nodeType":"214","messageId":"215","endLine":16,"endColumn":18},{"ruleId":"216","severity":1,"message":"217","line":42,"column":6,"nodeType":"218","endLine":42,"endColumn":8,"suggestions":"219"},{"ruleId":"212","severity":1,"message":"213","line":14,"column":12,"nodeType":"214","messageId":"215","endLine":14,"endColumn":18},{"ruleId":"216","severity":1,"message":"220","line":36,"column":6,"nodeType":"218","endLine":36,"endColumn":8,"suggestions":"221"},{"ruleId":"212","severity":1,"message":"222","line":4,"column":23,"nodeType":"214","messageId":"215","endLine":4,"endColumn":34},{"ruleId":"212","severity":1,"message":"223","line":8,"column":10,"nodeType":"214","messageId":"215","endLine":8,"endColumn":26},{"ruleId":"212","severity":1,"message":"224","line":12,"column":10,"nodeType":"214","messageId":"215","endLine":12,"endColumn":19},{"ruleId":"212","severity":1,"message":"213","line":8,"column":12,"nodeType":"214","messageId":"215","endLine":8,"endColumn":18},{"ruleId":"212","severity":1,"message":"225","line":25,"column":7,"nodeType":"214","messageId":"215","endLine":25,"endColumn":12},{"ruleId":"212","severity":1,"message":"213","line":24,"column":12,"nodeType":"214","messageId":"215","endLine":24,"endColumn":18},{"ruleId":"212","severity":1,"message":"226","line":28,"column":10,"nodeType":"214","messageId":"215","endLine":28,"endColumn":22},{"ruleId":"212","severity":1,"message":"213","line":12,"column":12,"nodeType":"214","messageId":"215","endLine":12,"endColumn":18},{"ruleId":"212","severity":1,"message":"227","line":65,"column":9,"nodeType":"214","messageId":"215","endLine":65,"endColumn":19},{"ruleId":"228","severity":1,"message":"229","line":63,"column":64,"nodeType":"230","messageId":"231","endLine":63,"endColumn":66},{"ruleId":"228","severity":1,"message":"229","line":125,"column":37,"nodeType":"230","messageId":"231","endLine":125,"endColumn":39},{"ruleId":"216","severity":1,"message":"232","line":139,"column":6,"nodeType":"218","endLine":139,"endColumn":14,"suggestions":"233"},{"ruleId":"212","severity":1,"message":"234","line":10,"column":3,"nodeType":"214","messageId":"215","endLine":10,"endColumn":19},{"ruleId":"212","severity":1,"message":"235","line":3,"column":8,"nodeType":"214","messageId":"215","endLine":3,"endColumn":22},{"ruleId":"212","severity":1,"message":"236","line":4,"column":8,"nodeType":"214","messageId":"215","endLine":4,"endColumn":24},{"ruleId":"212","severity":1,"message":"224","line":8,"column":10,"nodeType":"214","messageId":"215","endLine":8,"endColumn":19},{"ruleId":"212","severity":1,"message":"237","line":9,"column":10,"nodeType":"214","messageId":"215","endLine":9,"endColumn":18},{"ruleId":"212","severity":1,"message":"238","line":10,"column":8,"nodeType":"214","messageId":"215","endLine":10,"endColumn":13},{"ruleId":"239","severity":1,"message":"240","line":238,"column":15,"nodeType":"241","endLine":238,"endColumn":31},{"ruleId":"212","severity":1,"message":"242","line":9,"column":3,"nodeType":"214","messageId":"215","endLine":9,"endColumn":9},{"ruleId":"212","severity":1,"message":"243","line":10,"column":3,"nodeType":"214","messageId":"215","endLine":10,"endColumn":9},{"ruleId":"244","severity":1,"message":"245","line":92,"column":13,"nodeType":"246","endLine":92,"endColumn":63},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"no-unused-vars","'basket' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispacher', 'is_loggedin', and 'user_info.id'. Either include them or remove the dependency array.","ArrayExpression",["249"],"React Hook useEffect has a missing dependency: 'dispacher'. Either include it or remove the dependency array.",["250"],"'useSelector' is defined but never used.","'get_basket_items' is defined but never used.","'useEffect' is defined but never used.","'style' is assigned a value but never used.","'basketItemId' is assigned a value but never used.","'seasonitem' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'currentProductObjct' and 'data.product_id'. Either include them or remove the dependency array.",["251"],"'get_product_list' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Button' is defined but never used.","'Dialog' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},"Update the dependencies array to be: [dispacher, is_loggedin, user_info.id]",{"range":"258","text":"259"},"Update the dependencies array to be: [dispacher]",{"range":"260","text":"261"},"Update the dependencies array to be: [currentProductObjct, data.product_id, result]",{"range":"262","text":"263"},[1355,1357],"[dispacher, is_loggedin, user_info.id]",[1134,1136],"[dispacher]",[4472,4480],"[currentProductObjct, data.product_id, result]"]